{
	"id": "bb8d45464fdf6c39f66f5fa8f9f8ccec",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/AMM.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract DEX {\r\n\r\n        IERC20 tokenERC;\r\n\r\n        uint256 public total_liquidity;\r\n        \r\n        //FEE - Profits for deployer\r\n        address private deployer;\r\n        uint256 public fee;\r\n\r\n        //Investors\r\n        mapping(address => uint256) public investors;\r\n\r\n        //LP Providers\r\n        mapping (address => uint256) public liquidity;\r\n\r\n        event Initialize (uint256 _value);\r\n        event TokensSwapped (uint256 _value);\r\n        event ETHSwapped (uint256 _value);\r\n        event Deposit (uint256 _value);\r\n        event Withdraw (uint256 _valueETH, uint256 _valueToken);\r\n\r\n        //EVENT VARIABLEs\r\n\r\n        uint256 public tokens_received;\r\n        uint256 public eth_received;\r\n        uint256 public liq_added;\r\n\r\n        constructor(){\r\n                deployer = tx.origin;\r\n        }\r\n\r\n        function initialize(address token_address, uint256 token_amount) external payable {\r\n                require(total_liquidity == 0);\r\n                require(token_amount > 0);\r\n                require(msg.value > 0);\r\n\r\n                fee = 0;\r\n                tokenERC = IERC20(token_address);\r\n                \r\n                total_liquidity = address(this).balance;\r\n                liquidity[tx.origin] = total_liquidity;          \r\n\r\n                \r\n                require(tokenERC.transferFrom(tx.origin, address(this), token_amount));\r\n\r\n                emit Initialize(total_liquidity);\r\n        }\r\n\r\n        function calculatePrice(uint256 input_value, uint256 input_pool, uint256 output_pool) internal pure returns (uint256) {\r\n                return (input_value * output_pool) / (input_pool + input_value);\r\n        }\r\n\r\n\r\n        function priceERC(uint256 eth) external view returns(uint256){\r\n                return calculatePrice(eth, (address(this).balance - eth), tokenERC.balanceOf(address(this)));\r\n        }\r\n\r\n        function priceETH(uint256 erc) external view returns(uint256){\r\n                return calculatePrice(erc, tokenERC.balanceOf(address(this)), address(this).balance);\r\n        }\r\n\r\n        function ethToErc() external payable {\r\n                uint256 tokens_swapped = calculatePrice(msg.value, (address(this).balance - msg.value), tokenERC.balanceOf(address(this)));\r\n\r\n                require(tokenERC.transfer(tx.origin, tokens_swapped));\r\n\r\n                fee += msg.value;\r\n                investors[tx.origin] += msg.value;\r\n\r\n                tokens_received = tokens_swapped;\r\n\r\n                emit TokensSwapped(tokens_swapped);\r\n\r\n        }\r\n\r\n\r\n        function ercToEth(uint256 token_amount) external {\r\n\r\n                uint256 eth_swapped = calculatePrice(token_amount, tokenERC.balanceOf(address(this)), address(this).balance);\r\n\r\n                (bool success, ) = tx.origin.call{value: eth_swapped}(\"\");\r\n                require(success, \"Transfer failed.\");    \r\n\r\n                require(tokenERC.transferFrom(tx.origin, address(this), token_amount));\r\n\r\n                fee += eth_swapped;\r\n                emit ETHSwapped(eth_swapped);\r\n                eth_received = eth_swapped;\r\n        }\r\n\r\n        function deposit() external payable {\r\n                require(msg.value > 0);\r\n                uint256 token_amount = ((msg.value * tokenERC.balanceOf(address(this))) / (address(this).balance - msg.value));\r\n                uint256 liquidity_added = (msg.value * total_liquidity) / (address(this).balance - msg.value);\r\n\r\n                liquidity[tx.origin] += liquidity_added;\r\n\r\n                total_liquidity += liquidity_added;\r\n                require(tokenERC.transferFrom(tx.origin, address(this), token_amount));\r\n\r\n                emit Deposit(liquidity_added);\r\n                liq_added = liquidity_added;\r\n        }\r\n\r\n        function liquidityAdded(uint256 eth) external view returns (uint256, uint256){\r\n                uint256 token_amount = ((eth * tokenERC.balanceOf(address(this))) / (address(this).balance));\r\n                uint256 liquidity_added = (eth * total_liquidity) / (address(this).balance);\r\n\r\n                return (token_amount, liquidity_added);\r\n\r\n        }\r\n\r\n\r\n        function withdraw(uint256 value) external {\r\n                uint256 eth_value = (value * address(this).balance) / total_liquidity;\r\n                uint256 token_value = (value * tokenERC.balanceOf(address(this))) / total_liquidity;\r\n\r\n                total_liquidity -= eth_value;\r\n\r\n                (bool success, ) = tx.origin.call{value: eth_value}(\"\");\r\n                require(success, \"Transfer failed.\");    \r\n\r\n                require(tokenERC.transfer(tx.origin, token_value));\r\n\r\n                emit Withdraw(eth_value, token_value);\r\n                eth_received = eth_value;\r\n                tokens_received = token_value;\r\n        }\r\n\r\n        function liquiditySubstracted(uint256 value) external view returns (uint256, uint256){\r\n                uint256 eth_value = (value * address(this).balance) / total_liquidity;\r\n                uint256 token_value = (value * tokenERC.balanceOf(address(this))) / total_liquidity;\r\n                \r\n                return (eth_value, token_value);\r\n\r\n        }\r\n\r\n        function getTokenBalance() external view returns (uint256) {\r\n                return tokenERC.balanceOf(address(this));\r\n        }\r\n\r\n        function getBalance() external view returns (uint256) {\r\n                return address(this).balance;\r\n        }\r\n\r\n        function distributeFee() external{\r\n                uint256 profit = (fee * 3) / 1000;\r\n                (bool success, ) = tx.origin.call{value: profit}(\"\");\r\n                require(success, \"Transfer failed.\");\r\n        }\r\n\r\n        function invested(address who) external view returns (uint256){\r\n                return investors[who];\r\n        }\r\n\r\n        function finish() external {\r\n                tokenERC.transfer(tx.origin, tokenERC.balanceOf(address(this)) );\r\n                selfdestruct(payable(tx.origin));\r\n        }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 300
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":1428:1442   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1421:1443   */\n      iszero\n        /* \"#utility.yul\":1403:1444   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1391:1393   */\n      0x20\n        /* \"#utility.yul\":1376:1394   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_18\n        /* \"#utility.yul\":1263:1450   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":4992:5017   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4980:4982   */\n      0x20\n        /* \"#utility.yul\":4965:4983   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_18\n        /* \"#utility.yul\":4846:5023   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      tag_20\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"#utility.yul\":5170:5206   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5158:5160   */\n      0x20\n        /* \"#utility.yul\":5143:5161   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      tag_18\n        /* \"#utility.yul\":5028:5212   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_20\n      tag_40\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_26\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_16\n      tag_49\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_20\n      tag_52\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_20\n      tag_56\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_26\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_67\n      swap1\n      tag_66\n      jump\t// in\n    tag_67:\n      dup1\n      iszero\n      tag_68\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_69\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_68)\n    tag_69:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_70:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_70\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_74\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_74:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_81:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_74\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_88\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6068:6078  addedValue */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6831:6846  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6827  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6846  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4642:4644   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4624:4645   */\n      mstore\n        /* \"#utility.yul\":4681:4683   */\n      0x25\n        /* \"#utility.yul\":4661:4679   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4654:4684   */\n      mstore\n        /* \"#utility.yul\":4720:4754   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4700:4718   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4693:4755   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4771:4789   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4764:4799   */\n      mstore\n        /* \"#utility.yul\":4816:4835   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6931:6936  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6938:6945  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6966:6981  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6963  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6981  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6930  _approve */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_74\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10241:10260  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4237:4239   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4219:4240   */\n      mstore\n        /* \"#utility.yul\":4276:4278   */\n      0x24\n        /* \"#utility.yul\":4256:4274   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4249:4279   */\n      mstore\n        /* \"#utility.yul\":4315:4349   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4295:4313   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4288:4350   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4366:4384   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4359:4393   */\n      mstore\n        /* \"#utility.yul\":4410:4429   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_101\n        /* \"#utility.yul\":4035:4435   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10340  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2663:2665   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2645:2666   */\n      mstore\n        /* \"#utility.yul\":2702:2704   */\n      0x22\n        /* \"#utility.yul\":2682:2700   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2675:2705   */\n      mstore\n        /* \"#utility.yul\":2741:2775   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2721:2739   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2714:2776   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2792:2810   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2785:2817   */\n      mstore\n        /* \"#utility.yul\":2834:2853   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_101\n        /* \"#utility.yul\":2461:2859   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10401  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10417  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10426  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":4992:5017   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4965:4983   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10891:10915  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10957:10994  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10953:11196  if (currentAllowance != type(uint256).max) {... */\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11038:11044  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11034  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11044  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3066:3068   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3048:3069   */\n      mstore\n        /* \"#utility.yul\":3105:3107   */\n      0x1d\n        /* \"#utility.yul\":3085:3103   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3078:3108   */\n      mstore\n        /* \"#utility.yul\":3144:3175   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3124:3142   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3117:3176   */\n      mstore\n        /* \"#utility.yul\":3193:3211   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_101\n        /* \"#utility.yul\":2864:3217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11134  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11136:11143  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11164:11170  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11161  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11170  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11128  _approve */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11202  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7475:8126  function _transfer(... */\n    tag_82:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7619  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3831:3833   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3813:3834   */\n      mstore\n        /* \"#utility.yul\":3870:3872   */\n      0x25\n        /* \"#utility.yul\":3850:3868   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3843:3873   */\n      mstore\n        /* \"#utility.yul\":3909:3943   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3889:3907   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3882:3944   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3960:3978   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3953:3988   */\n      mstore\n        /* \"#utility.yul\":4005:4024   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_101\n        /* \"#utility.yul\":3629:4030   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7679:7695  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2259:2261   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2241:2262   */\n      mstore\n        /* \"#utility.yul\":2298:2300   */\n      0x23\n        /* \"#utility.yul\":2278:2296   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2271:2301   */\n      mstore\n        /* \"#utility.yul\":2337:2371   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2317:2335   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2310:2372   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2388:2406   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2381:2414   */\n      mstore\n        /* \"#utility.yul\":2431:2450   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_101\n        /* \"#utility.yul\":2057:2456   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7795:7814  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7850:7871  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3424:3426   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3406:3427   */\n      mstore\n        /* \"#utility.yul\":3463:3465   */\n      0x26\n        /* \"#utility.yul\":3443:3461   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3436:3466   */\n      mstore\n        /* \"#utility.yul\":3502:3536   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3482:3500   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3475:3537   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3553:3571   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3546:3582   */\n      mstore\n        /* \"#utility.yul\":3599:3618   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_101\n        /* \"#utility.yul\":3222:3624   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7966:7986  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7986  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8019  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_136\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_89\n      jump\t// in\n    tag_136:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8062  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8058  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8064:8070  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_137\n      swap2\n        /* \"#utility.yul\":4992:5017   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4980:4982   */\n      0x20\n        /* \"#utility.yul\":4965:4983   */\n      add\n      swap1\n        /* \"#utility.yul\":4846:5023   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8082:8119  _afterTokenTransfer(from, to, amount) */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11786:11907  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:210   */\n    tag_143:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":111:204   */\n    tag_145:\n        /* \"#utility.yul\":14:210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":215:401   */\n    tag_45:\n        /* \"#utility.yul\":274:280   */\n      0x00\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":315:324   */\n      dup3\n        /* \"#utility.yul\":306:313   */\n      dup5\n        /* \"#utility.yul\":302:325   */\n      sub\n        /* \"#utility.yul\":298:330   */\n      slt\n        /* \"#utility.yul\":295:347   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":340:341   */\n      dup1\n        /* \"#utility.yul\":333:345   */\n      revert\n        /* \"#utility.yul\":295:347   */\n    tag_147:\n        /* \"#utility.yul\":366:395   */\n      tag_148\n        /* \"#utility.yul\":385:394   */\n      dup3\n        /* \"#utility.yul\":366:395   */\n      tag_143\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":356:395   */\n      swap4\n        /* \"#utility.yul\":215:401   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":406:666   */\n    tag_61:\n        /* \"#utility.yul\":474:480   */\n      0x00\n        /* \"#utility.yul\":482:488   */\n      dup1\n        /* \"#utility.yul\":535:537   */\n      0x40\n        /* \"#utility.yul\":523:532   */\n      dup4\n        /* \"#utility.yul\":514:521   */\n      dup6\n        /* \"#utility.yul\":510:533   */\n      sub\n        /* \"#utility.yul\":506:538   */\n      slt\n        /* \"#utility.yul\":503:555   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":551:552   */\n      0x00\n        /* \"#utility.yul\":548:549   */\n      dup1\n        /* \"#utility.yul\":541:553   */\n      revert\n        /* \"#utility.yul\":503:555   */\n    tag_150:\n        /* \"#utility.yul\":574:603   */\n      tag_151\n        /* \"#utility.yul\":593:602   */\n      dup4\n        /* \"#utility.yul\":574:603   */\n      tag_143\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":564:603   */\n      swap2\n      pop\n        /* \"#utility.yul\":622:660   */\n      tag_152\n        /* \"#utility.yul\":656:658   */\n      0x20\n        /* \"#utility.yul\":645:654   */\n      dup5\n        /* \"#utility.yul\":641:659   */\n      add\n        /* \"#utility.yul\":622:660   */\n      tag_143\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":612:660   */\n      swap1\n      pop\n        /* \"#utility.yul\":406:666   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":671:999   */\n    tag_32:\n        /* \"#utility.yul\":748:754   */\n      0x00\n        /* \"#utility.yul\":756:762   */\n      dup1\n        /* \"#utility.yul\":764:770   */\n      0x00\n        /* \"#utility.yul\":817:819   */\n      0x60\n        /* \"#utility.yul\":805:814   */\n      dup5\n        /* \"#utility.yul\":796:803   */\n      dup7\n        /* \"#utility.yul\":792:815   */\n      sub\n        /* \"#utility.yul\":788:820   */\n      slt\n        /* \"#utility.yul\":785:837   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":833:834   */\n      0x00\n        /* \"#utility.yul\":830:831   */\n      dup1\n        /* \"#utility.yul\":823:835   */\n      revert\n        /* \"#utility.yul\":785:837   */\n    tag_154:\n        /* \"#utility.yul\":856:885   */\n      tag_155\n        /* \"#utility.yul\":875:884   */\n      dup5\n        /* \"#utility.yul\":856:885   */\n      tag_143\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":846:885   */\n      swap3\n      pop\n        /* \"#utility.yul\":904:942   */\n      tag_156\n        /* \"#utility.yul\":938:940   */\n      0x20\n        /* \"#utility.yul\":927:936   */\n      dup6\n        /* \"#utility.yul\":923:941   */\n      add\n        /* \"#utility.yul\":904:942   */\n      tag_143\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":894:942   */\n      swap2\n      pop\n        /* \"#utility.yul\":989:991   */\n      0x40\n        /* \"#utility.yul\":978:987   */\n      dup5\n        /* \"#utility.yul\":974:992   */\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n        /* \"#utility.yul\":951:993   */\n      swap1\n      pop\n        /* \"#utility.yul\":671:999   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1004:1258   */\n    tag_22:\n        /* \"#utility.yul\":1072:1078   */\n      0x00\n        /* \"#utility.yul\":1080:1086   */\n      dup1\n        /* \"#utility.yul\":1133:1135   */\n      0x40\n        /* \"#utility.yul\":1121:1130   */\n      dup4\n        /* \"#utility.yul\":1112:1119   */\n      dup6\n        /* \"#utility.yul\":1108:1131   */\n      sub\n        /* \"#utility.yul\":1104:1136   */\n      slt\n        /* \"#utility.yul\":1101:1153   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":1149:1150   */\n      0x00\n        /* \"#utility.yul\":1146:1147   */\n      dup1\n        /* \"#utility.yul\":1139:1151   */\n      revert\n        /* \"#utility.yul\":1101:1153   */\n    tag_158:\n        /* \"#utility.yul\":1172:1201   */\n      tag_159\n        /* \"#utility.yul\":1191:1200   */\n      dup4\n        /* \"#utility.yul\":1172:1201   */\n      tag_143\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1162:1201   */\n      swap5\n        /* \"#utility.yul\":1248:1250   */\n      0x20\n        /* \"#utility.yul\":1233:1251   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1220:1252   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1004:1258   */\n      jump\t// out\n        /* \"#utility.yul\":1455:2052   */\n    tag_19:\n        /* \"#utility.yul\":1567:1571   */\n      0x00\n        /* \"#utility.yul\":1596:1598   */\n      0x20\n        /* \"#utility.yul\":1625:1627   */\n      dup1\n        /* \"#utility.yul\":1614:1623   */\n      dup4\n        /* \"#utility.yul\":1607:1628   */\n      mstore\n        /* \"#utility.yul\":1657:1663   */\n      dup4\n        /* \"#utility.yul\":1651:1664   */\n      mload\n        /* \"#utility.yul\":1700:1706   */\n      dup1\n        /* \"#utility.yul\":1695:1697   */\n      dup3\n        /* \"#utility.yul\":1684:1693   */\n      dup6\n        /* \"#utility.yul\":1680:1698   */\n      add\n        /* \"#utility.yul\":1673:1707   */\n      mstore\n        /* \"#utility.yul\":1725:1726   */\n      0x00\n        /* \"#utility.yul\":1735:1875   */\n    tag_162:\n        /* \"#utility.yul\":1749:1755   */\n      dup2\n        /* \"#utility.yul\":1746:1747   */\n      dup2\n        /* \"#utility.yul\":1743:1756   */\n      lt\n        /* \"#utility.yul\":1735:1875   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":1844:1858   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1840:1863   */\n      dup4\n      add\n        /* \"#utility.yul\":1834:1864   */\n      mload\n        /* \"#utility.yul\":1810:1827   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1829:1831   */\n      0x40\n        /* \"#utility.yul\":1806:1832   */\n      add\n        /* \"#utility.yul\":1799:1865   */\n      mstore\n        /* \"#utility.yul\":1764:1774   */\n      dup3\n      add\n        /* \"#utility.yul\":1735:1875   */\n      jump(tag_162)\n    tag_164:\n        /* \"#utility.yul\":1893:1899   */\n      dup2\n        /* \"#utility.yul\":1890:1891   */\n      dup2\n        /* \"#utility.yul\":1887:1900   */\n      gt\n        /* \"#utility.yul\":1884:1975   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":1963:1964   */\n      0x00\n        /* \"#utility.yul\":1958:1960   */\n      0x40\n        /* \"#utility.yul\":1949:1955   */\n      dup4\n        /* \"#utility.yul\":1938:1947   */\n      dup8\n        /* \"#utility.yul\":1934:1956   */\n      add\n        /* \"#utility.yul\":1930:1961   */\n      add\n        /* \"#utility.yul\":1923:1965   */\n      mstore\n        /* \"#utility.yul\":1884:1975   */\n    tag_165:\n      pop\n        /* \"#utility.yul\":2036:2038   */\n      0x1f\n        /* \"#utility.yul\":2015:2030   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2011:2040   */\n      and\n        /* \"#utility.yul\":1996:2041   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2043:2045   */\n      0x40\n        /* \"#utility.yul\":1992:2046   */\n      add\n      swap4\n        /* \"#utility.yul\":1455:2052   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5217:5442   */\n    tag_89:\n        /* \"#utility.yul\":5257:5260   */\n      0x00\n        /* \"#utility.yul\":5288:5289   */\n      dup3\n        /* \"#utility.yul\":5284:5290   */\n      not\n        /* \"#utility.yul\":5281:5282   */\n      dup3\n        /* \"#utility.yul\":5278:5291   */\n      gt\n        /* \"#utility.yul\":5275:5411   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":5333:5343   */\n      0x4e487b71\n        /* \"#utility.yul\":5328:5331   */\n      0xe0\n        /* \"#utility.yul\":5324:5344   */\n      shl\n        /* \"#utility.yul\":5321:5322   */\n      0x00\n        /* \"#utility.yul\":5314:5345   */\n      mstore\n        /* \"#utility.yul\":5368:5372   */\n      0x11\n        /* \"#utility.yul\":5365:5366   */\n      0x04\n        /* \"#utility.yul\":5358:5373   */\n      mstore\n        /* \"#utility.yul\":5396:5400   */\n      0x24\n        /* \"#utility.yul\":5393:5394   */\n      0x00\n        /* \"#utility.yul\":5386:5401   */\n      revert\n        /* \"#utility.yul\":5275:5411   */\n    tag_176:\n      pop\n        /* \"#utility.yul\":5427:5436   */\n      add\n      swap1\n        /* \"#utility.yul\":5217:5442   */\n      jump\t// out\n        /* \"#utility.yul\":5447:5827   */\n    tag_66:\n        /* \"#utility.yul\":5526:5527   */\n      0x01\n        /* \"#utility.yul\":5522:5534   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5569:5581   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5590:5651   */\n      tag_178\n      jumpi\n        /* \"#utility.yul\":5644:5648   */\n      0x7f\n        /* \"#utility.yul\":5636:5642   */\n      dup3\n        /* \"#utility.yul\":5632:5649   */\n      and\n        /* \"#utility.yul\":5622:5649   */\n      swap2\n      pop\n        /* \"#utility.yul\":5590:5651   */\n    tag_178:\n        /* \"#utility.yul\":5697:5699   */\n      0x20\n        /* \"#utility.yul\":5689:5695   */\n      dup3\n        /* \"#utility.yul\":5686:5700   */\n      lt\n        /* \"#utility.yul\":5666:5684   */\n      dup2\n        /* \"#utility.yul\":5663:5701   */\n      eq\n        /* \"#utility.yul\":5660:5821   */\n      iszero\n      tag_179\n      jumpi\n        /* \"#utility.yul\":5743:5753   */\n      0x4e487b71\n        /* \"#utility.yul\":5738:5741   */\n      0xe0\n        /* \"#utility.yul\":5734:5754   */\n      shl\n        /* \"#utility.yul\":5731:5732   */\n      0x00\n        /* \"#utility.yul\":5724:5755   */\n      mstore\n        /* \"#utility.yul\":5778:5782   */\n      0x22\n        /* \"#utility.yul\":5775:5776   */\n      0x04\n        /* \"#utility.yul\":5768:5783   */\n      mstore\n        /* \"#utility.yul\":5806:5810   */\n      0x24\n        /* \"#utility.yul\":5803:5804   */\n      0x00\n        /* \"#utility.yul\":5796:5811   */\n      revert\n        /* \"#utility.yul\":5660:5821   */\n    tag_179:\n      pop\n        /* \"#utility.yul\":5447:5827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208e36c79fd33da0381c79d54a8eb06b905f22b3b2eddc8a7cad7c8e5d4e6bd35d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:5"
															},
															"nodeType": "YulIf",
															"src": "88:55:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:5"
															},
															"nodeType": "YulIf",
															"src": "221:36:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:5"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:5"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:5"
															},
															"nodeType": "YulIf",
															"src": "404:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:5"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:5"
															},
															"nodeType": "YulIf",
															"src": "566:53:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:5"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:5"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:5",
																"statements": []
															},
															"src": "647:133:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:5"
															},
															"nodeType": "YulIf",
															"src": "789:80:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:5",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:5",
														"type": ""
													}
												],
												"src": "14:885:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:5"
															},
															"nodeType": "YulIf",
															"src": "1032:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:5"
															},
															"nodeType": "YulIf",
															"src": "1169:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:5"
															},
															"nodeType": "YulIf",
															"src": "1342:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:5",
														"type": ""
													}
												],
												"src": "904:562:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:5"
															},
															"nodeType": "YulIf",
															"src": "1614:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:5"
															},
															"nodeType": "YulIf",
															"src": "1684:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:5",
														"type": ""
													}
												],
												"src": "1471:380:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b7038038062000b708339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6108de80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100b95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610177578063a9059cbb1461018a578063dd62ed3e1461019d57600080fd5b8063395093511461013357806370a082311461014657806395d89b411461016f57600080fd5b806306fdde03146100be578063095ea7b3146100dc57806318160ddd146100ff57806323b872dd14610111578063313ce56714610124575b600080fd5b6100c66101d6565b6040516100d391906107f2565b60405180910390f35b6100ef6100ea3660046107c8565b610268565b60405190151581526020016100d3565b6002545b6040519081526020016100d3565b6100ef61011f36600461078c565b610280565b604051601281526020016100d3565b6100ef6101413660046107c8565b6102a4565b610103610154366004610737565b6001600160a01b031660009081526020819052604090205490565b6100c66102e3565b6100ef6101853660046107c8565b6102f2565b6100ef6101983660046107c8565b610389565b6101036101ab366004610759565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101e59061086d565b80601f01602080910402602001604051908101604052809291908181526020018280546102119061086d565b801561025e5780601f106102335761010080835404028352916020019161025e565b820191906000526020600020905b81548152906001019060200180831161024157829003601f168201915b5050505050905090565b600033610276818585610397565b5060019392505050565b60003361028e8582856104bb565b61029985858561054d565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061027690829086906102de908790610847565b610397565b6060600480546101e59061086d565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561037c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102998286868403610397565b60003361027681858561054d565b6001600160a01b0383166103f95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610373565b6001600160a01b03821661045a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610373565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610547578181101561053a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610373565b6105478484848403610397565b50505050565b6001600160a01b0383166105b15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610373565b6001600160a01b0382166106135760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610373565b6001600160a01b0383166000908152602081905260409020548181101561068b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610373565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106c2908490610847565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161070e91815260200190565b60405180910390a3610547565b80356001600160a01b038116811461073257600080fd5b919050565b60006020828403121561074957600080fd5b6107528261071b565b9392505050565b6000806040838503121561076c57600080fd5b6107758361071b565b91506107836020840161071b565b90509250929050565b6000806000606084860312156107a157600080fd5b6107aa8461071b565b92506107b86020850161071b565b9150604084013590509250925092565b600080604083850312156107db57600080fd5b6107e48361071b565b946020939093013593505050565b600060208083528351808285015260005b8181101561081f57858101830151858201604001528201610803565b81811115610831576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561086857634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061088157607f821691505b602082108114156108a257634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212208e36c79fd33da0381c79d54a8eb06b905f22b3b2eddc8a7cad7c8e5d4e6bd35d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB70 CODESIZE SUB DUP1 PUSH3 0xB70 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8DE DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC6 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0xEA CALLDATASIZE PUSH1 0x4 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD3 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x78C JUMP JUMPDEST PUSH2 0x280 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD3 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x141 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x2A4 JUMP JUMPDEST PUSH2 0x103 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0x737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x389 JUMP JUMPDEST PUSH2 0x103 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0x759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1E5 SWAP1 PUSH2 0x86D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x211 SWAP1 PUSH2 0x86D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x25E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x233 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x25E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x241 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x276 DUP2 DUP6 DUP6 PUSH2 0x397 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x28E DUP6 DUP3 DUP6 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x299 DUP6 DUP6 DUP6 PUSH2 0x54D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x276 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2DE SWAP1 DUP8 SWAP1 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x397 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1E5 SWAP1 PUSH2 0x86D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x37C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x299 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x397 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x276 DUP2 DUP6 DUP6 PUSH2 0x54D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x373 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x373 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x547 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x373 JUMP JUMPDEST PUSH2 0x547 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x397 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x373 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x373 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x373 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6C2 SWAP1 DUP5 SWAP1 PUSH2 0x847 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x70E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x547 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x752 DUP3 PUSH2 0x71B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x76C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x775 DUP4 PUSH2 0x71B JUMP JUMPDEST SWAP2 POP PUSH2 0x783 PUSH1 0x20 DUP5 ADD PUSH2 0x71B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP5 PUSH2 0x71B JUMP JUMPDEST SWAP3 POP PUSH2 0x7B8 PUSH1 0x20 DUP6 ADD PUSH2 0x71B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E4 DUP4 PUSH2 0x71B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x81F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x803 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x831 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x868 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x881 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x8A2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 CALLDATASIZE 0xC7 SWAP16 0xD3 RETURNDATASIZE LOG0 CODESIZE SHR PUSH26 0xD54A8EB06B905F22B3B2EDDC8A7CAD7C8E5D4E6BD35D64736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "1403:11214:0:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:0;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;1403:11214;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:11214:0;;;-1:-1:-1;1403:11214:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:5;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:5;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:5;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:5:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:5;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;1403:11214:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_519": {
									"entryPoint": 919,
									"id": 519,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": null,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_700": {
									"entryPoint": null,
									"id": 700,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_562": {
									"entryPoint": 1211,
									"id": 562,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 1357,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": null,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 616,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 754,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 676,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 470,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 739,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 640,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 905,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5829:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:5"
															},
															"nodeType": "YulIf",
															"src": "111:93:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "14:196:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "285:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "331:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "340:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "333:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "333:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "306:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "315:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "302:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "302:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:32:5"
															},
															"nodeType": "YulIf",
															"src": "295:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "356:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "385:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "366:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "251:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "262:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:5",
														"type": ""
													}
												],
												"src": "215:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:173:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "539:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "548:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "551:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "541:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "541:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "541:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "514:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "523:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "510:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "510:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "535:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "506:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "506:32:5"
															},
															"nodeType": "YulIf",
															"src": "503:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "564:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "574:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "574:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "564:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "612:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "645:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "656:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "641:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "641:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "622:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "451:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "462:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "474:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "482:6:5",
														"type": ""
													}
												],
												"src": "406:260:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "775:224:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "821:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "830:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "833:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "823:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "823:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "796:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "805:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "792:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "792:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "817:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "788:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:32:5"
															},
															"nodeType": "YulIf",
															"src": "785:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "846:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "875:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "856:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "846:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "894:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "927:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "938:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "923:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "923:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "904:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "904:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "725:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "736:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "748:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "756:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "764:6:5",
														"type": ""
													}
												],
												"src": "671:328:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1091:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1137:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1146:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1149:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1139:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1139:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1139:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1112:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1108:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1108:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1133:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1104:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1104:32:5"
															},
															"nodeType": "YulIf",
															"src": "1101:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1162:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1191:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1172:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1162:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1210:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1237:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1248:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1220:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1210:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1049:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1060:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1072:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1080:6:5",
														"type": ""
													}
												],
												"src": "1004:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1358:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1368:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1380:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1391:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1376:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1368:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1410:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1435:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1428:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1428:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1421:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1421:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1403:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1327:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1338:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1349:4:5",
														"type": ""
													}
												],
												"src": "1263:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1576:476:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1586:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1596:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1590:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1614:9:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1625:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1607:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1607:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1607:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1637:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1657:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1651:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1651:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1641:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1684:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1695:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1680:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1680:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1700:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1673:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1716:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1725:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1720:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1785:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1814:9:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1825:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1810:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1810:17:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1829:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1806:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1806:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1848:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1856:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1844:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1844:14:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1860:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1840:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1840:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1834:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1834:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1799:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1799:66:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1799:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1746:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1749:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1743:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1743:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1757:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1759:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1768:1:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1771:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1764:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1764:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1759:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1739:3:5",
																"statements": []
															},
															"src": "1735:140:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1909:66:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1938:9:5"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1949:6:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1934:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1934:22:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1958:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1930:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1930:31:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1963:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1923:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1923:42:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1923:42:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1890:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1893:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1887:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1887:13:5"
															},
															"nodeType": "YulIf",
															"src": "1884:91:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1984:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2019:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2027:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2015:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2015:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2036:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2032:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2032:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2011:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2011:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1996:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1996:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1992:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1984:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1545:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1556:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1567:4:5",
														"type": ""
													}
												],
												"src": "1455:597:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2231:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2248:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2259:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2241:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2241:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2241:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2282:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2293:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2278:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2278:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2298:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2271:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2271:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2271:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2321:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2332:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2317:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2337:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2310:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2310:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2392:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2403:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2388:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2408:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2381:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2381:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2381:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2423:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2435:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2446:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2423:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2208:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2222:4:5",
														"type": ""
													}
												],
												"src": "2057:399:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2635:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2652:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2663:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2645:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2645:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2645:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2686:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2697:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2702:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2675:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2675:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2675:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2725:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2736:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2721:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2721:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2741:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2714:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2714:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2714:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2796:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2807:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2792:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2792:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2812:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2785:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2785:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2785:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2826:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2838:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2849:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2834:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2834:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2826:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2612:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2626:4:5",
														"type": ""
													}
												],
												"src": "2461:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3038:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3055:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3066:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3048:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3048:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3048:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3089:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3100:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3085:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3085:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3105:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3078:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3078:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3128:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3139:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3124:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3124:18:5"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3144:31:5",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3117:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3117:59:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3117:59:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3185:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3197:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3208:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3193:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3193:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3185:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3015:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3029:4:5",
														"type": ""
													}
												],
												"src": "2864:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3396:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3413:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3424:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3406:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3406:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3406:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3447:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3458:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3443:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3443:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3463:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3436:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3436:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3436:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3486:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3497:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3482:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3482:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3502:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3475:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3475:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3475:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3557:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3568:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3553:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3553:18:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3573:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3546:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3546:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3546:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3591:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3603:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3614:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3599:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3599:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3591:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3373:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3387:4:5",
														"type": ""
													}
												],
												"src": "3222:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3803:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3820:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3831:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3813:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3813:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3813:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3854:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3865:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3850:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3850:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3870:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3843:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3843:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3843:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3893:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3904:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3889:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3889:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3909:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3882:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3882:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3882:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3964:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3975:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3960:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3960:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3980:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3953:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3953:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3953:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3997:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4009:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4005:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4005:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3997:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3780:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3794:4:5",
														"type": ""
													}
												],
												"src": "3629:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4209:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4226:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4237:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4219:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4219:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4219:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4260:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4271:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4256:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4256:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4276:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4249:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4249:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4249:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4299:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4310:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4295:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4295:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4315:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4288:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4288:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4370:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4381:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4366:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4366:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4386:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4359:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4359:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4359:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4402:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4414:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4425:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4410:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4410:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4402:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4186:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4200:4:5",
														"type": ""
													}
												],
												"src": "4035:400:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4614:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4631:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4642:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4624:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4624:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4665:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4676:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4661:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4661:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4654:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4654:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4704:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4715:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4700:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4700:18:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4720:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4693:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4693:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4693:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4775:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4786:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4771:18:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4791:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4764:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4764:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4764:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4808:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4820:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4831:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4816:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4816:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4808:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4591:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4605:4:5",
														"type": ""
													}
												],
												"src": "4440:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4947:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4957:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4969:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4980:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4965:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4957:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4999:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5010:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4992:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4992:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4916:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4927:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4938:4:5",
														"type": ""
													}
												],
												"src": "4846:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5125:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5135:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5147:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5158:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5143:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5135:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5177:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5192:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5200:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5188:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5188:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5170:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5170:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5170:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5094:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5105:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5116:4:5",
														"type": ""
													}
												],
												"src": "5028:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5265:177:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5300:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5321:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5328:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5333:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5324:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5324:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5314:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5314:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5314:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5365:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5368:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5358:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5358:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5358:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5393:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5396:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5386:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5386:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5386:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5281:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5288:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5284:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5284:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5278:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5278:13:5"
															},
															"nodeType": "YulIf",
															"src": "5275:136:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5420:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5431:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5434:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5427:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5427:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5420:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5248:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5251:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5257:3:5",
														"type": ""
													}
												],
												"src": "5217:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5502:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5512:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5526:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5529:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5522:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5522:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5512:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5543:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5573:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5579:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5569:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5569:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5547:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5620:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5622:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5636:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5644:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5632:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5632:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5622:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5600:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5593:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5593:26:5"
															},
															"nodeType": "YulIf",
															"src": "5590:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5710:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5731:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5738:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5743:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5734:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5734:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5724:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5724:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5724:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5775:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5778:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5768:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5768:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5768:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5803:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5806:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5796:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5796:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5796:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5666:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5689:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5697:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5686:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5686:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5663:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5663:38:5"
															},
															"nodeType": "YulIf",
															"src": "5660:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5482:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5491:6:5",
														"type": ""
													}
												],
												"src": "5447:380:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610177578063a9059cbb1461018a578063dd62ed3e1461019d57600080fd5b8063395093511461013357806370a082311461014657806395d89b411461016f57600080fd5b806306fdde03146100be578063095ea7b3146100dc57806318160ddd146100ff57806323b872dd14610111578063313ce56714610124575b600080fd5b6100c66101d6565b6040516100d391906107f2565b60405180910390f35b6100ef6100ea3660046107c8565b610268565b60405190151581526020016100d3565b6002545b6040519081526020016100d3565b6100ef61011f36600461078c565b610280565b604051601281526020016100d3565b6100ef6101413660046107c8565b6102a4565b610103610154366004610737565b6001600160a01b031660009081526020819052604090205490565b6100c66102e3565b6100ef6101853660046107c8565b6102f2565b6100ef6101983660046107c8565b610389565b6101036101ab366004610759565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101e59061086d565b80601f01602080910402602001604051908101604052809291908181526020018280546102119061086d565b801561025e5780601f106102335761010080835404028352916020019161025e565b820191906000526020600020905b81548152906001019060200180831161024157829003601f168201915b5050505050905090565b600033610276818585610397565b5060019392505050565b60003361028e8582856104bb565b61029985858561054d565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061027690829086906102de908790610847565b610397565b6060600480546101e59061086d565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561037c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102998286868403610397565b60003361027681858561054d565b6001600160a01b0383166103f95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610373565b6001600160a01b03821661045a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610373565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610547578181101561053a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610373565b6105478484848403610397565b50505050565b6001600160a01b0383166105b15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610373565b6001600160a01b0382166106135760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610373565b6001600160a01b0383166000908152602081905260409020548181101561068b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610373565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106c2908490610847565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161070e91815260200190565b60405180910390a3610547565b80356001600160a01b038116811461073257600080fd5b919050565b60006020828403121561074957600080fd5b6107528261071b565b9392505050565b6000806040838503121561076c57600080fd5b6107758361071b565b91506107836020840161071b565b90509250929050565b6000806000606084860312156107a157600080fd5b6107aa8461071b565b92506107b86020850161071b565b9150604084013590509250925092565b600080604083850312156107db57600080fd5b6107e48361071b565b946020939093013593505050565b600060208083528351808285015260005b8181101561081f57858101830151858201604001528201610803565b81811115610831576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561086857634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061088157607f821691505b602082108114156108a257634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212208e36c79fd33da0381c79d54a8eb06b905f22b3b2eddc8a7cad7c8e5d4e6bd35d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC6 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0xEA CALLDATASIZE PUSH1 0x4 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x268 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD3 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x78C JUMP JUMPDEST PUSH2 0x280 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD3 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x141 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x2A4 JUMP JUMPDEST PUSH2 0x103 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0x737 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x389 JUMP JUMPDEST PUSH2 0x103 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0x759 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1E5 SWAP1 PUSH2 0x86D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x211 SWAP1 PUSH2 0x86D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x25E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x233 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x25E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x241 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x276 DUP2 DUP6 DUP6 PUSH2 0x397 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x28E DUP6 DUP3 DUP6 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x299 DUP6 DUP6 DUP6 PUSH2 0x54D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x276 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2DE SWAP1 DUP8 SWAP1 PUSH2 0x847 JUMP JUMPDEST PUSH2 0x397 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1E5 SWAP1 PUSH2 0x86D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x37C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x299 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x397 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x276 DUP2 DUP6 DUP6 PUSH2 0x54D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x373 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x45A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x373 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x547 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x373 JUMP JUMPDEST PUSH2 0x547 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x397 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x373 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x373 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x373 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6C2 SWAP1 DUP5 SWAP1 PUSH2 0x847 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x70E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x547 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x752 DUP3 PUSH2 0x71B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x76C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x775 DUP4 PUSH2 0x71B JUMP JUMPDEST SWAP2 POP PUSH2 0x783 PUSH1 0x20 DUP5 ADD PUSH2 0x71B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP5 PUSH2 0x71B JUMP JUMPDEST SWAP3 POP PUSH2 0x7B8 PUSH1 0x20 DUP6 ADD PUSH2 0x71B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E4 DUP4 PUSH2 0x71B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x81F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x803 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x831 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x868 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x881 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x8A2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 CALLDATASIZE 0xC7 SWAP16 0xD3 RETURNDATASIZE LOG0 CODESIZE SHR PUSH26 0xD54A8EB06B905F22B3B2EDDC8A7CAD7C8E5D4E6BD35D64736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "1403:11214:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1428:14:5;;1421:22;1403:41;;1391:2;1376:18;4433:197:0;1263:187:5;3244:106:0;3331:12;;3244:106;;;4992:25:5;;;4980:2;4965:18;3244:106:0;4846:177:5;5192:286:0;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;5170:36:5;;5158:2;5143:18;3093:91:0;5028:184:5;5873:234:0;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:0;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:0;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:3;4570:32:0;719:10:3;4586:7:0;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:0;;4433:197;-1:-1:-1;;;4433:197:0:o;5192:286::-;5319:4;719:10:3;5375:38:0;5391:4;719:10:3;5406:6:0;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:0;;5192:286;-1:-1:-1;;;;5192:286:0:o;5873:234::-;719:10:3;5961:4:0;4091:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4091:27:0;;;;;;;;;;5961:4;;719:10:3;6015:64:0;;719:10:3;;4091:27:0;;6040:38;;6068:10;;6040:38;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;719:10:3;6687:4:0;4091:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4091:27:0;;;;;;;;;;6687:4;;719:10:3;6831:15:0;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:0;;4642:2:5;6803:85:0;;;4624:21:5;4681:2;4661:18;;;4654:30;4720:34;4700:18;;;4693:62;-1:-1:-1;;;4771:18:5;;;4764:35;4816:19;;6803:85:0;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:3;3862:28:0;719:10:3;3879:2:0;3883:6;3862:9;:28::i;10110:370::-;-1:-1:-1;;;;;10241:19:0;;10233:68;;;;-1:-1:-1;;;10233:68:0;;4237:2:5;10233:68:0;;;4219:21:5;4276:2;4256:18;;;4249:30;4315:34;4295:18;;;4288:62;-1:-1:-1;;;4366:18:5;;;4359:34;4410:19;;10233:68:0;4035:400:5;10233:68:0;-1:-1:-1;;;;;10319:21:0;;10311:68;;;;-1:-1:-1;;;10311:68:0;;2663:2:5;10311:68:0;;;2645:21:5;2702:2;2682:18;;;2675:30;2741:34;2721:18;;;2714:62;-1:-1:-1;;;2792:18:5;;;2785:32;2834:19;;10311:68:0;2461:398:5;10311:68:0;-1:-1:-1;;;;;10390:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;4992:25:5;;;10441:32:0;;4965:18:5;10441:32:0;;;;;;;10110:370;;;:::o;10761:441::-;-1:-1:-1;;;;;4091:18:0;;;10891:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10957:37:0;;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:0;;3066:2:5;11010:68:0;;;3048:21:5;3105:2;3085:18;;;3078:30;3144:31;3124:18;;;3117:59;3193:18;;11010:68:0;2864:353:5;11010:68:0;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:0;;7593:68;;;;-1:-1:-1;;;7593:68:0;;3831:2:5;7593:68:0;;;3813:21:5;3870:2;3850:18;;;3843:30;3909:34;3889:18;;;3882:62;-1:-1:-1;;;3960:18:5;;;3953:35;4005:19;;7593:68:0;3629:401:5;7593:68:0;-1:-1:-1;;;;;7679:16:0;;7671:64;;;;-1:-1:-1;;;7671:64:0;;2259:2:5;7671:64:0;;;2241:21:5;2298:2;2278:18;;;2271:30;2337:34;2317:18;;;2310:62;-1:-1:-1;;;2388:18:5;;;2381:33;2431:19;;7671:64:0;2057:399:5;7671:64:0;-1:-1:-1;;;;;7817:15:0;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:0;;3424:2:5;7842:72:0;;;3406:21:5;3463:2;3443:18;;;3436:30;3502:34;3482:18;;;3475:62;-1:-1:-1;;;3553:18:5;;;3546:36;3599:19;;7842:72:0;3222:402:5;7842:72:0;-1:-1:-1;;;;;7948:15:0;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:0;8054:4;-1:-1:-1;;;;;8045:26:0;;8064:6;8045:26;;;;4992:25:5;;4980:2;4965:18;;4846:177;8045:26:0;;;;;;;;8082:37;11786:121;14:196:5;82:20;;-1:-1:-1;;;;;131:54:5;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;:::-;356:39;215:186;-1:-1:-1;;;215:186:5:o;406:260::-;474:6;482;535:2;523:9;514:7;510:23;506:32;503:52;;;551:1;548;541:12;503:52;574:29;593:9;574:29;:::i;:::-;564:39;;622:38;656:2;645:9;641:18;622:38;:::i;:::-;612:48;;406:260;;;;;:::o;671:328::-;748:6;756;764;817:2;805:9;796:7;792:23;788:32;785:52;;;833:1;830;823:12;785:52;856:29;875:9;856:29;:::i;:::-;846:39;;904:38;938:2;927:9;923:18;904:38;:::i;:::-;894:48;;989:2;978:9;974:18;961:32;951:42;;671:328;;;;;:::o;1004:254::-;1072:6;1080;1133:2;1121:9;1112:7;1108:23;1104:32;1101:52;;;1149:1;1146;1139:12;1101:52;1172:29;1191:9;1172:29;:::i;:::-;1162:39;1248:2;1233:18;;;;1220:32;;-1:-1:-1;;;1004:254:5:o;1455:597::-;1567:4;1596:2;1625;1614:9;1607:21;1657:6;1651:13;1700:6;1695:2;1684:9;1680:18;1673:34;1725:1;1735:140;1749:6;1746:1;1743:13;1735:140;;;1844:14;;;1840:23;;1834:30;1810:17;;;1829:2;1806:26;1799:66;1764:10;;1735:140;;;1893:6;1890:1;1887:13;1884:91;;;1963:1;1958:2;1949:6;1938:9;1934:22;1930:31;1923:42;1884:91;-1:-1:-1;2036:2:5;2015:15;-1:-1:-1;;2011:29:5;1996:45;;;;2043:2;1992:54;;1455:597;-1:-1:-1;;;1455:597:5:o;5217:225::-;5257:3;5288:1;5284:6;5281:1;5278:13;5275:136;;;5333:10;5328:3;5324:20;5321:1;5314:31;5368:4;5365:1;5358:15;5396:4;5393:1;5386:15;5275:136;-1:-1:-1;5427:9:5;;5217:225::o;5447:380::-;5526:1;5522:12;;;;5569;;;5590:61;;5644:4;5636:6;5632:17;5622:27;;5590:61;5697:2;5689:6;5686:14;5666:18;5663:38;5660:161;;;5743:10;5738:3;5734:20;5731:1;5724:31;5778:4;5775:1;5768:15;5806:4;5803:1;5796:15;5660:161;;5447:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "454000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2585",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "26922",
								"increaseAllowance(address,uint256)": "26968",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51226",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208e36c79fd33da0381c79d54a8eb06b905f22b3b2eddc8a7cad7c8e5d4e6bd35d64736f6c63430008070033",
									".code": [
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1442,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1443,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1444,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1444,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1393,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1263,
											"end": 1450,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4992,
											"end": 5017,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5017,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5017,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 4982,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 4983,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4846,
											"end": 5023,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5170,
											"end": 5206,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5170,
											"end": 5206,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5158,
											"end": 5160,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5143,
											"end": 5161,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5028,
											"end": 5212,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4644,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4624,
											"end": 4645,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4661,
											"end": 4679,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4661,
											"end": 4679,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4661,
											"end": 4679,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 4754,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4755,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4764,
											"end": 4799,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4816,
											"end": 4835,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4816,
											"end": 4835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4240,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4278,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4256,
											"end": 4274,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4256,
											"end": 4274,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4256,
											"end": 4274,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4249,
											"end": 4279,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4315,
											"end": 4349,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4295,
											"end": 4313,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4295,
											"end": 4313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4295,
											"end": 4313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4288,
											"end": 4350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4366,
											"end": 4384,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4366,
											"end": 4384,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4366,
											"end": 4384,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4393,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4410,
											"end": 4429,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4410,
											"end": 4429,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4035,
											"end": 4435,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2663,
											"end": 2665,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2666,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2704,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2682,
											"end": 2700,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2682,
											"end": 2700,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2700,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2675,
											"end": 2705,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2775,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2714,
											"end": 2776,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2817,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2853,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2834,
											"end": 2853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2461,
											"end": 2859,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4992,
											"end": 5017,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5017,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5017,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4965,
											"end": 4983,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10957,
											"end": 10994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11038,
											"end": 11044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3068,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 3107,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 3085,
											"end": 3103,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3085,
											"end": 3103,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3103,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3175,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3117,
											"end": 3176,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2864,
											"end": 3217,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11129,
											"end": 11134,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 11143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11164,
											"end": 11170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10881,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3831,
											"end": 3833,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3834,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3870,
											"end": 3872,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3850,
											"end": 3868,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3850,
											"end": 3868,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3868,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3873,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3909,
											"end": 3943,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3882,
											"end": 3944,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3960,
											"end": 3978,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3960,
											"end": 3978,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3960,
											"end": 3978,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 3988,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3629,
											"end": 4030,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2259,
											"end": 2261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2241,
											"end": 2262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2300,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2278,
											"end": 2296,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2278,
											"end": 2296,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2296,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2301,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2372,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2388,
											"end": 2406,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2388,
											"end": 2406,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2388,
											"end": 2406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2414,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2431,
											"end": 2450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2057,
											"end": 2456,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7795,
											"end": 7814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3426,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3427,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3465,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3443,
											"end": 3461,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3443,
											"end": 3461,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3461,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3466,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3502,
											"end": 3536,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3475,
											"end": 3537,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3553,
											"end": 3571,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3553,
											"end": 3571,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3571,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3546,
											"end": 3582,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3599,
											"end": 3618,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3599,
											"end": 3618,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3222,
											"end": 3624,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8064,
											"end": 8070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4992,
											"end": 5017,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5017,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 4982,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 4983,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4965,
											"end": 4983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4846,
											"end": 5023,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8082,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 204,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14,
											"end": 210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 274,
											"end": 280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 324,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 306,
											"end": 313,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 295,
											"end": 347,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 295,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 333,
											"end": 345,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 295,
											"end": 347,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 385,
											"end": 394,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 356,
											"end": 395,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 215,
											"end": 401,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 406,
											"end": 666,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 406,
											"end": 666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 474,
											"end": 480,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 535,
											"end": 537,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 532,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 514,
											"end": 521,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 510,
											"end": 533,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 506,
											"end": 538,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 503,
											"end": 555,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 503,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 503,
											"end": 555,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 551,
											"end": 552,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 541,
											"end": 553,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 503,
											"end": 555,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 503,
											"end": 555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 593,
											"end": 602,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 574,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 564,
											"end": 603,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 564,
											"end": 603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 622,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 654,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 641,
											"end": 659,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 622,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 612,
											"end": 660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 406,
											"end": 666,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 406,
											"end": 666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 406,
											"end": 666,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 406,
											"end": 666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 406,
											"end": 666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 406,
											"end": 666,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 671,
											"end": 999,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 671,
											"end": 999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 756,
											"end": 762,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 764,
											"end": 770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 805,
											"end": 814,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 796,
											"end": 803,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 792,
											"end": 815,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 788,
											"end": 820,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 785,
											"end": 837,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 785,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 785,
											"end": 837,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 833,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 823,
											"end": 835,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 785,
											"end": 837,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 785,
											"end": 837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 856,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 875,
											"end": 884,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 856,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 846,
											"end": 885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 938,
											"end": 940,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 894,
											"end": 942,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 894,
											"end": 942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 987,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 951,
											"end": 993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 951,
											"end": 993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 671,
											"end": 999,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 671,
											"end": 999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 671,
											"end": 999,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 671,
											"end": 999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 671,
											"end": 999,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 671,
											"end": 999,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1004,
											"end": 1258,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1004,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1135,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1130,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1108,
											"end": 1131,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1104,
											"end": 1136,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1153,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1101,
											"end": 1153,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1151,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1153,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1101,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1201,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1250,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1252,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1252,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1258,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1455,
											"end": 2052,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1455,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1567,
											"end": 1571,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1598,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1625,
											"end": 1627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1623,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1663,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1651,
											"end": 1664,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1700,
											"end": 1706,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1693,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1673,
											"end": 1707,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1725,
											"end": 1726,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1755,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1747,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1743,
											"end": 1756,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1863,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1863,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1827,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1827,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1827,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1831,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1806,
											"end": 1832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1799,
											"end": 1865,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1774,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1899,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 1891,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1900,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1975,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1884,
											"end": 1975,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1960,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 1955,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1961,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1965,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1975,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1884,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2036,
											"end": 2038,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2015,
											"end": 2030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2040,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2041,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2041,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2041,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1992,
											"end": 2046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1992,
											"end": 2046,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1455,
											"end": 2052,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1455,
											"end": 2052,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5217,
											"end": 5442,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 5217,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5257,
											"end": 5260,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5289,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5284,
											"end": 5290,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5281,
											"end": 5282,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5278,
											"end": 5291,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5275,
											"end": 5411,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5275,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 5275,
											"end": 5411,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5333,
											"end": 5343,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 5328,
											"end": 5331,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5324,
											"end": 5344,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5345,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5368,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5365,
											"end": 5366,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5358,
											"end": 5373,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5396,
											"end": 5400,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5393,
											"end": 5394,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5386,
											"end": 5401,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5275,
											"end": 5411,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 5275,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5427,
											"end": 5436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5217,
											"end": 5442,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5447,
											"end": 5827,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 5447,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5527,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5522,
											"end": 5534,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5534,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5534,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5534,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5569,
											"end": 5581,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5569,
											"end": 5581,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5569,
											"end": 5581,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5590,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 5590,
											"end": 5651,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5644,
											"end": 5648,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 5636,
											"end": 5642,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5649,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5622,
											"end": 5649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5622,
											"end": 5649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5590,
											"end": 5651,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 5590,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5699,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5689,
											"end": 5695,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5686,
											"end": 5700,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5663,
											"end": 5701,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5660,
											"end": 5821,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5660,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 5660,
											"end": 5821,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5743,
											"end": 5753,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 5738,
											"end": 5741,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5734,
											"end": 5754,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5732,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5724,
											"end": 5755,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5775,
											"end": 5776,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5768,
											"end": 5783,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5803,
											"end": 5804,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5796,
											"end": 5811,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5660,
											"end": 5821,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 5660,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5660,
											"end": 5821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5447,
											"end": 5827,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5447,
											"end": 5827,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5447,
											"end": 5827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5447,
											"end": 5827,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/AMM.sol": {
				"DEX": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "ETHSwapped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "TokensSwapped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_valueETH",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_valueToken",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "distributeFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "token_amount",
									"type": "uint256"
								}
							],
							"name": "ercToEth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ethToErc",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eth_received",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finish",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token_address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "token_amount",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "invested",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "investors",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liq_added",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth",
									"type": "uint256"
								}
							],
							"name": "liquidityAdded",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "liquiditySubstracted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth",
									"type": "uint256"
								}
							],
							"name": "priceERC",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "erc",
									"type": "uint256"
								}
							],
							"name": "priceETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokens_received",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "total_liquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/AMM.sol\":133:6084  contract DEX {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/AMM.sol\":891:955  constructor(){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/AMM.sol\":923:931  deployer */\n  0x02\n    /* \"contracts/AMM.sol\":923:943  deployer = tx.origin */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/AMM.sol\":934:943  tx.origin */\n  origin\n    /* \"contracts/AMM.sol\":923:943  deployer = tx.origin */\n  or\n  swap1\n  sstore\n    /* \"contracts/AMM.sol\":133:6084  contract DEX {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/AMM.sol\":133:6084  contract DEX {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x72a9d124\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb8c876b1\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xd56b2889\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xd56b2889\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xddca3f43\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdebc674c\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0xb8c876b1\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xcd6dc687\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x72a9d124\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x74942c0f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7937c03d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x82b2e257\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8666107c\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x5f244d4e\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x5f244d4e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x66b3f6bf\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x67da263d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6f7bc9be\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x707e7e87\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x12065fe0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1eb928aa\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x26c4e60d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x31f3bd28\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/AMM.sol\":5420:5533  function getBalance() external view returns (uint256) {\r... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n        /* \"contracts/AMM.sol\":5500:5521  address(this).balance */\n      selfbalance\n        /* \"contracts/AMM.sol\":5420:5533  function getBalance() external view returns (uint256) {\r... */\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":2958:2983   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2946:2948   */\n      0x20\n        /* \"#utility.yul\":2931:2949   */\n      add\n        /* \"contracts/AMM.sol\":5420:5533  function getBalance() external view returns (uint256) {\r... */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AMM.sol\":4909:5266  function liquiditySubstracted(uint256 value) external view returns (uint256, uint256){\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3168:3193   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":3224:3226   */\n      0x20\n        /* \"#utility.yul\":3209:3227   */\n      dup4\n      add\n        /* \"#utility.yul\":3202:3236   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3141:3159   */\n      add\n        /* \"contracts/AMM.sol\":4909:5266  function liquiditySubstracted(uint256 value) external view returns (uint256, uint256){\r... */\n      tag_30\n        /* \"#utility.yul\":2994:3242   */\n      jump\n        /* \"contracts/AMM.sol\":5545:5768  function distributeFee() external{\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/AMM.sol\":4249:4897  function withdraw(uint256 value) external {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_40\n      tag_44\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n        /* \"contracts/AMM.sol\":187:217  uint256 public total_liquidity */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_28\n      sload(0x01)\n      dup2\n      jump\n        /* \"contracts/AMM.sol\":3880:4235  function liquidityAdded(uint256 eth) external view returns (uint256, uint256){\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_33\n      tag_52\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"contracts/AMM.sol\":5780:5894  function invested(address who) external view returns (uint256){\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_28\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AMM.sol\":5868:5882  investors[who] */\n      and\n        /* \"contracts/AMM.sol\":5834:5841  uint256 */\n      0x00\n        /* \"contracts/AMM.sol\":5868:5882  investors[who] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":5868:5877  investors */\n      0x04\n        /* \"contracts/AMM.sol\":5868:5882  investors[who] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/AMM.sol\":5780:5894  function invested(address who) external view returns (uint256){\r... */\n      jump\n        /* \"contracts/AMM.sol\":2012:2188  function priceETH(uint256 erc) external view returns(uint256){\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_28\n      tag_63\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n        /* \"contracts/AMM.sol\":363:407  mapping(address => uint256) public investors */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_28\n      tag_68\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_68:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/AMM.sol\":854:878  uint256 public liq_added */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_28\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/AMM.sol\":1816:2000  function priceERC(uint256 eth) external view returns(uint256){\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_28\n      tag_77\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"contracts/AMM.sol\":775:805  uint256 public tokens_received */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_28\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/AMM.sol\":2200:2663  function ethToErc() external payable {\r... */\n    tag_14:\n      tag_40\n      tag_85\n      jump\t// in\n        /* \"contracts/AMM.sol\":5278:5408  function getTokenBalance() external view returns (uint256) {\r... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_28\n      tag_88\n      jump\t// in\n        /* \"contracts/AMM.sol\":816:843  uint256 public eth_received */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_28\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/AMM.sol\":444:489  mapping (address => uint256) public liquidity */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_28\n      tag_96\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_96:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/AMM.sol\":967:1578  function initialize(address token_address, uint256 token_amount) external payable {\r... */\n    tag_18:\n      tag_40\n      tag_100\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n        /* \"contracts/AMM.sol\":3238:3868  function deposit() external payable {\r... */\n    tag_19:\n      tag_40\n      tag_104\n      jump\t// in\n        /* \"contracts/AMM.sol\":5906:6079  function finish() external {\r... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_40\n      tag_107\n      jump\t// in\n        /* \"contracts/AMM.sol\":311:329  uint256 public fee */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_28\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/AMM.sol\":2677:3226  function ercToEth(uint256 token_amount) external {\r... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_40\n      tag_114\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n        /* \"contracts/AMM.sol\":4909:5266  function liquiditySubstracted(uint256 value) external view returns (uint256, uint256){\r... */\n    tag_36:\n        /* \"contracts/AMM.sol\":4977:4984  uint256 */\n      0x00\n        /* \"contracts/AMM.sol\":4986:4993  uint256 */\n      dup1\n        /* \"contracts/AMM.sol\":5013:5030  uint256 eth_value */\n      0x00\n        /* \"contracts/AMM.sol\":5067:5082  total_liquidity */\n      sload(0x01)\n        /* \"contracts/AMM.sol\":5042:5063  address(this).balance */\n      selfbalance\n        /* \"contracts/AMM.sol\":5034:5039  value */\n      dup6\n        /* \"contracts/AMM.sol\":5034:5063  value * address(this).balance */\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"contracts/AMM.sol\":5033:5082  (value * address(this).balance) / total_liquidity */\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"contracts/AMM.sol\":5169:5184  total_liquidity */\n      sload(0x01)\n        /* \"contracts/AMM.sol\":5101:5120  uint256 token_value */\n      0x00\n        /* \"contracts/AMM.sol\":5132:5140  tokenERC */\n      dup1\n      sload\n        /* \"contracts/AMM.sol\":5132:5165  tokenERC.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":5159:5163  this */\n      address\n        /* \"contracts/AMM.sol\":5132:5165  tokenERC.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1677:1751   */\n      mstore\n        /* \"contracts/AMM.sol\":5013:5082  uint256 eth_value = (value * address(this).balance) / total_liquidity */\n      swap4\n      swap5\n      pop\n        /* \"contracts/AMM.sol\":5101:5120  uint256 token_value */\n      swap1\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AMM.sol\":5132:5140  tokenERC */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/AMM.sol\":5132:5150  tokenERC.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1650:1668   */\n      0x24\n      add\n        /* \"contracts/AMM.sol\":5132:5165  tokenERC.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"contracts/AMM.sol\":5124:5165  value * tokenERC.balanceOf(address(this)) */\n      tag_129\n      swap1\n        /* \"contracts/AMM.sol\":5124:5129  value */\n      dup8\n        /* \"contracts/AMM.sol\":5124:5165  value * tokenERC.balanceOf(address(this)) */\n      tag_119\n      jump\t// in\n    tag_129:\n        /* \"contracts/AMM.sol\":5123:5184  (value * tokenERC.balanceOf(address(this))) / total_liquidity */\n      tag_130\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_130:\n        /* \"contracts/AMM.sol\":5229:5238  eth_value */\n      swap2\n      swap6\n        /* \"contracts/AMM.sol\":5101:5184  uint256 token_value = (value * tokenERC.balanceOf(address(this))) / total_liquidity */\n      swap2\n      swap5\n      pop\n        /* \"contracts/AMM.sol\":4909:5266  function liquiditySubstracted(uint256 value) external view returns (uint256, uint256){\r... */\n      swap1\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AMM.sol\":5545:5768  function distributeFee() external{\r... */\n    tag_41:\n        /* \"contracts/AMM.sol\":5597:5611  uint256 profit */\n      0x00\n        /* \"contracts/AMM.sol\":5626:5630  1000 */\n      0x03e8\n        /* \"contracts/AMM.sol\":5615:5618  fee */\n      sload(0x03)\n        /* \"contracts/AMM.sol\":5621:5622  3 */\n      0x03\n        /* \"contracts/AMM.sol\":5615:5622  fee * 3 */\n      tag_132\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_132:\n        /* \"contracts/AMM.sol\":5614:5630  (fee * 3) / 1000 */\n      tag_133\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_133:\n        /* \"contracts/AMM.sol\":5668:5701  tx.origin.call{value: profit}(\"\") */\n      mload(0x40)\n        /* \"contracts/AMM.sol\":5597:5630  uint256 profit = (fee * 3) / 1000 */\n      swap1\n      swap2\n      pop\n        /* \"contracts/AMM.sol\":5650:5662  bool success */\n      0x00\n      swap1\n        /* \"contracts/AMM.sol\":5668:5677  tx.origin */\n      origin\n      swap1\n        /* \"contracts/AMM.sol\":5597:5630  uint256 profit = (fee * 3) / 1000 */\n      dup4\n      swap1\n        /* \"contracts/AMM.sol\":5650:5662  bool success */\n      dup4\n        /* \"contracts/AMM.sol\":5668:5701  tx.origin.call{value: profit}(\"\") */\n      dup2\n        /* \"contracts/AMM.sol\":5650:5662  bool success */\n      dup2\n        /* \"contracts/AMM.sol\":5668:5701  tx.origin.call{value: profit}(\"\") */\n      dup2\n        /* \"contracts/AMM.sol\":5597:5630  uint256 profit = (fee * 3) / 1000 */\n      dup6\n        /* \"contracts/AMM.sol\":5668:5677  tx.origin */\n      dup8\n        /* \"contracts/AMM.sol\":5668:5701  tx.origin.call{value: profit}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_138\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_137)\n    tag_138:\n      0x60\n      swap2\n      pop\n    tag_137:\n      pop\n        /* \"contracts/AMM.sol\":5649:5701  (bool success, ) = tx.origin.call{value: profit}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":5728:5735  success */\n      dup1\n        /* \"contracts/AMM.sol\":5720:5756  require(success, \"Transfer failed.\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2669:2671   */\n      0x20\n        /* \"contracts/AMM.sol\":5720:5756  require(success, \"Transfer failed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2651:2672   */\n      mstore\n        /* \"#utility.yul\":2708:2710   */\n      0x10\n        /* \"#utility.yul\":2688:2706   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2681:2711   */\n      mstore\n      shl(0x81, 0x2a3930b739b332b9103330b4b632b217)\n        /* \"#utility.yul\":2727:2745   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2720:2766   */\n      mstore\n        /* \"#utility.yul\":2783:2801   */\n      0x64\n      add\n        /* \"contracts/AMM.sol\":5720:5756  require(success, \"Transfer failed.\") */\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/AMM.sol\":5578:5768  {\r... */\n      pop\n      pop\n        /* \"contracts/AMM.sol\":5545:5768  function distributeFee() external{\r... */\n      jump\t// out\n        /* \"contracts/AMM.sol\":4249:4897  function withdraw(uint256 value) external {\r... */\n    tag_45:\n        /* \"contracts/AMM.sol\":4364:4379  total_liquidity */\n      sload(0x01)\n        /* \"contracts/AMM.sol\":4310:4327  uint256 eth_value */\n      0x00\n      swap1\n        /* \"contracts/AMM.sol\":4331:4360  value * address(this).balance */\n      tag_143\n        /* \"contracts/AMM.sol\":4339:4360  address(this).balance */\n      selfbalance\n        /* \"contracts/AMM.sol\":4331:4336  value */\n      dup5\n        /* \"contracts/AMM.sol\":4331:4360  value * address(this).balance */\n      tag_119\n      jump\t// in\n    tag_143:\n        /* \"contracts/AMM.sol\":4330:4379  (value * address(this).balance) / total_liquidity */\n      tag_144\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_144:\n        /* \"contracts/AMM.sol\":4466:4481  total_liquidity */\n      sload(0x01)\n        /* \"contracts/AMM.sol\":4398:4417  uint256 token_value */\n      0x00\n        /* \"contracts/AMM.sol\":4429:4437  tokenERC */\n      dup1\n      sload\n        /* \"contracts/AMM.sol\":4429:4462  tokenERC.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":4456:4460  this */\n      address\n        /* \"contracts/AMM.sol\":4429:4462  tokenERC.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1677:1751   */\n      mstore\n        /* \"contracts/AMM.sol\":4310:4379  uint256 eth_value = (value * address(this).balance) / total_liquidity */\n      swap4\n      swap5\n      pop\n        /* \"contracts/AMM.sol\":4398:4417  uint256 token_value */\n      swap1\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AMM.sol\":4429:4437  tokenERC */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/AMM.sol\":4429:4447  tokenERC.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1650:1668   */\n      0x24\n      add\n        /* \"contracts/AMM.sol\":4429:4462  tokenERC.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_149:\n        /* \"contracts/AMM.sol\":4421:4462  value * tokenERC.balanceOf(address(this)) */\n      tag_150\n      swap1\n        /* \"contracts/AMM.sol\":4421:4426  value */\n      dup6\n        /* \"contracts/AMM.sol\":4421:4462  value * tokenERC.balanceOf(address(this)) */\n      tag_119\n      jump\t// in\n    tag_150:\n        /* \"contracts/AMM.sol\":4420:4481  (value * tokenERC.balanceOf(address(this))) / total_liquidity */\n      tag_151\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_151:\n        /* \"contracts/AMM.sol\":4398:4481  uint256 token_value = (value * tokenERC.balanceOf(address(this))) / total_liquidity */\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":4521:4530  eth_value */\n      dup2\n        /* \"contracts/AMM.sol\":4502:4517  total_liquidity */\n      0x01\n      0x00\n        /* \"contracts/AMM.sol\":4502:4530  total_liquidity -= eth_value */\n      dup3\n      dup3\n      sload\n      tag_152\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/AMM.sol\":4570:4606  tx.origin.call{value: eth_value}(\"\") */\n      mload(0x40)\n        /* \"contracts/AMM.sol\":4552:4564  bool success */\n      0x00\n      swap1\n        /* \"contracts/AMM.sol\":4570:4579  tx.origin */\n      origin\n      swap1\n        /* \"contracts/AMM.sol\":4592:4601  eth_value */\n      dup5\n      swap1\n        /* \"contracts/AMM.sol\":4552:4564  bool success */\n      dup4\n        /* \"contracts/AMM.sol\":4570:4606  tx.origin.call{value: eth_value}(\"\") */\n      dup2\n        /* \"contracts/AMM.sol\":4552:4564  bool success */\n      dup2\n        /* \"contracts/AMM.sol\":4570:4606  tx.origin.call{value: eth_value}(\"\") */\n      dup2\n        /* \"contracts/AMM.sol\":4592:4601  eth_value */\n      dup6\n        /* \"contracts/AMM.sol\":4570:4579  tx.origin */\n      dup8\n        /* \"contracts/AMM.sol\":4570:4606  tx.origin.call{value: eth_value}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_157\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_156)\n    tag_157:\n      0x60\n      swap2\n      pop\n    tag_156:\n      pop\n        /* \"contracts/AMM.sol\":4551:4606  (bool success, ) = tx.origin.call{value: eth_value}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":4633:4640  success */\n      dup1\n        /* \"contracts/AMM.sol\":4625:4661  require(success, \"Transfer failed.\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2669:2671   */\n      0x20\n        /* \"contracts/AMM.sol\":4625:4661  require(success, \"Transfer failed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2651:2672   */\n      mstore\n        /* \"#utility.yul\":2708:2710   */\n      0x10\n        /* \"#utility.yul\":2688:2706   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2681:2711   */\n      mstore\n      shl(0x81, 0x2a3930b739b332b9103330b4b632b217)\n        /* \"#utility.yul\":2727:2745   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2720:2766   */\n      mstore\n        /* \"#utility.yul\":2783:2801   */\n      0x64\n      add\n        /* \"contracts/AMM.sol\":4625:4661  require(success, \"Transfer failed.\") */\n      tag_140\n        /* \"#utility.yul\":2467:2807   */\n      jump\n        /* \"contracts/AMM.sol\":4625:4661  require(success, \"Transfer failed.\") */\n    tag_158:\n        /* \"contracts/AMM.sol\":4694:4702  tokenERC */\n      sload(0x00)\n        /* \"contracts/AMM.sol\":4694:4735  tokenERC.transfer(tx.origin, token_value) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":4712:4721  tx.origin */\n      origin\n        /* \"contracts/AMM.sol\":4694:4735  tokenERC.transfer(tx.origin, token_value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2339:2413   */\n      mstore\n        /* \"#utility.yul\":2429:2447   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2422:2456   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AMM.sol\":4694:4702  tokenERC */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/AMM.sol\":4694:4711  tokenERC.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2312:2330   */\n      0x44\n      add\n        /* \"contracts/AMM.sol\":4694:4735  tokenERC.transfer(tx.origin, token_value) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"contracts/AMM.sol\":4686:4736  require(tokenERC.transfer(tx.origin, token_value)) */\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n        /* \"contracts/AMM.sol\":4762:4794  Withdraw(eth_value, token_value) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3168:3193   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":3224:3226   */\n      0x20\n        /* \"#utility.yul\":3209:3227   */\n      dup2\n      add\n        /* \"#utility.yul\":3202:3236   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/AMM.sol\":4762:4794  Withdraw(eth_value, token_value) */\n      0x56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c8\n      swap2\n        /* \"#utility.yul\":3141:3159   */\n      add\n        /* \"contracts/AMM.sol\":4762:4794  Withdraw(eth_value, token_value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n        /* \"contracts/AMM.sol\":4813:4825  eth_received */\n      0x07\n        /* \"contracts/AMM.sol\":4813:4837  eth_received = eth_value */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/AMM.sol\":4856:4871  tokens_received */\n      0x06\n        /* \"contracts/AMM.sol\":4856:4885  tokens_received = token_value */\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":4249:4897  function withdraw(uint256 value) external {\r... */\n      jump\t// out\n        /* \"contracts/AMM.sol\":3880:4235  function liquidityAdded(uint256 eth) external view returns (uint256, uint256){\r... */\n    tag_53:\n        /* \"contracts/AMM.sol\":3940:3947  uint256 */\n      0x00\n        /* \"contracts/AMM.sol\":4007:4015  tokenERC */\n      dup1\n      sload\n        /* \"contracts/AMM.sol\":4007:4040  tokenERC.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":4034:4038  this */\n      address\n        /* \"contracts/AMM.sol\":4007:4040  tokenERC.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1677:1751   */\n      mstore\n        /* \"contracts/AMM.sol\":3940:3947  uint256 */\n      dup3\n      swap2\n      dup3\n      swap2\n        /* \"contracts/AMM.sol\":4045:4066  address(this).balance */\n      selfbalance\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AMM.sol\":4007:4015  tokenERC */\n      and\n      swap1\n        /* \"contracts/AMM.sol\":4007:4025  tokenERC.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1650:1668   */\n      0x24\n      add\n        /* \"contracts/AMM.sol\":4007:4040  tokenERC.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_173\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_173:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_174\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_174:\n        /* \"contracts/AMM.sol\":4001:4040  eth * tokenERC.balanceOf(address(this)) */\n      tag_175\n      swap1\n        /* \"contracts/AMM.sol\":4001:4004  eth */\n      dup7\n        /* \"contracts/AMM.sol\":4001:4040  eth * tokenERC.balanceOf(address(this)) */\n      tag_119\n      jump\t// in\n    tag_175:\n        /* \"contracts/AMM.sol\":4000:4067  (eth * tokenERC.balanceOf(address(this))) / (address(this).balance) */\n      tag_176\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_176:\n        /* \"contracts/AMM.sol\":3976:4068  uint256 token_amount = ((eth * tokenERC.balanceOf(address(this))) / (address(this).balance)) */\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":4087:4110  uint256 liquidity_added */\n      0x00\n        /* \"contracts/AMM.sol\":4140:4161  address(this).balance */\n      selfbalance\n        /* \"contracts/AMM.sol\":4120:4135  total_liquidity */\n      sload(0x01)\n        /* \"contracts/AMM.sol\":4114:4117  eth */\n      dup7\n        /* \"contracts/AMM.sol\":4114:4135  eth * total_liquidity */\n      tag_129\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n        /* \"contracts/AMM.sol\":2012:2188  function priceETH(uint256 erc) external view returns(uint256){\r... */\n    tag_64:\n        /* \"contracts/AMM.sol\":2065:2072  uint256 */\n      0x00\n        /* \"contracts/AMM.sol\":2119:2127  tokenERC */\n      dup1\n      sload\n        /* \"contracts/AMM.sol\":2119:2152  tokenERC.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":2146:2150  this */\n      address\n        /* \"contracts/AMM.sol\":2119:2152  tokenERC.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1677:1751   */\n      mstore\n        /* \"contracts/AMM.sol\":2099:2176  calculatePrice(erc, tokenERC.balanceOf(address(this)), address(this).balance) */\n      tag_181\n      swap2\n        /* \"contracts/AMM.sol\":2114:2117  erc */\n      dup5\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AMM.sol\":2119:2127  tokenERC */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/AMM.sol\":2119:2137  tokenERC.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1650:1668   */\n      0x24\n      add\n        /* \"contracts/AMM.sol\":2119:2152  tokenERC.balanceOf(address(this)) */\n    tag_182:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_183:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_186:\n        /* \"contracts/AMM.sol\":2154:2175  address(this).balance */\n      selfbalance\n        /* \"contracts/AMM.sol\":2099:2113  calculatePrice */\n      tag_187\n        /* \"contracts/AMM.sol\":2099:2176  calculatePrice(erc, tokenERC.balanceOf(address(this)), address(this).balance) */\n      jump\t// in\n    tag_181:\n        /* \"contracts/AMM.sol\":2092:2176  return calculatePrice(erc, tokenERC.balanceOf(address(this)), address(this).balance) */\n      swap3\n        /* \"contracts/AMM.sol\":2012:2188  function priceETH(uint256 erc) external view returns(uint256){\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AMM.sol\":1816:2000  function priceERC(uint256 eth) external view returns(uint256){\r... */\n    tag_78:\n        /* \"contracts/AMM.sol\":1869:1876  uint256 */\n      0x00\n        /* \"contracts/AMM.sol\":1903:1988  calculatePrice(eth, (address(this).balance - eth), tokenERC.balanceOf(address(this))) */\n      tag_181\n        /* \"contracts/AMM.sol\":1918:1921  eth */\n      dup3\n        /* \"contracts/AMM.sol\":1924:1951  address(this).balance - eth */\n      tag_190\n        /* \"contracts/AMM.sol\":1918:1921  eth */\n      dup2\n        /* \"contracts/AMM.sol\":1924:1945  address(this).balance */\n      selfbalance\n        /* \"contracts/AMM.sol\":1924:1951  address(this).balance - eth */\n      tag_153\n      jump\t// in\n    tag_190:\n        /* \"contracts/AMM.sol\":1954:1962  tokenERC */\n      sload(0x00)\n        /* \"contracts/AMM.sol\":1954:1987  tokenERC.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":1981:1985  this */\n      address\n        /* \"contracts/AMM.sol\":1954:1987  tokenERC.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1677:1751   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AMM.sol\":1954:1962  tokenERC */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/AMM.sol\":1954:1972  tokenERC.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1650:1668   */\n      0x24\n      add\n        /* \"contracts/AMM.sol\":1954:1987  tokenERC.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_194\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_194:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_195\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_195:\n        /* \"contracts/AMM.sol\":1903:1917  calculatePrice */\n      tag_187\n        /* \"contracts/AMM.sol\":1903:1988  calculatePrice(eth, (address(this).balance - eth), tokenERC.balanceOf(address(this))) */\n      jump\t// in\n        /* \"contracts/AMM.sol\":2200:2663  function ethToErc() external payable {\r... */\n    tag_85:\n        /* \"contracts/AMM.sol\":2256:2278  uint256 tokens_swapped */\n      0x00\n        /* \"contracts/AMM.sol\":2281:2378  calculatePrice(msg.value, (address(this).balance - msg.value), tokenERC.balanceOf(address(this))) */\n      tag_197\n        /* \"contracts/AMM.sol\":2296:2305  msg.value */\n      callvalue\n        /* \"contracts/AMM.sol\":2308:2341  address(this).balance - msg.value */\n      tag_190\n        /* \"contracts/AMM.sol\":2296:2305  msg.value */\n      dup2\n        /* \"contracts/AMM.sol\":2308:2329  address(this).balance */\n      selfbalance\n        /* \"contracts/AMM.sol\":2308:2341  address(this).balance - msg.value */\n      tag_153\n      jump\t// in\n        /* \"contracts/AMM.sol\":2281:2378  calculatePrice(msg.value, (address(this).balance - msg.value), tokenERC.balanceOf(address(this))) */\n    tag_197:\n        /* \"contracts/AMM.sol\":2407:2415  tokenERC */\n      sload(0x00)\n        /* \"contracts/AMM.sol\":2407:2451  tokenERC.transfer(tx.origin, tokens_swapped) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":2425:2434  tx.origin */\n      origin\n        /* \"contracts/AMM.sol\":2407:2451  tokenERC.transfer(tx.origin, tokens_swapped) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2339:2413   */\n      mstore\n        /* \"#utility.yul\":2429:2447   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2422:2456   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/AMM.sol\":2256:2378  uint256 tokens_swapped = calculatePrice(msg.value, (address(this).balance - msg.value), tokenERC.balanceOf(address(this))) */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AMM.sol\":2407:2415  tokenERC */\n      and\n      swap1\n        /* \"contracts/AMM.sol\":2407:2424  tokenERC.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2312:2330   */\n      0x44\n      add\n        /* \"contracts/AMM.sol\":2407:2451  tokenERC.transfer(tx.origin, tokens_swapped) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_205:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_207:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_208\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_208:\n        /* \"contracts/AMM.sol\":2399:2452  require(tokenERC.transfer(tx.origin, tokens_swapped)) */\n      tag_209\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_209:\n        /* \"contracts/AMM.sol\":2480:2489  msg.value */\n      callvalue\n        /* \"contracts/AMM.sol\":2473:2476  fee */\n      0x03\n      0x00\n        /* \"contracts/AMM.sol\":2473:2489  fee += msg.value */\n      dup3\n      dup3\n      sload\n      tag_210\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/AMM.sol\":2518:2527  tx.origin */\n      origin\n        /* \"contracts/AMM.sol\":2508:2528  investors[tx.origin] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":2508:2517  investors */\n      0x04\n        /* \"contracts/AMM.sol\":2508:2528  investors[tx.origin] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/AMM.sol\":2508:2541  investors[tx.origin] += msg.value */\n      dup1\n      sload\n        /* \"contracts/AMM.sol\":2532:2541  msg.value */\n      callvalue\n      swap3\n        /* \"contracts/AMM.sol\":2508:2528  investors[tx.origin] */\n      swap1\n        /* \"contracts/AMM.sol\":2508:2541  investors[tx.origin] += msg.value */\n      tag_212\n      swap1\n        /* \"contracts/AMM.sol\":2532:2541  msg.value */\n      dup5\n      swap1\n        /* \"contracts/AMM.sol\":2508:2541  investors[tx.origin] += msg.value */\n      tag_211\n      jump\t// in\n    tag_212:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/AMM.sol\":2562:2577  tokens_received */\n      0x06\n        /* \"contracts/AMM.sol\":2562:2594  tokens_received = tokens_swapped */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/AMM.sol\":2620:2649  TokensSwapped(tokens_swapped) */\n      mload(0x40)\n        /* \"#utility.yul\":2958:2983   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":2620:2649  TokensSwapped(tokens_swapped) */\n      0xdb04c7a6d4758fd55d738ebc67e7f3010ac922be00771ef29521a4090d1eb13f\n      swap1\n        /* \"#utility.yul\":2946:2948   */\n      0x20\n        /* \"#utility.yul\":2931:2949   */\n      add\n        /* \"contracts/AMM.sol\":2620:2649  TokensSwapped(tokens_swapped) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/AMM.sol\":2237:2663  {\r... */\n      pop\n        /* \"contracts/AMM.sol\":2200:2663  function ethToErc() external payable {\r... */\n      jump\t// out\n        /* \"contracts/AMM.sol\":5278:5408  function getTokenBalance() external view returns (uint256) {\r... */\n    tag_88:\n        /* \"contracts/AMM.sol\":5328:5335  uint256 */\n      0x00\n        /* \"contracts/AMM.sol\":5363:5371  tokenERC */\n      dup1\n      sload\n        /* \"contracts/AMM.sol\":5363:5396  tokenERC.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":5390:5394  this */\n      address\n        /* \"contracts/AMM.sol\":5363:5396  tokenERC.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1677:1751   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AMM.sol\":5363:5371  tokenERC */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/AMM.sol\":5363:5381  tokenERC.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1650:1668   */\n      0x24\n      add\n        /* \"contracts/AMM.sol\":5363:5396  tokenERC.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_218:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_219\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_219:\n        /* \"contracts/AMM.sol\":5356:5396  return tokenERC.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":5278:5408  function getTokenBalance() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/AMM.sol\":967:1578  function initialize(address token_address, uint256 token_amount) external payable {\r... */\n    tag_102:\n        /* \"contracts/AMM.sol\":1076:1091  total_liquidity */\n      sload(0x01)\n        /* \"contracts/AMM.sol\":1076:1096  total_liquidity == 0 */\n      iszero\n        /* \"contracts/AMM.sol\":1068:1097  require(total_liquidity == 0) */\n      tag_221\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_221:\n        /* \"contracts/AMM.sol\":1139:1140  0 */\n      0x00\n        /* \"contracts/AMM.sol\":1124:1136  token_amount */\n      dup2\n        /* \"contracts/AMM.sol\":1124:1140  token_amount > 0 */\n      gt\n        /* \"contracts/AMM.sol\":1116:1141  require(token_amount > 0) */\n      tag_222\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_222:\n        /* \"contracts/AMM.sol\":1180:1181  0 */\n      0x00\n        /* \"contracts/AMM.sol\":1168:1177  msg.value */\n      callvalue\n        /* \"contracts/AMM.sol\":1168:1181  msg.value > 0 */\n      gt\n        /* \"contracts/AMM.sol\":1160:1182  require(msg.value > 0) */\n      tag_223\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_223:\n        /* \"contracts/AMM.sol\":1209:1210  0 */\n      0x00\n        /* \"contracts/AMM.sol\":1203:1206  fee */\n      0x03\n        /* \"contracts/AMM.sol\":1203:1210  fee = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/AMM.sol\":1229:1261  tokenERC = IERC20(token_address) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      dup3\n      sstore\n        /* \"contracts/AMM.sol\":1316:1337  address(this).balance */\n      selfbalance\n      0x01\n        /* \"contracts/AMM.sol\":1298:1337  total_liquidity = address(this).balance */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/AMM.sol\":1366:1375  tx.origin */\n      origin\n        /* \"contracts/AMM.sol\":1356:1376  liquidity[tx.origin] */\n      dup1\n      dup5\n      mstore\n        /* \"contracts/AMM.sol\":1356:1365  liquidity */\n      0x05\n        /* \"contracts/AMM.sol\":1356:1376  liquidity[tx.origin] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/AMM.sol\":1356:1394  liquidity[tx.origin] = total_liquidity */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/AMM.sol\":1451:1459  tokenERC */\n      swap3\n      sload\n        /* \"contracts/AMM.sol\":1451:1512  tokenERC.transferFrom(tx.origin, address(this), token_amount) */\n      swap1\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2025:2059   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/AMM.sol\":1492:1496  this */\n      address\n        /* \"#utility.yul\":2075:2093   */\n      0x24\n      dup5\n      add\n        /* \"#utility.yul\":2068:2111   */\n      mstore\n        /* \"#utility.yul\":2127:2145   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":2120:2154   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/AMM.sol\":1451:1459  tokenERC */\n      and\n      swap1\n        /* \"contracts/AMM.sol\":1451:1472  tokenERC.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":1937:1955   */\n      0x64\n      add\n        /* \"contracts/AMM.sol\":1451:1512  tokenERC.transferFrom(tx.origin, address(this), token_amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_226:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_229\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_229:\n        /* \"contracts/AMM.sol\":1443:1513  require(tokenERC.transferFrom(tx.origin, address(this), token_amount)) */\n      tag_230\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_230:\n        /* \"contracts/AMM.sol\":1539:1566  Initialize(total_liquidity) */\n      0xc43e48cf47e9fa186d0f4096c61d1fcb54159799f935a2aa32e5589688ee36e1\n        /* \"contracts/AMM.sol\":1550:1565  total_liquidity */\n      sload(0x01)\n        /* \"contracts/AMM.sol\":1539:1566  Initialize(total_liquidity) */\n      mload(0x40)\n      tag_231\n      swap2\n        /* \"#utility.yul\":2958:2983   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2946:2948   */\n      0x20\n        /* \"#utility.yul\":2931:2949   */\n      add\n      swap1\n        /* \"#utility.yul\":2812:2989   */\n      jump\n        /* \"contracts/AMM.sol\":1539:1566  Initialize(total_liquidity) */\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/AMM.sol\":967:1578  function initialize(address token_address, uint256 token_amount) external payable {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AMM.sol\":3238:3868  function deposit() external payable {\r... */\n    tag_104:\n        /* \"contracts/AMM.sol\":3313:3314  0 */\n      0x00\n        /* \"contracts/AMM.sol\":3301:3310  msg.value */\n      callvalue\n        /* \"contracts/AMM.sol\":3301:3314  msg.value > 0 */\n      gt\n        /* \"contracts/AMM.sol\":3293:3315  require(msg.value > 0) */\n      tag_233\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_233:\n        /* \"contracts/AMM.sol\":3334:3354  uint256 token_amount */\n      0x00\n        /* \"contracts/AMM.sol\":3409:3442  address(this).balance - msg.value */\n      tag_234\n        /* \"contracts/AMM.sol\":3433:3442  msg.value */\n      callvalue\n        /* \"contracts/AMM.sol\":3409:3430  address(this).balance */\n      selfbalance\n        /* \"contracts/AMM.sol\":3409:3442  address(this).balance - msg.value */\n      tag_153\n      jump\t// in\n    tag_234:\n        /* \"contracts/AMM.sol\":3371:3379  tokenERC */\n      sload(0x00)\n        /* \"contracts/AMM.sol\":3371:3404  tokenERC.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":3398:3402  this */\n      address\n        /* \"contracts/AMM.sol\":3371:3404  tokenERC.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1677:1751   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AMM.sol\":3371:3379  tokenERC */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/AMM.sol\":3371:3389  tokenERC.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1650:1668   */\n      0x24\n      add\n        /* \"contracts/AMM.sol\":3371:3404  tokenERC.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_236\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_236:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_238:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_239\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_239:\n        /* \"contracts/AMM.sol\":3359:3404  msg.value * tokenERC.balanceOf(address(this)) */\n      tag_240\n      swap1\n        /* \"contracts/AMM.sol\":3359:3368  msg.value */\n      callvalue\n        /* \"contracts/AMM.sol\":3359:3404  msg.value * tokenERC.balanceOf(address(this)) */\n      tag_119\n      jump\t// in\n    tag_240:\n        /* \"contracts/AMM.sol\":3358:3443  (msg.value * tokenERC.balanceOf(address(this))) / (address(this).balance - msg.value) */\n      tag_241\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_241:\n        /* \"contracts/AMM.sol\":3334:3444  uint256 token_amount = ((msg.value * tokenERC.balanceOf(address(this))) / (address(this).balance - msg.value)) */\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":3463:3486  uint256 liquidity_added */\n      0x00\n        /* \"contracts/AMM.sol\":3522:3555  address(this).balance - msg.value */\n      tag_242\n        /* \"contracts/AMM.sol\":3546:3555  msg.value */\n      callvalue\n        /* \"contracts/AMM.sol\":3522:3543  address(this).balance */\n      selfbalance\n        /* \"contracts/AMM.sol\":3522:3555  address(this).balance - msg.value */\n      tag_153\n      jump\t// in\n    tag_242:\n        /* \"contracts/AMM.sol\":3502:3517  total_liquidity */\n      sload(0x01)\n        /* \"contracts/AMM.sol\":3490:3517  msg.value * total_liquidity */\n      tag_243\n      swap1\n        /* \"contracts/AMM.sol\":3490:3499  msg.value */\n      callvalue\n        /* \"contracts/AMM.sol\":3490:3517  msg.value * total_liquidity */\n      tag_119\n      jump\t// in\n    tag_243:\n        /* \"contracts/AMM.sol\":3489:3556  (msg.value * total_liquidity) / (address(this).balance - msg.value) */\n      tag_244\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_244:\n        /* \"contracts/AMM.sol\":3587:3596  tx.origin */\n      origin\n        /* \"contracts/AMM.sol\":3577:3597  liquidity[tx.origin] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":3577:3586  liquidity */\n      0x05\n        /* \"contracts/AMM.sol\":3577:3597  liquidity[tx.origin] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/AMM.sol\":3577:3616  liquidity[tx.origin] += liquidity_added */\n      dup1\n      sload\n        /* \"contracts/AMM.sol\":3463:3556  uint256 liquidity_added = (msg.value * total_liquidity) / (address(this).balance - msg.value) */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"contracts/AMM.sol\":3577:3597  liquidity[tx.origin] */\n      swap1\n      swap2\n      swap1\n        /* \"contracts/AMM.sol\":3577:3616  liquidity[tx.origin] += liquidity_added */\n      tag_245\n      swap1\n        /* \"contracts/AMM.sol\":3463:3556  uint256 liquidity_added = (msg.value * total_liquidity) / (address(this).balance - msg.value) */\n      dup5\n      swap1\n        /* \"contracts/AMM.sol\":3577:3616  liquidity[tx.origin] += liquidity_added */\n      tag_211\n      jump\t// in\n    tag_245:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":3656:3671  liquidity_added */\n      dup1\n        /* \"contracts/AMM.sol\":3637:3652  total_liquidity */\n      0x01\n      0x00\n        /* \"contracts/AMM.sol\":3637:3671  total_liquidity += liquidity_added */\n      dup3\n      dup3\n      sload\n      tag_246\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_246:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/AMM.sol\":3698:3706  tokenERC */\n      sload(0x00)\n        /* \"contracts/AMM.sol\":3698:3759  tokenERC.transferFrom(tx.origin, address(this), token_amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":3720:3729  tx.origin */\n      origin\n        /* \"contracts/AMM.sol\":3698:3759  tokenERC.transferFrom(tx.origin, address(this), token_amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2025:2059   */\n      mstore\n        /* \"contracts/AMM.sol\":3739:3743  this */\n      address\n        /* \"#utility.yul\":2075:2093   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2068:2111   */\n      mstore\n        /* \"#utility.yul\":2127:2145   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":2120:2154   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AMM.sol\":3698:3706  tokenERC */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/AMM.sol\":3698:3719  tokenERC.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":1937:1955   */\n      0x64\n      add\n        /* \"contracts/AMM.sol\":3698:3759  tokenERC.transferFrom(tx.origin, address(this), token_amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_248\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_248:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_250\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_250:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_251\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_251:\n        /* \"contracts/AMM.sol\":3690:3760  require(tokenERC.transferFrom(tx.origin, address(this), token_amount)) */\n      tag_252\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_252:\n        /* \"contracts/AMM.sol\":3786:3810  Deposit(liquidity_added) */\n      mload(0x40)\n        /* \"#utility.yul\":2958:2983   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":3786:3810  Deposit(liquidity_added) */\n      0x4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e38426\n      swap1\n        /* \"#utility.yul\":2946:2948   */\n      0x20\n        /* \"#utility.yul\":2931:2949   */\n      add\n        /* \"contracts/AMM.sol\":3786:3810  Deposit(liquidity_added) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/AMM.sol\":3829:3838  liq_added */\n      0x08\n        /* \"contracts/AMM.sol\":3829:3856  liq_added = liquidity_added */\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":3238:3868  function deposit() external payable {\r... */\n      jump\t// out\n        /* \"contracts/AMM.sol\":5906:6079  function finish() external {\r... */\n    tag_107:\n        /* \"contracts/AMM.sol\":5952:5960  tokenERC */\n      sload(0x00)\n        /* \"contracts/AMM.sol\":5981:6014  tokenERC.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":6008:6012  this */\n      address\n        /* \"contracts/AMM.sol\":5981:6014  tokenERC.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1677:1751   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AMM.sol\":5952:5960  tokenERC */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/AMM.sol\":5952:5969  tokenERC.transfer */\n      0xa9059cbb\n      swap1\n        /* \"contracts/AMM.sol\":5970:5979  tx.origin */\n      origin\n      swap1\n        /* \"contracts/AMM.sol\":5952:5960  tokenERC */\n      dup4\n      swap1\n        /* \"contracts/AMM.sol\":5981:5999  tokenERC.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1650:1668   */\n      0x24\n      add\n        /* \"contracts/AMM.sol\":5981:6014  tokenERC.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_256\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_256:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_258\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_258:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_259\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_259:\n        /* \"contracts/AMM.sol\":5952:6016  tokenERC.transfer(tx.origin, tokenERC.balanceOf(address(this)) ) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2357:2412   */\n      swap1\n      swap3\n      and\n        /* \"contracts/AMM.sol\":5952:6016  tokenERC.transfer(tx.origin, tokenERC.balanceOf(address(this)) ) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2339:2413   */\n      mstore\n        /* \"#utility.yul\":2429:2447   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2422:2456   */\n      mstore\n        /* \"#utility.yul\":2312:2330   */\n      0x44\n      add\n        /* \"contracts/AMM.sol\":5952:6016  tokenERC.transfer(tx.origin, tokenERC.balanceOf(address(this)) ) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_261:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_263\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_263:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_264\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_264:\n      pop\n        /* \"contracts/AMM.sol\":6056:6065  tx.origin */\n      origin\n        /* \"contracts/AMM.sol\":6035:6067  selfdestruct(payable(tx.origin)) */\n      selfdestruct\n        /* \"contracts/AMM.sol\":2677:3226  function ercToEth(uint256 token_amount) external {\r... */\n    tag_115:\n        /* \"contracts/AMM.sol\":2747:2766  uint256 eth_swapped */\n      0x00\n        /* \"contracts/AMM.sol\":2798:2806  tokenERC */\n      dup1\n      sload\n        /* \"contracts/AMM.sol\":2798:2831  tokenERC.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":2825:2829  this */\n      address\n        /* \"contracts/AMM.sol\":2798:2831  tokenERC.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1677:1751   */\n      mstore\n        /* \"contracts/AMM.sol\":2769:2855  calculatePrice(token_amount, tokenERC.balanceOf(address(this)), address(this).balance) */\n      tag_266\n      swap2\n        /* \"contracts/AMM.sol\":2784:2796  token_amount */\n      dup5\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AMM.sol\":2798:2806  tokenERC */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/AMM.sol\":2798:2816  tokenERC.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1650:1668   */\n      0x24\n      add\n        /* \"contracts/AMM.sol\":2798:2831  tokenERC.balanceOf(address(this)) */\n      tag_182\n        /* \"#utility.yul\":1531:1757   */\n      jump\n        /* \"contracts/AMM.sol\":2769:2855  calculatePrice(token_amount, tokenERC.balanceOf(address(this)), address(this).balance) */\n    tag_266:\n        /* \"contracts/AMM.sol\":2895:2933  tx.origin.call{value: eth_swapped}(\"\") */\n      mload(0x40)\n        /* \"contracts/AMM.sol\":2747:2855  uint256 eth_swapped = calculatePrice(token_amount, tokenERC.balanceOf(address(this)), address(this).balance) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/AMM.sol\":2877:2889  bool success */\n      0x00\n      swap1\n        /* \"contracts/AMM.sol\":2895:2904  tx.origin */\n      origin\n      swap1\n        /* \"contracts/AMM.sol\":2747:2855  uint256 eth_swapped = calculatePrice(token_amount, tokenERC.balanceOf(address(this)), address(this).balance) */\n      dup4\n      swap1\n        /* \"contracts/AMM.sol\":2877:2889  bool success */\n      dup4\n        /* \"contracts/AMM.sol\":2895:2933  tx.origin.call{value: eth_swapped}(\"\") */\n      dup2\n        /* \"contracts/AMM.sol\":2877:2889  bool success */\n      dup2\n        /* \"contracts/AMM.sol\":2895:2933  tx.origin.call{value: eth_swapped}(\"\") */\n      dup2\n        /* \"contracts/AMM.sol\":2747:2855  uint256 eth_swapped = calculatePrice(token_amount, tokenERC.balanceOf(address(this)), address(this).balance) */\n      dup6\n        /* \"contracts/AMM.sol\":2895:2904  tx.origin */\n      dup8\n        /* \"contracts/AMM.sol\":2895:2933  tx.origin.call{value: eth_swapped}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_275\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_274)\n    tag_275:\n      0x60\n      swap2\n      pop\n    tag_274:\n      pop\n        /* \"contracts/AMM.sol\":2876:2933  (bool success, ) = tx.origin.call{value: eth_swapped}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":2960:2967  success */\n      dup1\n        /* \"contracts/AMM.sol\":2952:2988  require(success, \"Transfer failed.\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2669:2671   */\n      0x20\n        /* \"contracts/AMM.sol\":2952:2988  require(success, \"Transfer failed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2651:2672   */\n      mstore\n        /* \"#utility.yul\":2708:2710   */\n      0x10\n        /* \"#utility.yul\":2688:2706   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2681:2711   */\n      mstore\n      shl(0x81, 0x2a3930b739b332b9103330b4b632b217)\n        /* \"#utility.yul\":2727:2745   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2720:2766   */\n      mstore\n        /* \"#utility.yul\":2783:2801   */\n      0x64\n      add\n        /* \"contracts/AMM.sol\":2952:2988  require(success, \"Transfer failed.\") */\n      tag_140\n        /* \"#utility.yul\":2467:2807   */\n      jump\n        /* \"contracts/AMM.sol\":2952:2988  require(success, \"Transfer failed.\") */\n    tag_276:\n        /* \"contracts/AMM.sol\":3021:3029  tokenERC */\n      sload(0x00)\n        /* \"contracts/AMM.sol\":3021:3082  tokenERC.transferFrom(tx.origin, address(this), token_amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":3043:3052  tx.origin */\n      origin\n        /* \"contracts/AMM.sol\":3021:3082  tokenERC.transferFrom(tx.origin, address(this), token_amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2025:2059   */\n      mstore\n        /* \"contracts/AMM.sol\":3062:3066  this */\n      address\n        /* \"#utility.yul\":2075:2093   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2068:2111   */\n      mstore\n        /* \"#utility.yul\":2127:2145   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":2120:2154   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AMM.sol\":3021:3029  tokenERC */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/AMM.sol\":3021:3042  tokenERC.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":1937:1955   */\n      0x64\n      add\n        /* \"contracts/AMM.sol\":3021:3082  tokenERC.transferFrom(tx.origin, address(this), token_amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_279\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_279:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_281\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_281:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_282\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_282:\n        /* \"contracts/AMM.sol\":3013:3083  require(tokenERC.transferFrom(tx.origin, address(this), token_amount)) */\n      tag_283\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_283:\n        /* \"contracts/AMM.sol\":3111:3122  eth_swapped */\n      dup2\n        /* \"contracts/AMM.sol\":3104:3107  fee */\n      0x03\n      0x00\n        /* \"contracts/AMM.sol\":3104:3122  fee += eth_swapped */\n      dup3\n      dup3\n      sload\n      tag_284\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_284:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/AMM.sol\":3146:3169  ETHSwapped(eth_swapped) */\n      mload(0x40)\n        /* \"#utility.yul\":2958:2983   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/AMM.sol\":3146:3169  ETHSwapped(eth_swapped) */\n      0x4dbf3a71a7c7262f432c2cad7808225832255d07f7d8ab85117677c0b5c0a850\n      swap1\n        /* \"#utility.yul\":2946:2948   */\n      0x20\n        /* \"#utility.yul\":2931:2949   */\n      add\n        /* \"contracts/AMM.sol\":3146:3169  ETHSwapped(eth_swapped) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n        /* \"contracts/AMM.sol\":3188:3200  eth_received */\n      0x07\n        /* \"contracts/AMM.sol\":3188:3214  eth_received = eth_swapped */\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":2677:3226  function ercToEth(uint256 token_amount) external {\r... */\n      jump\t// out\n        /* \"contracts/AMM.sol\":1590:1802  function calculatePrice(uint256 input_value, uint256 input_pool, uint256 output_pool) internal pure returns (uint256) {\r... */\n    tag_187:\n        /* \"contracts/AMM.sol\":1699:1706  uint256 */\n      0x00\n        /* \"contracts/AMM.sol\":1765:1789  input_pool + input_value */\n      tag_287\n        /* \"contracts/AMM.sol\":1778:1789  input_value */\n      dup5\n        /* \"contracts/AMM.sol\":1765:1775  input_pool */\n      dup5\n        /* \"contracts/AMM.sol\":1765:1789  input_pool + input_value */\n      tag_211\n      jump\t// in\n    tag_287:\n        /* \"contracts/AMM.sol\":1735:1760  input_value * output_pool */\n      tag_288\n        /* \"contracts/AMM.sol\":1749:1760  output_pool */\n      dup4\n        /* \"contracts/AMM.sol\":1735:1746  input_value */\n      dup7\n        /* \"contracts/AMM.sol\":1735:1760  input_value * output_pool */\n      tag_119\n      jump\t// in\n    tag_288:\n        /* \"contracts/AMM.sol\":1734:1790  (input_value * output_pool) / (input_pool + input_value) */\n      tag_289\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_289:\n        /* \"contracts/AMM.sol\":1727:1790  return (input_value * output_pool) / (input_pool + input_value) */\n      swap5\n        /* \"contracts/AMM.sol\":1590:1802  function calculatePrice(uint256 input_value, uint256 input_pool, uint256 output_pool) internal pure returns (uint256) {\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:210   */\n    tag_291:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_293\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":111:204   */\n    tag_293:\n        /* \"#utility.yul\":14:210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":215:401   */\n    tag_58:\n        /* \"#utility.yul\":274:280   */\n      0x00\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":315:324   */\n      dup3\n        /* \"#utility.yul\":306:313   */\n      dup5\n        /* \"#utility.yul\":302:325   */\n      sub\n        /* \"#utility.yul\":298:330   */\n      slt\n        /* \"#utility.yul\":295:347   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":340:341   */\n      dup1\n        /* \"#utility.yul\":333:345   */\n      revert\n        /* \"#utility.yul\":295:347   */\n    tag_295:\n        /* \"#utility.yul\":366:395   */\n      tag_296\n        /* \"#utility.yul\":385:394   */\n      dup3\n        /* \"#utility.yul\":366:395   */\n      tag_291\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":356:395   */\n      swap4\n        /* \"#utility.yul\":215:401   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":406:660   */\n    tag_101:\n        /* \"#utility.yul\":474:480   */\n      0x00\n        /* \"#utility.yul\":482:488   */\n      dup1\n        /* \"#utility.yul\":535:537   */\n      0x40\n        /* \"#utility.yul\":523:532   */\n      dup4\n        /* \"#utility.yul\":514:521   */\n      dup6\n        /* \"#utility.yul\":510:533   */\n      sub\n        /* \"#utility.yul\":506:538   */\n      slt\n        /* \"#utility.yul\":503:555   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":551:552   */\n      0x00\n        /* \"#utility.yul\":548:549   */\n      dup1\n        /* \"#utility.yul\":541:553   */\n      revert\n        /* \"#utility.yul\":503:555   */\n    tag_298:\n        /* \"#utility.yul\":574:603   */\n      tag_299\n        /* \"#utility.yul\":593:602   */\n      dup4\n        /* \"#utility.yul\":574:603   */\n      tag_291\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":564:603   */\n      swap5\n        /* \"#utility.yul\":650:652   */\n      0x20\n        /* \"#utility.yul\":635:653   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":622:654   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":406:660   */\n      jump\t// out\n        /* \"#utility.yul\":665:942   */\n    tag_166:\n        /* \"#utility.yul\":732:738   */\n      0x00\n        /* \"#utility.yul\":785:787   */\n      0x20\n        /* \"#utility.yul\":773:782   */\n      dup3\n        /* \"#utility.yul\":764:771   */\n      dup5\n        /* \"#utility.yul\":760:783   */\n      sub\n        /* \"#utility.yul\":756:788   */\n      slt\n        /* \"#utility.yul\":753:805   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":801:802   */\n      0x00\n        /* \"#utility.yul\":798:799   */\n      dup1\n        /* \"#utility.yul\":791:803   */\n      revert\n        /* \"#utility.yul\":753:805   */\n    tag_301:\n        /* \"#utility.yul\":833:842   */\n      dup2\n        /* \"#utility.yul\":827:843   */\n      mload\n        /* \"#utility.yul\":886:891   */\n      dup1\n        /* \"#utility.yul\":879:892   */\n      iszero\n        /* \"#utility.yul\":872:893   */\n      iszero\n        /* \"#utility.yul\":865:870   */\n      dup2\n        /* \"#utility.yul\":862:894   */\n      eq\n        /* \"#utility.yul\":852:912   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":908:909   */\n      0x00\n        /* \"#utility.yul\":905:906   */\n      dup1\n        /* \"#utility.yul\":898:910   */\n      revert\n        /* \"#utility.yul\":947:1127   */\n    tag_35:\n        /* \"#utility.yul\":1006:1012   */\n      0x00\n        /* \"#utility.yul\":1059:1061   */\n      0x20\n        /* \"#utility.yul\":1047:1056   */\n      dup3\n        /* \"#utility.yul\":1038:1045   */\n      dup5\n        /* \"#utility.yul\":1034:1057   */\n      sub\n        /* \"#utility.yul\":1030:1062   */\n      slt\n        /* \"#utility.yul\":1027:1079   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1072:1073   */\n      dup1\n        /* \"#utility.yul\":1065:1077   */\n      revert\n        /* \"#utility.yul\":1027:1079   */\n    tag_304:\n      pop\n        /* \"#utility.yul\":1098:1121   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":947:1127   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1132:1316   */\n    tag_128:\n        /* \"#utility.yul\":1202:1208   */\n      0x00\n        /* \"#utility.yul\":1255:1257   */\n      0x20\n        /* \"#utility.yul\":1243:1252   */\n      dup3\n        /* \"#utility.yul\":1234:1241   */\n      dup5\n        /* \"#utility.yul\":1230:1253   */\n      sub\n        /* \"#utility.yul\":1226:1258   */\n      slt\n        /* \"#utility.yul\":1223:1275   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":1271:1272   */\n      0x00\n        /* \"#utility.yul\":1268:1269   */\n      dup1\n        /* \"#utility.yul\":1261:1273   */\n      revert\n        /* \"#utility.yul\":1223:1275   */\n    tag_306:\n      pop\n        /* \"#utility.yul\":1294:1310   */\n      mload\n      swap2\n        /* \"#utility.yul\":1132:1316   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3247:3375   */\n    tag_211:\n        /* \"#utility.yul\":3287:3290   */\n      0x00\n        /* \"#utility.yul\":3318:3319   */\n      dup3\n        /* \"#utility.yul\":3314:3320   */\n      not\n        /* \"#utility.yul\":3311:3312   */\n      dup3\n        /* \"#utility.yul\":3308:3321   */\n      gt\n        /* \"#utility.yul\":3305:3344   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":3324:3342   */\n      tag_316\n      tag_317\n      jump\t// in\n    tag_316:\n      pop\n        /* \"#utility.yul\":3360:3369   */\n      add\n      swap1\n        /* \"#utility.yul\":3247:3375   */\n      jump\t// out\n        /* \"#utility.yul\":3380:3597   */\n    tag_121:\n        /* \"#utility.yul\":3420:3421   */\n      0x00\n        /* \"#utility.yul\":3446:3447   */\n      dup3\n        /* \"#utility.yul\":3436:3568   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":3490:3500   */\n      0x4e487b71\n        /* \"#utility.yul\":3485:3488   */\n      0xe0\n        /* \"#utility.yul\":3481:3501   */\n      shl\n        /* \"#utility.yul\":3478:3479   */\n      0x00\n        /* \"#utility.yul\":3471:3502   */\n      mstore\n        /* \"#utility.yul\":3525:3529   */\n      0x12\n        /* \"#utility.yul\":3522:3523   */\n      0x04\n        /* \"#utility.yul\":3515:3530   */\n      mstore\n        /* \"#utility.yul\":3553:3557   */\n      0x24\n        /* \"#utility.yul\":3550:3551   */\n      0x00\n        /* \"#utility.yul\":3543:3558   */\n      revert\n        /* \"#utility.yul\":3436:3568   */\n    tag_319:\n      pop\n        /* \"#utility.yul\":3582:3591   */\n      div\n      swap1\n        /* \"#utility.yul\":3380:3597   */\n      jump\t// out\n        /* \"#utility.yul\":3602:3770   */\n    tag_119:\n        /* \"#utility.yul\":3642:3649   */\n      0x00\n        /* \"#utility.yul\":3708:3709   */\n      dup2\n        /* \"#utility.yul\":3704:3705   */\n      0x00\n        /* \"#utility.yul\":3700:3706   */\n      not\n        /* \"#utility.yul\":3696:3710   */\n      div\n        /* \"#utility.yul\":3693:3694   */\n      dup4\n        /* \"#utility.yul\":3690:3711   */\n      gt\n        /* \"#utility.yul\":3685:3686   */\n      dup3\n        /* \"#utility.yul\":3678:3687   */\n      iszero\n        /* \"#utility.yul\":3671:3688   */\n      iszero\n        /* \"#utility.yul\":3667:3712   */\n      and\n        /* \"#utility.yul\":3664:3735   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":3715:3733   */\n      tag_322\n      tag_317\n      jump\t// in\n    tag_322:\n      pop\n        /* \"#utility.yul\":3755:3764   */\n      mul\n      swap1\n        /* \"#utility.yul\":3602:3770   */\n      jump\t// out\n        /* \"#utility.yul\":3775:3900   */\n    tag_153:\n        /* \"#utility.yul\":3815:3819   */\n      0x00\n        /* \"#utility.yul\":3843:3844   */\n      dup3\n        /* \"#utility.yul\":3840:3841   */\n      dup3\n        /* \"#utility.yul\":3837:3845   */\n      lt\n        /* \"#utility.yul\":3834:3868   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":3848:3866   */\n      tag_325\n      tag_317\n      jump\t// in\n    tag_325:\n      pop\n        /* \"#utility.yul\":3885:3894   */\n      sub\n      swap1\n        /* \"#utility.yul\":3775:3900   */\n      jump\t// out\n        /* \"#utility.yul\":3905:4032   */\n    tag_317:\n        /* \"#utility.yul\":3966:3976   */\n      0x4e487b71\n        /* \"#utility.yul\":3961:3964   */\n      0xe0\n        /* \"#utility.yul\":3957:3977   */\n      shl\n        /* \"#utility.yul\":3954:3955   */\n      0x00\n        /* \"#utility.yul\":3947:3978   */\n      mstore\n        /* \"#utility.yul\":3997:4001   */\n      0x11\n        /* \"#utility.yul\":3994:3995   */\n      0x04\n        /* \"#utility.yul\":3987:4002   */\n      mstore\n        /* \"#utility.yul\":4021:4025   */\n      0x24\n        /* \"#utility.yul\":4018:4019   */\n      0x00\n        /* \"#utility.yul\":4011:4026   */\n      revert\n\n    auxdata: 0xa26469706673582212206920cee972a40f0cfc9fd66772e259832ceefccb083d8c7fdf59d929eb5c43c464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND ORIGIN OR SWAP1 SSTORE PUSH2 0x11F6 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72A9D124 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0xB8C876B1 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD56B2889 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD56B2889 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xDEBC674C EQ PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB8C876B1 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x72A9D124 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x74942C0F EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x7937C03D EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x82B2E257 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x8666107C EQ PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F244D4E GT PUSH2 0x102 JUMPI DUP1 PUSH4 0x5F244D4E EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x66B3F6BF EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x67DA263D EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x6F7BC9BE EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x707E7E87 EQ PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x1EB928AA EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x26C4E60D EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x31F3BD28 EQ PUSH2 0x1CD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x1108 JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x158 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AB PUSH2 0x45A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AB PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1108 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1108 JUMP JUMPDEST PUSH2 0x738 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x1108 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1108 JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x8FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0xA12 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x320 CALLDATASIZE PUSH1 0x4 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0xA93 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0xBCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AB PUSH2 0xDA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AB PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0x1108 JUMP JUMPDEST PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 SLOAD SELFBALANCE DUP6 PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP5 POP SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x416 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x444 SWAP1 DUP8 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST SWAP2 SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x3 SLOAD PUSH1 0x3 PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 ORIGIN SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4BD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x50B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2A3930B739B332B9103330B4B632B217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x51F SELFBALANCE DUP5 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP5 POP SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x589 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x5B7 SWAP1 DUP6 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x1193 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 ORIGIN SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x621 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2A3930B739B332B9103330B4B632B217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x502 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE ORIGIN PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x56CA301A9219608C91E7BCEE90E083C19671D2CDCC96752C7AF291CEE5F9C8C8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 DUP3 SWAP2 SELFBALANCE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x794 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B8 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x7C2 SWAP1 DUP7 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SELFBALANCE PUSH1 0x1 SLOAD DUP7 PUSH2 0x444 SWAP2 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x868 SWAP2 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x862 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST SELFBALANCE PUSH2 0x1056 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x868 DUP3 PUSH2 0x87E DUP2 SELFBALANCE PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F9 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90E CALLVALUE PUSH2 0x87E DUP2 SELFBALANCE PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE ORIGIN PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x95B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x993 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9AE SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP ORIGIN PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x9D2 SWAP1 DUP5 SWAP1 PUSH2 0x113A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDB04C7A6D4758FD55D738EBC67E7F3010AC922BE00771EF29521A4090D1EB13F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA8E SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD ISZERO PUSH2 0xAA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xAAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0xABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE SELFBALANCE PUSH1 0x1 DUP2 SWAP1 SSTORE ORIGIN DUP1 DUP5 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP3 SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP5 SWAP1 MSTORE AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB83 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0xB8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xC43E48CF47E9FA186D0F4096C61D1FCB54159799F935A2AA32E5589688EE36E1 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0xBBF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0xBD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBE4 CALLVALUE SELFBALANCE PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC5F SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0xC69 SWAP1 CALLVALUE PUSH2 0x1174 JUMP JUMPDEST PUSH2 0xC73 SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC81 CALLVALUE SELFBALANCE PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xC8E SWAP1 CALLVALUE PUSH2 0x1174 JUMP JUMPDEST PUSH2 0xC98 SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST ORIGIN PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xCBC SWAP1 DUP5 SWAP1 PUSH2 0x113A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ORIGIN PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD64 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0xD6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x4D6CE1E535DBADE1C23DEFBA91E23B8F791CE5EDC0CC320257A2B364E4E38426 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 ORIGIN SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE2B SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE85 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEA9 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST POP ORIGIN SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0xEE4 SWAP2 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 ORIGIN SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF29 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xF72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2A3930B739B332B9103330B4B632B217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x502 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ORIGIN PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFFC SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0x1005 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1017 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x4DBF3A71A7C7262F432C2CAD7808225832255D07F7D8AB85117677C0B5C0A850 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x7 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1062 DUP5 DUP5 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x106C DUP4 DUP7 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x1076 SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1095 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10B5 DUP3 PUSH2 0x107E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D8 DUP4 PUSH2 0x107E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x10B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x111A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x114D JUMPI PUSH2 0x114D PUSH2 0x11AA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x116F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x118E JUMPI PUSH2 0x118E PUSH2 0x11AA JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x11A5 JUMPI PUSH2 0x11A5 PUSH2 0x11AA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x20CEE972A40F0CFC9FD6 PUSH8 0x72E259832CEEFCCB ADDMOD RETURNDATASIZE DUP13 PUSH32 0xDF59D929EB5C43C464736F6C6343000807003300000000000000000000000000 ",
							"sourceMap": "133:5951:4:-:0;;;891:64;;;;;;;;;-1:-1:-1;923:8:4;:20;;-1:-1:-1;;;;;;923:20:4;934:9;923:20;;;133:5951;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@calculatePrice_858": {
									"entryPoint": 4182,
									"id": 858,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@deposit_1116": {
									"entryPoint": 3019,
									"id": 1116,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@distributeFee_1336": {
									"entryPoint": 1114,
									"id": 1336,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ercToEth_1030": {
									"entryPoint": 3757,
									"id": 1030,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@ethToErc_966": {
									"entryPoint": 2302,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@eth_received_756": {
									"entryPoint": null,
									"id": 756,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fee_722": {
									"entryPoint": null,
									"id": 722,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@finish_1374": {
									"entryPoint": 3494,
									"id": 1374,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_1308": {
									"entryPoint": null,
									"id": 1308,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokenBalance_1296": {
									"entryPoint": 2578,
									"id": 1296,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_836": {
									"entryPoint": 2707,
									"id": 836,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@invested_1348": {
									"entryPoint": null,
									"id": 1348,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@investors_726": {
									"entryPoint": null,
									"id": 726,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liq_added_758": {
									"entryPoint": null,
									"id": 758,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidityAdded_1165": {
									"entryPoint": 1848,
									"id": 1165,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@liquiditySubstracted_1282": {
									"entryPoint": 920,
									"id": 1282,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@liquidity_730": {
									"entryPoint": null,
									"id": 730,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@priceERC_885": {
									"entryPoint": 2158,
									"id": 885,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@priceETH_909": {
									"entryPoint": 2015,
									"id": 909,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokens_received_754": {
									"entryPoint": null,
									"id": 754,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@total_liquidity_718": {
									"entryPoint": null,
									"id": 718,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1240": {
									"entryPoint": 1295,
									"id": 1240,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4522,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4034:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:5"
															},
															"nodeType": "YulIf",
															"src": "111:93:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "14:196:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "285:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "331:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "340:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "333:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "333:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "306:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "315:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "302:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "302:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:32:5"
															},
															"nodeType": "YulIf",
															"src": "295:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "356:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "385:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "366:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "251:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "262:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:5",
														"type": ""
													}
												],
												"src": "215:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "539:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "548:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "551:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "541:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "541:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "541:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "514:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "523:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "510:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "510:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "535:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "506:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "506:32:5"
															},
															"nodeType": "YulIf",
															"src": "503:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "564:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "574:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "574:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "564:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "612:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "639:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "650:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "635:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "635:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "622:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "451:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "462:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "474:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "482:6:5",
														"type": ""
													}
												],
												"src": "406:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "743:199:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "789:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "798:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "801:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "791:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "791:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "791:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "764:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "773:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "760:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "760:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "785:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "756:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:32:5"
															},
															"nodeType": "YulIf",
															"src": "753:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "814:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "833:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "827:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "827:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "818:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "896:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "905:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "908:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "898:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "898:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "898:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "865:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "886:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "879:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "879:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "872:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "872:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "862:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "862:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "855:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "855:40:5"
															},
															"nodeType": "YulIf",
															"src": "852:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "921:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "931:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "709:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "720:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "732:6:5",
														"type": ""
													}
												],
												"src": "665:277:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1017:110:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1063:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1072:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1075:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1065:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1065:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1065:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1038:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1047:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1034:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1034:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1059:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1030:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1030:32:5"
															},
															"nodeType": "YulIf",
															"src": "1027:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1088:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1111:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1098:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "983:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "994:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1006:6:5",
														"type": ""
													}
												],
												"src": "947:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1213:103:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1261:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1261:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1234:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1243:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1230:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1230:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1255:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1226:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1226:32:5"
															},
															"nodeType": "YulIf",
															"src": "1223:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1284:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1300:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1294:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:16:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1284:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1179:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1190:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1202:6:5",
														"type": ""
													}
												],
												"src": "1132:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1512:14:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1514:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1521:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1514:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1496:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1504:3:5",
														"type": ""
													}
												],
												"src": "1321:205:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1632:125:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1642:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1654:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1665:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1650:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1642:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1684:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1699:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1707:42:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1695:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1695:55:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1677:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:74:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1677:74:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1601:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1612:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1623:4:5",
														"type": ""
													}
												],
												"src": "1531:226:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1919:241:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1929:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1941:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1952:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1937:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1937:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1929:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1964:52:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1974:42:5",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1968:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2047:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2055:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2043:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2043:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2025:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2025:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2025:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2079:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2090:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2075:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2075:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2099:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2107:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2095:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2095:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2068:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2068:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2068:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2131:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2127:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2127:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2147:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2120:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1872:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1883:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1891:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1899:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1910:4:5",
														"type": ""
													}
												],
												"src": "1762:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2294:168:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2304:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2316:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2327:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2312:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2312:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2304:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2346:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2361:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2369:42:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:55:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2339:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2339:74:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2339:74:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2433:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2444:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2429:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2429:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2449:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2422:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2422:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2422:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2255:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2266:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2274:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2285:4:5",
														"type": ""
													}
												],
												"src": "2165:297:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2641:166:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2658:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2669:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2651:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2651:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2692:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2703:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2688:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2688:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2708:2:5",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2681:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2681:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2731:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2742:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2727:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2727:18:5"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2747:18:5",
																		"type": "",
																		"value": "Transfer failed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2720:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:46:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2720:46:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2775:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2787:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2798:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2783:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2775:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2618:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2632:4:5",
														"type": ""
													}
												],
												"src": "2467:340:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2913:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2923:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2935:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2946:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2931:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2931:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2923:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2965:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2976:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2958:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2958:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2958:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2882:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2893:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2904:4:5",
														"type": ""
													}
												],
												"src": "2812:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:119:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3145:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3156:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3141:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3141:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3133:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3175:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3186:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3168:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3168:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3213:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3224:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3209:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3209:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3229:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3202:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3202:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3202:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3084:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3095:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3103:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3114:4:5",
														"type": ""
													}
												],
												"src": "2994:248:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3295:80:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3322:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3324:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3324:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3324:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3311:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3318:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3314:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3314:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3308:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3308:13:5"
															},
															"nodeType": "YulIf",
															"src": "3305:39:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3353:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3364:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3367:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3360:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3360:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3353:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3278:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3281:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3287:3:5",
														"type": ""
													}
												],
												"src": "3247:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3426:171:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3457:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3478:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3485:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3490:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3481:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3481:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3471:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3471:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3471:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3522:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3525:4:5",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3515:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3515:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3515:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3550:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3553:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3543:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3543:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3543:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3446:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3439:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3439:9:5"
															},
															"nodeType": "YulIf",
															"src": "3436:132:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3577:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3586:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3589:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3582:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3582:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3577:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3411:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3414:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3420:1:5",
														"type": ""
													}
												],
												"src": "3380:217:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3654:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3713:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3715:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3715:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3715:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3685:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3678:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3678:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3671:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3671:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3693:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3704:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3700:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3700:6:5"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3708:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "3696:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3696:14:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3690:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3690:21:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3667:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3667:45:5"
															},
															"nodeType": "YulIf",
															"src": "3664:71:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3744:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3759:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3762:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3755:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3744:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3633:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3636:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3642:7:5",
														"type": ""
													}
												],
												"src": "3602:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3824:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3846:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3848:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3848:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3848:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3840:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3843:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3837:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3837:8:5"
															},
															"nodeType": "YulIf",
															"src": "3834:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3877:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3889:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3892:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3885:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3885:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3877:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3806:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3809:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3815:4:5",
														"type": ""
													}
												],
												"src": "3775:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3937:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3954:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3961:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3966:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3957:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3957:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3947:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3947:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3947:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3994:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3997:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3987:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3987:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3987:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4018:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4021:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4011:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4011:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4011:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3905:127:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Transfer failed.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72A9D124 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0xB8C876B1 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD56B2889 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD56B2889 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xDEBC674C EQ PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB8C876B1 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x72A9D124 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x74942C0F EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x7937C03D EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x82B2E257 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x8666107C EQ PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F244D4E GT PUSH2 0x102 JUMPI DUP1 PUSH4 0x5F244D4E EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x66B3F6BF EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x67DA263D EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x6F7BC9BE EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x707E7E87 EQ PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x1EB928AA EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x26C4E60D EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x31F3BD28 EQ PUSH2 0x1CD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x1108 JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x158 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AB PUSH2 0x45A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AB PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1108 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1108 JUMP JUMPDEST PUSH2 0x738 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x1108 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1108 JUMP JUMPDEST PUSH2 0x86E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x8FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0xA12 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x320 CALLDATASIZE PUSH1 0x4 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0xA93 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0xBCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AB PUSH2 0xDA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AB PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0x1108 JUMP JUMPDEST PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 SLOAD SELFBALANCE DUP6 PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP5 POP SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x416 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x444 SWAP1 DUP8 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST SWAP2 SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x3 SLOAD PUSH1 0x3 PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 ORIGIN SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4BD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x50B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2A3930B739B332B9103330B4B632B217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x51F SELFBALANCE DUP5 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP5 POP SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x589 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x5B7 SWAP1 DUP6 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x1193 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 ORIGIN SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x621 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2A3930B739B332B9103330B4B632B217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x502 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE ORIGIN PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x56CA301A9219608C91E7BCEE90E083C19671D2CDCC96752C7AF291CEE5F9C8C8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 DUP3 SWAP2 SELFBALANCE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x794 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B8 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x7C2 SWAP1 DUP7 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SELFBALANCE PUSH1 0x1 SLOAD DUP7 PUSH2 0x444 SWAP2 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x868 SWAP2 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x862 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST SELFBALANCE PUSH2 0x1056 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x868 DUP3 PUSH2 0x87E DUP2 SELFBALANCE PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F9 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90E CALLVALUE PUSH2 0x87E DUP2 SELFBALANCE PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE ORIGIN PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x95B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x993 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9AE SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP ORIGIN PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x9D2 SWAP1 DUP5 SWAP1 PUSH2 0x113A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDB04C7A6D4758FD55D738EBC67E7F3010AC922BE00771EF29521A4090D1EB13F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA8E SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD ISZERO PUSH2 0xAA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xAAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0xABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE SELFBALANCE PUSH1 0x1 DUP2 SWAP1 SSTORE ORIGIN DUP1 DUP5 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP3 SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP5 SWAP1 MSTORE AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB83 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0xB8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xC43E48CF47E9FA186D0F4096C61D1FCB54159799F935A2AA32E5589688EE36E1 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0xBBF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0xBD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBE4 CALLVALUE SELFBALANCE PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC5F SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0xC69 SWAP1 CALLVALUE PUSH2 0x1174 JUMP JUMPDEST PUSH2 0xC73 SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC81 CALLVALUE SELFBALANCE PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xC8E SWAP1 CALLVALUE PUSH2 0x1174 JUMP JUMPDEST PUSH2 0xC98 SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST ORIGIN PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xCBC SWAP1 DUP5 SWAP1 PUSH2 0x113A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ORIGIN PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD64 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0xD6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x4D6CE1E535DBADE1C23DEFBA91E23B8F791CE5EDC0CC320257A2B364E4E38426 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 ORIGIN SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE2B SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE85 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEA9 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST POP ORIGIN SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0xEE4 SWAP2 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 ORIGIN SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF29 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xF72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2A3930B739B332B9103330B4B632B217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x502 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ORIGIN PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFFC SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0x1005 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1017 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x4DBF3A71A7C7262F432C2CAD7808225832255D07F7D8AB85117677C0B5C0A850 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x7 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1062 DUP5 DUP5 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x106C DUP4 DUP7 PUSH2 0x1174 JUMP JUMPDEST PUSH2 0x1076 SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1095 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10B5 DUP3 PUSH2 0x107E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D8 DUP4 PUSH2 0x107E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x10B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x111A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x114D JUMPI PUSH2 0x114D PUSH2 0x11AA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x116F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x118E JUMPI PUSH2 0x118E PUSH2 0x11AA JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x11A5 JUMPI PUSH2 0x11A5 PUSH2 0x11AA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x20CEE972A40F0CFC9FD6 PUSH8 0x72E259832CEEFCCB ADDMOD RETURNDATASIZE DUP13 PUSH32 0xDF59D929EB5C43C464736F6C6343000807003300000000000000000000000000 ",
							"sourceMap": "133:5951:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5420:113;;;;;;;;;;-1:-1:-1;5500:21:4;5420:113;;;2958:25:5;;;2946:2;2931:18;5420:113:4;;;;;;;;4909:357;;;;;;;;;;-1:-1:-1;4909:357:4;;;;;:::i;:::-;;:::i;:::-;;;;3168:25:5;;;3224:2;3209:18;;3202:34;;;;3141:18;4909:357:4;2994:248:5;5545:223:4;;;;;;;;;;;;;:::i;:::-;;4249:648;;;;;;;;;;-1:-1:-1;4249:648:4;;;;;:::i;:::-;;:::i;187:30::-;;;;;;;;;;;;;;;;3880:355;;;;;;;;;;-1:-1:-1;3880:355:4;;;;;:::i;:::-;;:::i;5780:114::-;;;;;;;;;;-1:-1:-1;5780:114:4;;;;;:::i;:::-;-1:-1:-1;;;;;5868:14:4;5834:7;5868:14;;;:9;:14;;;;;;;5780:114;2012:176;;;;;;;;;;-1:-1:-1;2012:176:4;;;;;:::i;:::-;;:::i;363:44::-;;;;;;;;;;-1:-1:-1;363:44:4;;;;;:::i;:::-;;;;;;;;;;;;;;854:24;;;;;;;;;;;;;;;;1816:184;;;;;;;;;;-1:-1:-1;1816:184:4;;;;;:::i;:::-;;:::i;775:30::-;;;;;;;;;;;;;;;;2200:463;;;:::i;5278:130::-;;;;;;;;;;;;;:::i;816:27::-;;;;;;;;;;;;;;;;444:45;;;;;;;;;;-1:-1:-1;444:45:4;;;;;:::i;:::-;;;;;;;;;;;;;;967:611;;;;;;:::i;:::-;;:::i;3238:630::-;;;:::i;5906:173::-;;;;;;;;;;;;;:::i;311:18::-;;;;;;;;;;;;;;;;2677:549;;;;;;;;;;-1:-1:-1;2677:549:4;;;;;:::i;:::-;;:::i;4909:357::-;4977:7;4986;5013:17;5067:15;;5042:21;5034:5;:29;;;;:::i;:::-;5033:49;;;;:::i;:::-;5169:15;;5101:19;5132:8;;:33;;-1:-1:-1;;;5132:33:4;;5159:4;5132:33;;;1677:74:5;5013:69:4;;-1:-1:-1;5101:19:4;;-1:-1:-1;;;;;5132:8:4;;;;:18;;1650::5;;5132:33:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5124:41;;:5;:41;:::i;:::-;5123:61;;;;:::i;:::-;5229:9;;5101:83;;-1:-1:-1;4909:357:4;;-1:-1:-1;;;4909:357:4:o;5545:223::-;5597:14;5626:4;5615:3;;5621:1;5615:7;;;;:::i;:::-;5614:16;;;;:::i;:::-;5668:33;;5597;;-1:-1:-1;5650:12:4;;5668:9;;5597:33;;5650:12;5668:33;5650:12;5668:33;5597;5668:9;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5649:52;;;5728:7;5720:36;;;;-1:-1:-1;;;5720:36:4;;2669:2:5;5720:36:4;;;2651:21:5;2708:2;2688:18;;;2681:30;-1:-1:-1;;;2727:18:5;;;2720:46;2783:18;;5720:36:4;;;;;;;;;5578:190;;5545:223::o;4249:648::-;4364:15;;4310:17;;4331:29;4339:21;4331:5;:29;:::i;:::-;4330:49;;;;:::i;:::-;4466:15;;4398:19;4429:8;;:33;;-1:-1:-1;;;4429:33:4;;4456:4;4429:33;;;1677:74:5;4310:69:4;;-1:-1:-1;4398:19:4;;-1:-1:-1;;;;;4429:8:4;;;;:18;;1650::5;;4429:33:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4421:41;;:5;:41;:::i;:::-;4420:61;;;;:::i;:::-;4398:83;;4521:9;4502:15;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;4570:36:4;;4552:12;;4570:9;;4592;;4552:12;4570:36;4552:12;4570:36;4592:9;4570;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4551:55;;;4633:7;4625:36;;;;-1:-1:-1;;;4625:36:4;;2669:2:5;4625:36:4;;;2651:21:5;2708:2;2688:18;;;2681:30;-1:-1:-1;;;2727:18:5;;;2720:46;2783:18;;4625:36:4;2467:340:5;4625:36:4;4694:8;;:41;;-1:-1:-1;;;4694:41:4;;4712:9;4694:41;;;2339:74:5;2429:18;;;2422:34;;;-1:-1:-1;;;;;4694:8:4;;;;:17;;2312:18:5;;4694:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4686:50;;;;;;4762:32;;;3168:25:5;;;3224:2;3209:18;;3202:34;;;4762:32:4;;3141:18:5;4762:32:4;;;;;;;-1:-1:-1;4813:12:4;:24;;;;4856:15;:29;-1:-1:-1;4249:648:4:o;3880:355::-;3940:7;4007:8;;:33;;-1:-1:-1;;;4007:33:4;;4034:4;4007:33;;;1677:74:5;3940:7:4;;;;4045:21;;-1:-1:-1;;;;;4007:8:4;;:18;;1650::5;;4007:33:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4001:39;;:3;:39;:::i;:::-;4000:67;;;;:::i;:::-;3976:92;;4087:23;4140:21;4120:15;;4114:3;:21;;;;:::i;2012:176::-;2065:7;2119:8;;:33;;-1:-1:-1;;;2119:33:4;;2146:4;2119:33;;;1677:74:5;2099:77:4;;2114:3;;-1:-1:-1;;;;;2119:8:4;;;;:18;;1650::5;;2119:33:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2154:21;2099:14;:77::i;:::-;2092:84;2012:176;-1:-1:-1;;2012:176:4:o;1816:184::-;1869:7;1903:85;1918:3;1924:27;1918:3;1924:21;:27;:::i;:::-;1954:8;;:33;;-1:-1:-1;;;1954:33:4;;1981:4;1954:33;;;1677:74:5;-1:-1:-1;;;;;1954:8:4;;;;:18;;1650::5;;1954:33:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1903:14;:85::i;2200:463::-;2256:22;2281:97;2296:9;2308:33;2296:9;2308:21;:33;:::i;2281:97::-;2407:8;;:44;;-1:-1:-1;;;2407:44:4;;2425:9;2407:44;;;2339:74:5;2429:18;;;2422:34;;;2256:122:4;;-1:-1:-1;;;;;;2407:8:4;;:17;;2312:18:5;;2407:44:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2399:53;;;;;;2480:9;2473:3;;:16;;;;;;;:::i;:::-;;;;-1:-1:-1;;2518:9:4;2508:20;;;;:9;:20;;;;;:33;;2532:9;;2508:20;:33;;2532:9;;2508:33;:::i;:::-;;;;-1:-1:-1;;2562:15:4;:32;;;2620:29;;2958:25:5;;;2620:29:4;;2946:2:5;2931:18;2620:29:4;;;;;;;2237:426;2200:463::o;5278:130::-;5328:7;5363:8;;:33;;-1:-1:-1;;;5363:33:4;;5390:4;5363:33;;;1677:74:5;-1:-1:-1;;;;;5363:8:4;;;;:18;;1650::5;;5363:33:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5356:40;;5278:130;:::o;967:611::-;1076:15;;:20;1068:29;;;;;;1139:1;1124:12;:16;1116:25;;;;;;1180:1;1168:9;:13;1160:22;;;;;;1209:1;1203:3;:7;;;1229:32;;-1:-1:-1;;1229:32:4;-1:-1:-1;;;;;1229:32:4;;;;;;;;;1316:21;-1:-1:-1;1298:39:4;;;1366:9;1356:20;;;:9;:20;;;;;;:38;;;;1451:8;;:61;;-1:-1:-1;;;1451:61:4;;;;;2025:34:5;;;;1492:4:4;2075:18:5;;;2068:43;2127:18;;;2120:34;;;1451:8:4;;:21;;1937:18:5;;1451:61:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1443:70;;;;;;1539:27;1550:15;;1539:27;;;;2958:25:5;;2946:2;2931:18;;2812:177;1539:27:4;;;;;;;;967:611;;:::o;3238:630::-;3313:1;3301:9;:13;3293:22;;;;;;3334:20;3409:33;3433:9;3409:21;:33;:::i;:::-;3371:8;;:33;;-1:-1:-1;;;3371:33:4;;3398:4;3371:33;;;1677:74:5;-1:-1:-1;;;;;3371:8:4;;;;:18;;1650::5;;3371:33:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3359:45;;:9;:45;:::i;:::-;3358:85;;;;:::i;:::-;3334:110;-1:-1:-1;3463:23:4;3522:33;3546:9;3522:21;:33;:::i;:::-;3502:15;;3490:27;;:9;:27;:::i;:::-;3489:67;;;;:::i;:::-;3587:9;3577:20;;;;:9;:20;;;;;:39;;3463:93;;-1:-1:-1;3463:93:4;;3577:20;;;:39;;3463:93;;3577:39;:::i;:::-;;;;;;;;3656:15;3637;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;;3698:8:4;;:61;;-1:-1:-1;;;3698:61:4;;3720:9;3698:61;;;2025:34:5;3739:4:4;2075:18:5;;;2068:43;2127:18;;;2120:34;;;-1:-1:-1;;;;;3698:8:4;;;;:21;;1937:18:5;;3698:61:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3690:70;;;;;;3786:24;;2958:25:5;;;3786:24:4;;2946:2:5;2931:18;3786:24:4;;;;;;;3829:9;:27;-1:-1:-1;3238:630:4:o;5906:173::-;5952:8;;5981:33;;-1:-1:-1;;;5981:33:4;;6008:4;5981:33;;;1677:74:5;-1:-1:-1;;;;;5952:8:4;;;;:17;;5970:9;;5952:8;;5981:18;;1650::5;;5981:33:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5952:64;;-1:-1:-1;;;;;;5952:64:4;;;;;;;-1:-1:-1;;;;;2357:55:5;;;5952:64:4;;;2339:74:5;2429:18;;;2422:34;2312:18;;5952:64:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6056:9:4;6035:32;2677:549;2747:19;2798:8;;:33;;-1:-1:-1;;;2798:33:4;;2825:4;2798:33;;;1677:74:5;2769:86:4;;2784:12;;-1:-1:-1;;;;;2798:8:4;;;;:18;;1650::5;;2798:33:4;1531:226:5;2769:86:4;2895:38;;2747:108;;-1:-1:-1;2877:12:4;;2895:9;;2747:108;;2877:12;2895:38;2877:12;2895:38;2747:108;2895:9;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2876:57;;;2960:7;2952:36;;;;-1:-1:-1;;;2952:36:4;;2669:2:5;2952:36:4;;;2651:21:5;2708:2;2688:18;;;2681:30;-1:-1:-1;;;2727:18:5;;;2720:46;2783:18;;2952:36:4;2467:340:5;2952:36:4;3021:8;;:61;;-1:-1:-1;;;3021:61:4;;3043:9;3021:61;;;2025:34:5;3062:4:4;2075:18:5;;;2068:43;2127:18;;;2120:34;;;-1:-1:-1;;;;;3021:8:4;;;;:21;;1937:18:5;;3021:61:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3013:70;;;;;;3111:11;3104:3;;:18;;;;;;;:::i;:::-;;;;-1:-1:-1;;3146:23:4;;2958:25:5;;;3146:23:4;;2946:2:5;2931:18;3146:23:4;;;;;;;-1:-1:-1;3188:12:4;:26;-1:-1:-1;2677:549:4:o;1590:212::-;1699:7;1765:24;1778:11;1765:10;:24;:::i;:::-;1735:25;1749:11;1735;:25;:::i;:::-;1734:56;;;;:::i;:::-;1727:63;1590:212;-1:-1:-1;;;;1590:212:4:o;14:196:5:-;82:20;;-1:-1:-1;;;;;131:54:5;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;:::-;356:39;215:186;-1:-1:-1;;;215:186:5:o;406:254::-;474:6;482;535:2;523:9;514:7;510:23;506:32;503:52;;;551:1;548;541:12;503:52;574:29;593:9;574:29;:::i;:::-;564:39;650:2;635:18;;;;622:32;;-1:-1:-1;;;406:254:5:o;665:277::-;732:6;785:2;773:9;764:7;760:23;756:32;753:52;;;801:1;798;791:12;753:52;833:9;827:16;886:5;879:13;872:21;865:5;862:32;852:60;;908:1;905;898:12;947:180;1006:6;1059:2;1047:9;1038:7;1034:23;1030:32;1027:52;;;1075:1;1072;1065:12;1027:52;-1:-1:-1;1098:23:5;;947:180;-1:-1:-1;947:180:5:o;1132:184::-;1202:6;1255:2;1243:9;1234:7;1230:23;1226:32;1223:52;;;1271:1;1268;1261:12;1223:52;-1:-1:-1;1294:16:5;;1132:184;-1:-1:-1;1132:184:5:o;3247:128::-;3287:3;3318:1;3314:6;3311:1;3308:13;3305:39;;;3324:18;;:::i;:::-;-1:-1:-1;3360:9:5;;3247:128::o;3380:217::-;3420:1;3446;3436:132;;3490:10;3485:3;3481:20;3478:1;3471:31;3525:4;3522:1;3515:15;3553:4;3550:1;3543:15;3436:132;-1:-1:-1;3582:9:5;;3380:217::o;3602:168::-;3642:7;3708:1;3704;3700:6;3696:14;3693:1;3690:21;3685:1;3678:9;3671:17;3667:45;3664:71;;;3715:18;;:::i;:::-;-1:-1:-1;3755:9:5;;3602:168::o;3775:125::-;3815:4;3843:1;3840;3837:8;3834:34;;;3848:18;;:::i;:::-;-1:-1:-1;3885:9:5;;3775:125::o;3905:127::-;3966:10;3961:3;3957:20;3954:1;3947:31;3997:4;3994:1;3987:15;4021:4;4018:1;4011:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "919600",
								"executionCost": "25190",
								"totalCost": "944790"
							},
							"external": {
								"deposit()": "infinite",
								"distributeFee()": "infinite",
								"ercToEth(uint256)": "infinite",
								"ethToErc()": "infinite",
								"eth_received()": "2395",
								"fee()": "2350",
								"finish()": "infinite",
								"getBalance()": "196",
								"getTokenBalance()": "infinite",
								"initialize(address,uint256)": "infinite",
								"invested(address)": "2571",
								"investors(address)": "2597",
								"liq_added()": "2395",
								"liquidity(address)": "2553",
								"liquidityAdded(uint256)": "infinite",
								"liquiditySubstracted(uint256)": "infinite",
								"priceERC(uint256)": "infinite",
								"priceETH(uint256)": "infinite",
								"tokens_received()": "2329",
								"total_liquidity()": "2396",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"calculatePrice(uint256,uint256,uint256)": "248"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 133,
									"end": 6084,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 133,
									"end": 6084,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 133,
									"end": 6084,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 891,
									"end": 955,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 891,
									"end": 955,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 891,
									"end": 955,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 891,
									"end": 955,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 891,
									"end": 955,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 891,
									"end": 955,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 891,
									"end": 955,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 891,
									"end": 955,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 891,
									"end": 955,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 891,
									"end": 955,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 923,
									"end": 931,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 923,
									"end": 943,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 923,
									"end": 943,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 923,
									"end": 943,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 934,
									"end": 943,
									"name": "ORIGIN",
									"source": 4
								},
								{
									"begin": 923,
									"end": 943,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 923,
									"end": 943,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 923,
									"end": 943,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 133,
									"end": 6084,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 6084,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 133,
									"end": 6084,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 6084,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 6084,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 133,
									"end": 6084,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 6084,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206920cee972a40f0cfc9fd66772e259832ceefccb083d8c7fdf59d929eb5c43c464736f6c63430008070033",
									".code": [
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "72A9D124"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "B8C876B1"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "D56B2889"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "D56B2889"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "DDCA3F43"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "DEBC674C"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "B8C876B1"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "CD6DC687"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "D0E30DB0"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "72A9D124"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "74942C0F"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "7937C03D"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "82B2E257"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "8666107C"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "5F244D4E"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "5F244D4E"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "66B3F6BF"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "67DA263D"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "6F7BC9BE"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "707E7E87"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "12065FE0"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "1EB928AA"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "26C4E60D"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "2E1A7D4D"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "31F3BD28"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 133,
											"end": 6084,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5500,
											"end": 5521,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2946,
											"end": 2948,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2931,
											"end": 2949,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5533,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3168,
											"end": 3193,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3168,
											"end": 3193,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3168,
											"end": 3193,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3226,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3236,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3141,
											"end": 3159,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2994,
											"end": 3242,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 187,
											"end": 217,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 187,
											"end": 217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 187,
											"end": 217,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 187,
											"end": 217,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 217,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 187,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 187,
											"end": 217,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 217,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 217,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 217,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 187,
											"end": 217,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 187,
											"end": 217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 187,
											"end": 217,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 187,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 187,
											"end": 217,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 217,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 187,
											"end": 217,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 187,
											"end": 217,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5868,
											"end": 5882,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5868,
											"end": 5882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5868,
											"end": 5882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5868,
											"end": 5882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5868,
											"end": 5877,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5868,
											"end": 5882,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5868,
											"end": 5882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5868,
											"end": 5882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5868,
											"end": 5882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5868,
											"end": 5882,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5868,
											"end": 5882,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5868,
											"end": 5882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5894,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 363,
											"end": 407,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 363,
											"end": 407,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 363,
											"end": 407,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 363,
											"end": 407,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 363,
											"end": 407,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 363,
											"end": 407,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 363,
											"end": 407,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 363,
											"end": 407,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 363,
											"end": 407,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 363,
											"end": 407,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 363,
											"end": 407,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 854,
											"end": 878,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 854,
											"end": 878,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 854,
											"end": 878,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 854,
											"end": 878,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 854,
											"end": 878,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 854,
											"end": 878,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 854,
											"end": 878,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 854,
											"end": 878,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 854,
											"end": 878,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 775,
											"end": 805,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 775,
											"end": 805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 775,
											"end": 805,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 775,
											"end": 805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 775,
											"end": 805,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 775,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 775,
											"end": 805,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 775,
											"end": 805,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 775,
											"end": 805,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 775,
											"end": 805,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 775,
											"end": 805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 775,
											"end": 805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 775,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 775,
											"end": 805,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 775,
											"end": 805,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 775,
											"end": 805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 775,
											"end": 805,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2663,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2200,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2200,
											"end": 2663,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 816,
											"end": 843,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 816,
											"end": 843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 816,
											"end": 843,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 816,
											"end": 843,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 816,
											"end": 843,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 816,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 816,
											"end": 843,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 816,
											"end": 843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 843,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 816,
											"end": 843,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 816,
											"end": 843,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 816,
											"end": 843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 816,
											"end": 843,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 816,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 816,
											"end": 843,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 816,
											"end": 843,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 816,
											"end": 843,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 816,
											"end": 843,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 444,
											"end": 489,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 444,
											"end": 489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 444,
											"end": 489,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 444,
											"end": 489,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 444,
											"end": 489,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 444,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 444,
											"end": 489,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 444,
											"end": 489,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 444,
											"end": 489,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 444,
											"end": 489,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 444,
											"end": 489,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 444,
											"end": 489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 444,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 444,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 444,
											"end": 489,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 444,
											"end": 489,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 444,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 444,
											"end": 489,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 444,
											"end": 489,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 444,
											"end": 489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 444,
											"end": 489,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 444,
											"end": 489,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 444,
											"end": 489,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 444,
											"end": 489,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 444,
											"end": 489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 444,
											"end": 489,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 444,
											"end": 489,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 444,
											"end": 489,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 444,
											"end": 489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 444,
											"end": 489,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 444,
											"end": 489,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 444,
											"end": 489,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 444,
											"end": 489,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1578,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 967,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 967,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 967,
											"end": 1578,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1578,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 967,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 967,
											"end": 1578,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 967,
											"end": 1578,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 967,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 967,
											"end": 1578,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3238,
											"end": 3868,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3238,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3238,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3238,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3238,
											"end": 3868,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5906,
											"end": 6079,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5906,
											"end": 6079,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5906,
											"end": 6079,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5906,
											"end": 6079,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5906,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 5906,
											"end": 6079,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5906,
											"end": 6079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5906,
											"end": 6079,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5906,
											"end": 6079,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5906,
											"end": 6079,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 5906,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5906,
											"end": 6079,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5906,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5906,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5906,
											"end": 6079,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 311,
											"end": 329,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 311,
											"end": 329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 311,
											"end": 329,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 311,
											"end": 329,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 311,
											"end": 329,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 311,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 311,
											"end": 329,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 311,
											"end": 329,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 329,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 311,
											"end": 329,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 311,
											"end": 329,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 311,
											"end": 329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 311,
											"end": 329,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 311,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 311,
											"end": 329,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 311,
											"end": 329,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 311,
											"end": 329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 311,
											"end": 329,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4977,
											"end": 4984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 4993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5067,
											"end": 5082,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5067,
											"end": 5082,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5042,
											"end": 5063,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 5034,
											"end": 5039,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5034,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5034,
											"end": 5063,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5034,
											"end": 5063,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5034,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 5034,
											"end": 5063,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5034,
											"end": 5063,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5034,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5033,
											"end": 5082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5033,
											"end": 5082,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5033,
											"end": 5082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5033,
											"end": 5082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 5033,
											"end": 5082,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5033,
											"end": 5082,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5033,
											"end": 5082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5169,
											"end": 5184,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5169,
											"end": 5184,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5132,
											"end": 5140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5140,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5013,
											"end": 5082,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5082,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5101,
											"end": 5120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5120,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5132,
											"end": 5140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5140,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5140,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5132,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5124,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5124,
											"end": 5165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5124,
											"end": 5129,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5124,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 5124,
											"end": 5165,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5124,
											"end": 5165,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5124,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5123,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5123,
											"end": 5184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5123,
											"end": 5184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5123,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 5123,
											"end": 5184,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5184,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5123,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5184,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4909,
											"end": 5266,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5597,
											"end": 5611,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5626,
											"end": 5630,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 5615,
											"end": 5618,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5615,
											"end": 5618,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5621,
											"end": 5622,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5615,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5615,
											"end": 5622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 5615,
											"end": 5622,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5615,
											"end": 5622,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5615,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 5614,
											"end": 5630,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 5614,
											"end": 5630,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5614,
											"end": 5630,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 5614,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5597,
											"end": 5630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5597,
											"end": 5630,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5650,
											"end": 5662,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5650,
											"end": 5662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5677,
											"name": "ORIGIN",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5677,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5597,
											"end": 5630,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5597,
											"end": 5630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5650,
											"end": 5662,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5650,
											"end": 5662,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5597,
											"end": 5630,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5677,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5735,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2669,
											"end": 2671,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2651,
											"end": 2672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2710,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2688,
											"end": 2706,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2688,
											"end": 2706,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2706,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2711,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A3930B739B332B9103330B4B632B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2766,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5578,
											"end": 5768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5578,
											"end": 5768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5768,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4364,
											"end": 4379,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4364,
											"end": 4379,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4331,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4339,
											"end": 4360,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 4331,
											"end": 4336,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4331,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4331,
											"end": 4360,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4331,
											"end": 4360,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4331,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4330,
											"end": 4379,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4330,
											"end": 4379,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4330,
											"end": 4379,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4330,
											"end": 4379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4466,
											"end": 4481,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4466,
											"end": 4481,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4417,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4429,
											"end": 4437,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4437,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4456,
											"end": 4460,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4310,
											"end": 4379,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4310,
											"end": 4379,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4398,
											"end": 4417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4417,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4429,
											"end": 4437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4437,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4437,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4447,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 4429,
											"end": 4447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4421,
											"end": 4462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4426,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4421,
											"end": 4462,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4421,
											"end": 4462,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4421,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4420,
											"end": 4481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4420,
											"end": 4481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4420,
											"end": 4481,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4420,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4521,
											"end": 4530,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4502,
											"end": 4517,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4502,
											"end": 4517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4502,
											"end": 4530,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4502,
											"end": 4530,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4502,
											"end": 4530,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4502,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4502,
											"end": 4530,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4502,
											"end": 4530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4502,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4502,
											"end": 4530,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4502,
											"end": 4530,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4502,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4502,
											"end": 4530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4502,
											"end": 4530,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4502,
											"end": 4530,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4579,
											"name": "ORIGIN",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4592,
											"end": 4601,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4592,
											"end": 4601,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4592,
											"end": 4601,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4579,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4640,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 4625,
											"end": 4661,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 4661,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4625,
											"end": 4661,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4625,
											"end": 4661,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 4661,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2669,
											"end": 2671,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4625,
											"end": 4661,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4625,
											"end": 4661,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 4661,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2651,
											"end": 2672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2710,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2688,
											"end": 2706,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2688,
											"end": 2706,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2706,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2711,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A3930B739B332B9103330B4B632B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2766,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2467,
											"end": 2807,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4661,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 4625,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4702,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4694,
											"end": 4702,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4712,
											"end": 4721,
											"name": "ORIGIN",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2413,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2456,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2456,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4694,
											"end": 4702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4702,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4702,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2312,
											"end": 2330,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2312,
											"end": 2330,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4694,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4686,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4686,
											"end": 4736,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4686,
											"end": 4736,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4736,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4686,
											"end": 4736,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4686,
											"end": 4736,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4686,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4794,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4762,
											"end": 4794,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4794,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3168,
											"end": 3193,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3168,
											"end": 3193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3168,
											"end": 3193,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3226,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3236,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3236,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4794,
											"name": "PUSH",
											"source": 4,
											"value": "56CA301A9219608C91E7BCEE90E083C19671D2CDCC96752C7AF291CEE5F9C8C8"
										},
										{
											"begin": 4762,
											"end": 4794,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3159,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4794,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4762,
											"end": 4794,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4794,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4794,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4794,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4794,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4762,
											"end": 4794,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4813,
											"end": 4825,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4813,
											"end": 4837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4813,
											"end": 4837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4813,
											"end": 4837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4813,
											"end": 4837,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4856,
											"end": 4885,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4249,
											"end": 4897,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3880,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3940,
											"end": 3947,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4015,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4034,
											"end": 4038,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3947,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3940,
											"end": 3947,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3940,
											"end": 3947,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3940,
											"end": 3947,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4066,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4066,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4007,
											"end": 4015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 4007,
											"end": 4025,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4007,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4001,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4001,
											"end": 4040,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4001,
											"end": 4004,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4001,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4001,
											"end": 4040,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4001,
											"end": 4040,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4001,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4000,
											"end": 4067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4000,
											"end": 4067,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4067,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4000,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4161,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4135,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4120,
											"end": 4135,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4117,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 4114,
											"end": 4135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4114,
											"end": 4135,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2127,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2127,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2146,
											"end": 2150,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2099,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2099,
											"end": 2176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2114,
											"end": 2117,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2114,
											"end": 2117,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2119,
											"end": 2127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2127,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2127,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2119,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2175,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 2099,
											"end": 2176,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2099,
											"end": 2176,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2099,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2176,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2012,
											"end": 2188,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1816,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1918,
											"end": 1921,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1918,
											"end": 1921,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1945,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1924,
											"end": 1951,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1924,
											"end": 1951,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1924,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1962,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1962,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 1985,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1954,
											"end": 1962,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1962,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1962,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1962,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1972,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1954,
											"end": 1972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 1954,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1903,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1903,
											"end": 1988,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2200,
											"end": 2663,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2200,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2296,
											"end": 2305,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2329,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2308,
											"end": 2341,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2281,
											"end": 2378,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2281,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2415,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2415,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2434,
											"name": "ORIGIN",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2413,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2456,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2456,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2378,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2378,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2407,
											"end": 2415,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2312,
											"end": 2330,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2312,
											"end": 2330,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2407,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2399,
											"end": 2452,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2452,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2452,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2452,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2452,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2399,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2476,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2473,
											"end": 2476,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2518,
											"end": 2527,
											"name": "ORIGIN",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2528,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2517,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2508,
											"end": 2528,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2508,
											"end": 2528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2528,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2508,
											"end": 2528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2528,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2541,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2532,
											"end": 2541,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2532,
											"end": 2541,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 2508,
											"end": 2541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2532,
											"end": 2541,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2532,
											"end": 2541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2508,
											"end": 2541,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2508,
											"end": 2541,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 2508,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2541,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2541,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2562,
											"end": 2577,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2562,
											"end": 2594,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2594,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2594,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2620,
											"end": 2649,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2620,
											"end": 2649,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2649,
											"name": "PUSH",
											"source": 4,
											"value": "DB04C7A6D4758FD55D738EBC67E7F3010AC922BE00771EF29521A4090D1EB13F"
										},
										{
											"begin": 2620,
											"end": 2649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2948,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2931,
											"end": 2949,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2649,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2620,
											"end": 2649,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2620,
											"end": 2649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2620,
											"end": 2649,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2620,
											"end": 2649,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2620,
											"end": 2649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2620,
											"end": 2649,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2663,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2663,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5335,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5371,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5390,
											"end": 5394,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5363,
											"end": 5371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 5363,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5356,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5356,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5408,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 967,
											"end": 1578,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 967,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1076,
											"end": 1096,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 1068,
											"end": 1097,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1097,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1097,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1097,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1097,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 1068,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1140,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1136,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1124,
											"end": 1140,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 1116,
											"end": 1141,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1141,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1141,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1141,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1141,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 1116,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1168,
											"end": 1181,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1160,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 1160,
											"end": 1182,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1160,
											"end": 1182,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1182,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1160,
											"end": 1182,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1160,
											"end": 1182,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 1160,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1206,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1203,
											"end": 1210,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1203,
											"end": 1210,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1203,
											"end": 1210,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1261,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1229,
											"end": 1261,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1229,
											"end": 1261,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1261,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1261,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1261,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1261,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1261,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1261,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1298,
											"end": 1337,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1298,
											"end": 1337,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1298,
											"end": 1337,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1375,
											"name": "ORIGIN",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1376,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1376,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1376,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1365,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1356,
											"end": 1376,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1356,
											"end": 1376,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1376,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1356,
											"end": 1376,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1376,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1376,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1394,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1394,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1394,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1394,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1459,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1459,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2059,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2059,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2059,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1496,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2093,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2075,
											"end": 2093,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2075,
											"end": 2093,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2111,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2120,
											"end": 2154,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2120,
											"end": 2154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2120,
											"end": 2154,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1451,
											"end": 1459,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1459,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1472,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1451,
											"end": 1472,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1937,
											"end": 1955,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1937,
											"end": 1955,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 1451,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 1443,
											"end": 1513,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1513,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1513,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1513,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 1443,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "PUSH",
											"source": 4,
											"value": "C43E48CF47E9FA186D0F4096C61D1FCB54159799F935A2AA32E5589688EE36E1"
										},
										{
											"begin": 1550,
											"end": 1565,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1550,
											"end": 1565,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2946,
											"end": 2948,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2931,
											"end": 2949,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 2949,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2989,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1566,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1578,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3238,
											"end": 3868,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3238,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3313,
											"end": 3314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3310,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3301,
											"end": 3314,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 3293,
											"end": 3315,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3315,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3293,
											"end": 3315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3315,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3315,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 3293,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 3433,
											"end": 3442,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3409,
											"end": 3430,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 3409,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3409,
											"end": 3442,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3409,
											"end": 3442,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 3409,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3402,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 3371,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3368,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3358,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 3358,
											"end": 3443,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3358,
											"end": 3443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3358,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3358,
											"end": 3443,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3358,
											"end": 3443,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 3358,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3444,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3463,
											"end": 3486,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3522,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 3546,
											"end": 3555,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3522,
											"end": 3543,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 3522,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3522,
											"end": 3555,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3522,
											"end": 3555,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 3522,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3502,
											"end": 3517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 3490,
											"end": 3517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3499,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3490,
											"end": 3517,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3490,
											"end": 3517,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 3490,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 3489,
											"end": 3556,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3489,
											"end": 3556,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3489,
											"end": 3556,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 3489,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3587,
											"end": 3596,
											"name": "ORIGIN",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3597,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3597,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3586,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3577,
											"end": 3597,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3577,
											"end": 3597,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3597,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3577,
											"end": 3597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3597,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3463,
											"end": 3556,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3463,
											"end": 3556,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3463,
											"end": 3556,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3463,
											"end": 3556,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3597,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3463,
											"end": 3556,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3463,
											"end": 3556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3656,
											"end": 3671,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3637,
											"end": 3652,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3637,
											"end": 3652,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3671,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3637,
											"end": 3671,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3637,
											"end": 3671,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3637,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 3637,
											"end": 3671,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3637,
											"end": 3671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3637,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3637,
											"end": 3671,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3637,
											"end": 3671,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 3637,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3637,
											"end": 3671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3637,
											"end": 3671,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3637,
											"end": 3671,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3698,
											"end": 3706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3706,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3720,
											"end": 3729,
											"name": "ORIGIN",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2059,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3739,
											"end": 3743,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2093,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2075,
											"end": 2093,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2075,
											"end": 2093,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2111,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2120,
											"end": 2154,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2120,
											"end": 2154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2120,
											"end": 2154,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3698,
											"end": 3706,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3706,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3706,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3706,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3719,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 3698,
											"end": 3719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1937,
											"end": 1955,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1937,
											"end": 1955,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 3698,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3690,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 3690,
											"end": 3760,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3690,
											"end": 3760,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3760,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3690,
											"end": 3760,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3690,
											"end": 3760,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 3690,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "PUSH",
											"source": 4,
											"value": "4D6CE1E535DBADE1C23DEFBA91E23B8F791CE5EDC0CC320257A2B364E4E38426"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2948,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2931,
											"end": 2949,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3786,
											"end": 3810,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3829,
											"end": 3856,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3238,
											"end": 3868,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5906,
											"end": 6079,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5906,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 5960,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5952,
											"end": 5960,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6012,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5952,
											"end": 5960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 5960,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 5960,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 5960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 5969,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 5952,
											"end": 5969,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5970,
											"end": 5979,
											"name": "ORIGIN",
											"source": 4
										},
										{
											"begin": 5970,
											"end": 5979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 5960,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 5960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 5999,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 5981,
											"end": 5999,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 5981,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2357,
											"end": 2412,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2357,
											"end": 2412,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2357,
											"end": 2412,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2413,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2456,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2330,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2312,
											"end": 2330,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 5952,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6056,
											"end": 6065,
											"name": "ORIGIN",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6067,
											"name": "SELFDESTRUCT",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2747,
											"end": 2766,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2806,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2831,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2831,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2798,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2831,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2829,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2831,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2798,
											"end": 2831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2831,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 2769,
											"end": 2855,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2784,
											"end": 2796,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2784,
											"end": 2796,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2798,
											"end": 2806,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2806,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2806,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2806,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1650,
											"end": 1668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 1531,
											"end": 1757,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2855,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 2769,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2747,
											"end": 2855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2747,
											"end": 2855,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2904,
											"name": "ORIGIN",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2747,
											"end": 2855,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2747,
											"end": 2855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2747,
											"end": 2855,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2904,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2933,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 2933,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 2933,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 2933,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2960,
											"end": 2967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2669,
											"end": 2671,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2651,
											"end": 2672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2710,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2688,
											"end": 2706,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2688,
											"end": 2706,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2706,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2711,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A3930B739B332B9103330B4B632B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2766,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2467,
											"end": 2807,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3029,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3029,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3052,
											"name": "ORIGIN",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2059,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3062,
											"end": 3066,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2093,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2075,
											"end": 2093,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2075,
											"end": 2093,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2111,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2120,
											"end": 2154,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2120,
											"end": 2154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2120,
											"end": 2154,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3021,
											"end": 3029,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3029,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3029,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3029,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 3021,
											"end": 3042,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1937,
											"end": 1955,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1937,
											"end": 1955,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 3021,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 3013,
											"end": 3083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3083,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3083,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 3013,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3107,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3104,
											"end": 3107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3104,
											"end": 3122,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3122,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3122,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 3104,
											"end": 3122,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3104,
											"end": 3122,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3104,
											"end": 3122,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 3104,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3122,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3122,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3146,
											"end": 3169,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3169,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3146,
											"end": 3169,
											"name": "PUSH",
											"source": 4,
											"value": "4DBF3A71A7C7262F432C2CAD7808225832255D07F7D8AB85117677C0B5C0A850"
										},
										{
											"begin": 3146,
											"end": 3169,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2948,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2931,
											"end": 2949,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3146,
											"end": 3169,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3169,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3146,
											"end": 3169,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3146,
											"end": 3169,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3146,
											"end": 3169,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3146,
											"end": 3169,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3146,
											"end": 3169,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3188,
											"end": 3200,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3188,
											"end": 3214,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2677,
											"end": 3226,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1590,
											"end": 1802,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1590,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 1778,
											"end": 1789,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1765,
											"end": 1775,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1765,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 1765,
											"end": 1789,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1765,
											"end": 1789,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 1765,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 1749,
											"end": 1760,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1746,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1735,
											"end": 1760,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1760,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 1735,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 1734,
											"end": 1790,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 1790,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1734,
											"end": 1790,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1734,
											"end": 1790,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 1734,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1790,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1802,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1590,
											"end": 1802,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 204,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14,
											"end": 210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 274,
											"end": 280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 324,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 306,
											"end": 313,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 295,
											"end": 347,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 295,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 333,
											"end": 345,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 295,
											"end": 347,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 385,
											"end": 394,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 356,
											"end": 395,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 215,
											"end": 401,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 406,
											"end": 660,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 406,
											"end": 660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 474,
											"end": 480,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 535,
											"end": 537,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 532,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 514,
											"end": 521,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 510,
											"end": 533,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 506,
											"end": 538,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 503,
											"end": 555,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 503,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 503,
											"end": 555,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 551,
											"end": 552,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 541,
											"end": 553,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 503,
											"end": 555,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 503,
											"end": 555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 593,
											"end": 602,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 574,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 564,
											"end": 603,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 650,
											"end": 652,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 653,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 635,
											"end": 653,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 635,
											"end": 653,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 635,
											"end": 653,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 622,
											"end": 654,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 622,
											"end": 654,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 406,
											"end": 660,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 665,
											"end": 942,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 665,
											"end": 942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 732,
											"end": 738,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 787,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 782,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 764,
											"end": 771,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 760,
											"end": 783,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 756,
											"end": 788,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 753,
											"end": 805,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 753,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 753,
											"end": 805,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 801,
											"end": 802,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 791,
											"end": 803,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 753,
											"end": 805,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 753,
											"end": 805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 833,
											"end": 842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 827,
											"end": 843,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 886,
											"end": 891,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 879,
											"end": 892,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 872,
											"end": 893,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 865,
											"end": 870,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 862,
											"end": 894,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 852,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 852,
											"end": 912,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 908,
											"end": 909,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 906,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 898,
											"end": 910,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 947,
											"end": 1127,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 947,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1006,
											"end": 1012,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1038,
											"end": 1045,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1057,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1062,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1079,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 1027,
											"end": 1079,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1073,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1065,
											"end": 1077,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1079,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 1027,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1121,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 947,
											"end": 1127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 947,
											"end": 1127,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1132,
											"end": 1316,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1132,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1257,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1243,
											"end": 1252,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1234,
											"end": 1241,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1253,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1226,
											"end": 1258,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1275,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 1223,
											"end": 1275,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1261,
											"end": 1273,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1275,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 1223,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1294,
											"end": 1310,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1316,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1132,
											"end": 1316,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3247,
											"end": 3375,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3247,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3318,
											"end": 3319,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3311,
											"end": 3312,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3308,
											"end": 3321,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3344,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 3305,
											"end": 3344,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3360,
											"end": 3369,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3369,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3375,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3380,
											"end": 3597,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3380,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3421,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 3436,
											"end": 3568,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3490,
											"end": 3500,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 3485,
											"end": 3488,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3481,
											"end": 3501,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3478,
											"end": 3479,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3529,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 3522,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3515,
											"end": 3530,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3557,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3550,
											"end": 3551,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3558,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3568,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 3436,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3597,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3602,
											"end": 3770,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3602,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3642,
											"end": 3649,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3709,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3704,
											"end": 3705,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3700,
											"end": 3706,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3710,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3693,
											"end": 3694,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3686,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3688,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3712,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 3735,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 3664,
											"end": 3735,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3715,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 3715,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 3715,
											"end": 3733,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3715,
											"end": 3733,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 3715,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3755,
											"end": 3764,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3764,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3602,
											"end": 3770,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3775,
											"end": 3900,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3775,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3834,
											"end": 3868,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3834,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 3834,
											"end": 3868,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3848,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 3848,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 3848,
											"end": 3866,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3848,
											"end": 3866,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 3848,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3885,
											"end": 3894,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3885,
											"end": 3894,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3775,
											"end": 3900,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3905,
											"end": 4032,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 3905,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3966,
											"end": 3976,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 3961,
											"end": 3964,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3957,
											"end": 3977,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3954,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3978,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3997,
											"end": 4001,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3994,
											"end": 3995,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4002,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4025,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4011,
											"end": 4026,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"distributeFee()": "26c4e60d",
							"ercToEth(uint256)": "debc674c",
							"ethToErc()": "7937c03d",
							"eth_received()": "8666107c",
							"fee()": "ddca3f43",
							"finish()": "d56b2889",
							"getBalance()": "12065fe0",
							"getTokenBalance()": "82b2e257",
							"initialize(address,uint256)": "cd6dc687",
							"invested(address)": "66b3f6bf",
							"investors(address)": "6f7bc9be",
							"liq_added()": "707e7e87",
							"liquidity(address)": "b8c876b1",
							"liquidityAdded(uint256)": "5f244d4e",
							"liquiditySubstracted(uint256)": "1eb928aa",
							"priceERC(uint256)": "72a9d124",
							"priceETH(uint256)": "67da263d",
							"tokens_received()": "74942c0f",
							"total_liquidity()": "31f3bd28",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ETHSwapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TokensSwapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_valueETH\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_valueToken\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"token_amount\",\"type\":\"uint256\"}],\"name\":\"ercToEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethToErc\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eth_received\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finish\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token_amount\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"invested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"investors\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liq_added\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"liquidityAdded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"liquiditySubstracted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"priceERC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc\",\"type\":\"uint256\"}],\"name\":\"priceETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokens_received\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"total_liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AMM.sol\":\"DEX\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/AMM.sol\":{\"keccak256\":\"0xf2775cd23eeffdcc22556ad8ccf733d057542bf1fc2c497445a3e37a99351e86\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3e8ca6851fe6409960154ac676cf18ce8b7878158ad2525a0398174487db42ad\",\"dweb:/ipfs/QmVZu8ovrFRw8N9D7LR3SWHCM1eMHwPTkGePYuCfuzTD97\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 716,
								"contract": "contracts/AMM.sol:DEX",
								"label": "tokenERC",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)663"
							},
							{
								"astId": 718,
								"contract": "contracts/AMM.sol:DEX",
								"label": "total_liquidity",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 720,
								"contract": "contracts/AMM.sol:DEX",
								"label": "deployer",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 722,
								"contract": "contracts/AMM.sol:DEX",
								"label": "fee",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 726,
								"contract": "contracts/AMM.sol:DEX",
								"label": "investors",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 730,
								"contract": "contracts/AMM.sol:DEX",
								"label": "liquidity",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 754,
								"contract": "contracts/AMM.sol:DEX",
								"label": "tokens_received",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 756,
								"contract": "contracts/AMM.sol:DEX",
								"label": "eth_received",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 758,
								"contract": "contracts/AMM.sol:DEX",
								"label": "liq_added",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)663": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							710
						],
						"ERC20": [
							585
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 664,
							"src": "130:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 689,
							"src": "153:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 711,
							"src": "195:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 710,
										"src": "1421:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1421:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "1430:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1430:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 688,
										"src": "1438:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1438:14:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "230:1172:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 585,
							"linearizedBaseContracts": [
								585,
								688,
								663,
								710
							],
							"name": "ERC20",
							"nameLocation": "1412:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1495:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1459:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1467:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1459:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1478:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1567:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1511:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1519:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1511:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 19,
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1530:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1549:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1601:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1585:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1635:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1620:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1620:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1661:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1646:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1646:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2034:57:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2044:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2052:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2044:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2044:13:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2067:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2067:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2067:17:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1675:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2004:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1990:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1990:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2025:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2011:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2011:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:44:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:0"
									},
									"scope": 585,
									"src": "1978:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										675
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2225:29:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2242:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "2235:12:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2097:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2165:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2192:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2169:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2210:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2210:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:15:0"
									},
									"scope": 585,
									"src": "2156:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										681
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "2438:31:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "2448:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2260:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2376:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2405:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2382:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2423:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2423:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:15:0"
									},
									"scope": 585,
									"src": "2367:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										687
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3158:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3175:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "3168:9:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2475:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3102:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3133:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3110:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3151:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 68,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3151:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:7:0"
									},
									"scope": 585,
									"src": "3093:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										612
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3314:36:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "3331:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "3324:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3190:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3253:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3287:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3264:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3305:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3304:9:0"
									},
									"scope": 585,
									"src": "3244:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										620
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "3491:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3508:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3518:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3508:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "3501:25:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3356:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3417:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3464:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3435:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3427:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3482:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:9:0"
									},
									"scope": 585,
									"src": "3408:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										630
									],
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3814:104:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3832:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3824:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3824:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "3840:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3840:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3824:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3872:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "3879:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3883:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3862:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 121,
												"nodeType": "Return",
												"src": "3900:11:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3539:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3738:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3790:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3755:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3747:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3767:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3759:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3746:28:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:6:0"
									},
									"scope": 585,
									"src": "3729:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4074:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4091:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4103:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4091:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4110:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4091:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "4084:34:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "3924:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3985:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4047:8:0"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4003:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3995:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4018:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4010:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4065:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:9:0"
									},
									"scope": 585,
									"src": "3976:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										650
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4522:108:0",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4540:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 165,
														"src": "4532:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4532:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "4548:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4548:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4532:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4579:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4595:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "4570:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4570:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4570:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4619:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 151,
												"id": 164,
												"nodeType": "Return",
												"src": "4612:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4131:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4442:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4498:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4458:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4450:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4475:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4467:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:33:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4516:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4516:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:6:0"
									},
									"scope": 585,
									"src": "4433:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										662
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5325:153:0",
										"statements": [
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5343:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "5335:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5335:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5353:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5353:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5335:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5391:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5397:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5406:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "5375:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "5375:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5433:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5439:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5443:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5423:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5423:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5467:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 197,
												"nodeType": "Return",
												"src": "5460:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4636:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5201:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5301:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5231:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5223:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5253:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5245:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5273:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5265:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:72:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5319:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5319:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:6:0"
									},
									"scope": 585,
									"src": "5192:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "5967:140:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5985:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "5977:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5977:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5993:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5993:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5977:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6024:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 218,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "6050:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 219,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "6057:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 217,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "6040:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6040:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "6068:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6040:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "6015:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6015:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "6015:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6096:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 226,
												"nodeType": "Return",
												"src": "6089:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5484:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5882:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5908:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5900:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5925:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5917:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5961:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5961:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:6:0"
									},
									"scope": 585,
									"src": "5873:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "6693:328:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6711:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6703:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6703:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 240,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "6719:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6719:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6703:28:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6749:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6741:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6778:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "6785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "6768:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6768:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6741:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "6811:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "6831:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6811:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6848:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6803:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6803:85:0"
											},
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "6898:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6931:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 259,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "6938:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6947:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 261,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "6966:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6947:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 257,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "6922:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6922:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 264,
														"nodeType": "ExpressionStatement",
														"src": "6922:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7010:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 267,
												"nodeType": "Return",
												"src": "7003:11:0"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6113:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6603:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6646:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6638:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6620:42:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6686:6:0"
									},
									"scope": 585,
									"src": "6594:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7583:543:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "7601:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7617:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7609:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7609:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7609:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7601:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7621:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7593:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7593:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "7593:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7679:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7693:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7685:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7685:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7685:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7679:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7697:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7671:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7671:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "7671:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7767:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7773:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7777:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "7746:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7746:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "7746:38:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7803:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "7795:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7795:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "7817:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "7827:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7817:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7795:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "7850:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "7865:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7850:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7873:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7842:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7842:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "7842:72:0"
											},
											{
												"id": 326,
												"nodeType": "UncheckedBlock",
												"src": "7924:73:0",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 318,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "7948:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7958:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7948:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "7966:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7980:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7966:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7948:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "7948:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 327,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8006:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 329,
														"indexExpression": {
															"id": 328,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8016:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8006:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 330,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8023:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8006:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "8006:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8054:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8060:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8064:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8045:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8045:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "8040:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8102:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8108:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8112:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8082:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8082:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "8082:37:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "7027:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7484:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7511:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7503:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7533:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7525:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7493:72:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7583:0:0"
									},
									"scope": 585,
									"src": "7475:651:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "8467:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "8485:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8504:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8496:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8496:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8496:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8485:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8508:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8477:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8477:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "8477:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8582:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8574:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8574:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8574:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8595:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "8553:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8553:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8553:49:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8613:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8629:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8613:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "8613:22:0"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 377,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8645:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 379,
														"indexExpression": {
															"id": 378,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8655:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8645:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 380,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8667:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8645:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "8645:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8705:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8697:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8697:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8697:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8709:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8718:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8688:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8688:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "EmitStatement",
												"src": "8683:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8764:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8756:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 393,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8756:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8756:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8768:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8777:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 392,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8736:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8736:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "8736:48:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "8132:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8411:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8425:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8417:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8442:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8434:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8416:33:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8467:0:0"
									},
									"scope": 585,
									"src": "8402:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "9176:511:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "9194:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9213:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9205:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9205:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9205:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9194:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9217:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9186:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "9186:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9302:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9294:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 422,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9294:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9294:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9306:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "9264:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9264:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "9264:49:0"
											},
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9332:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "9324:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 429,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9324:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"baseExpression": {
														"id": 431,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9349:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 433,
													"indexExpression": {
														"id": 432,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "9359:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9349:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9324:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 436,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "9385:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 437,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "9403:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9385:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9411:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9377:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9377:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "9377:71:0"
											},
											{
												"id": 450,
												"nodeType": "UncheckedBlock",
												"src": "9458:79:0",
												"statements": [
													{
														"expression": {
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 442,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9482:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 444,
																"indexExpression": {
																	"id": 443,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "9492:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9482:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 445,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "9503:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 446,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "9520:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9503:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9482:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 449,
														"nodeType": "ExpressionStatement",
														"src": "9482:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 451,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "9546:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 452,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "9562:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9546:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "9546:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 456,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9593:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9610:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9602:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9602:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9602:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9614:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 455,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "9584:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9584:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "EmitStatement",
												"src": "9579:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9652:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9669:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9661:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9661:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9661:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9673:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "9632:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9632:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "9632:48:0"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "8797:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9120:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9134:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9126:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9151:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9143:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9125:33:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9176:0:0"
									},
									"scope": 585,
									"src": "9111:576:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "10223:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 485,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10241:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10258:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10250:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 486,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10250:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10250:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10241:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10262:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10233:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10233:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "10233:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "10319:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10338:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10330:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 496,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10330:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10330:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10319:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10342:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10311:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10311:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "10311:68:0"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 504,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "10390:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 507,
															"indexExpression": {
																"id": 505,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10402:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10390:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 508,
														"indexExpression": {
															"id": 506,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10409:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10390:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 509,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "10420:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10390:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "10390:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "10450:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10457:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "10466:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "10441:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10441:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "EmitStatement",
												"src": "10436:37:0"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "9693:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10119:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10145:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10137:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10168:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10160:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10193:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10185:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10127:78:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10223:0:0"
									},
									"scope": 585,
									"src": "10110:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "10881:321:0",
										"statements": [
											{
												"assignments": [
													530
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10899:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "10891:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 529,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10891:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"arguments": [
														{
															"id": 532,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "10928:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "10935:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 531,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "10918:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10918:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10891:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "10957:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10982:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 538,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10982:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 537,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10977:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10977:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10977:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10957:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "10953:243:0",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "10996:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 544,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "11018:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 545,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "11038:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11018:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11046:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 543,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11010:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11010:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "11010:68:0"
														},
														{
															"id": 558,
															"nodeType": "UncheckedBlock",
															"src": "11092:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 551,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "11129:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 552,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "11136:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 553,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "11145:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 554,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 526,
																					"src": "11164:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11145:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 550,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "11120:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11120:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 557,
																	"nodeType": "ExpressionStatement",
																	"src": "11120:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "10486:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10770:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10803:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10795:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10826:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10818:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10851:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10843:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10785:78:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10881:0:0"
									},
									"scope": 585,
									"src": "10761:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "11905:2:0",
										"statements": []
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "11208:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11795:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11833:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11825:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11855:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11847:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11875:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11867:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11815:72:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11905:0:0"
									},
									"scope": 585,
									"src": "11786:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "12613:2:0",
										"statements": []
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "11913:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12504:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12541:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12533:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12563:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12555:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12583:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12575:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12523:72:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12613:0:0"
									},
									"scope": 585,
									"src": "12495:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 586,
							"src": "1403:11214:0",
							"usedErrors": []
						}
					],
					"src": "105:12513:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 588,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 597,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 606,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 663,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 663,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 663,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 663,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 663,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 663,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 664,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 689,
							"sourceUnit": 664,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 668,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "305:6:2"
									},
									"id": 669,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 667,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 688,
							"linearizedBaseContracts": [
								688,
								663
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 688,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 688,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 684,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 688,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 689,
							"src": "277:405:2",
							"usedErrors": []
						}
					],
					"src": "110:573:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							710
						]
					},
					"id": 711,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 690,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 691,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 710,
							"linearizedBaseContracts": [
								710
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 696,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 695,
												"id": 698,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 710,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 705,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 704,
												"id": 707,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 702,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 710,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 711,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"contracts/AMM.sol": {
				"ast": {
					"absolutePath": "contracts/AMM.sol",
					"exportedSymbols": {
						"Context": [
							710
						],
						"DEX": [
							1375
						],
						"ERC20": [
							585
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 1376,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 712,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 586,
							"src": "74:55:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1375,
							"linearizedBaseContracts": [
								1375
							],
							"name": "DEX",
							"nameLocation": "142:3:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 716,
									"mutability": "mutable",
									"name": "tokenERC",
									"nameLocation": "166:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "159:15:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$663",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 715,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 714,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 663,
											"src": "159:6:4"
										},
										"referencedDeclaration": 663,
										"src": "159:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$663",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "31f3bd28",
									"id": 718,
									"mutability": "mutable",
									"name": "total_liquidity",
									"nameLocation": "202:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "187:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 717,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "187:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 720,
									"mutability": "mutable",
									"name": "deployer",
									"nameLocation": "292:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "276:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 719,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "276:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ddca3f43",
									"id": 722,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "326:3:4",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "311:18:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 721,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "311:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6f7bc9be",
									"id": 726,
									"mutability": "mutable",
									"name": "investors",
									"nameLocation": "398:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "363:44:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 725,
										"keyType": {
											"id": 723,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "371:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "363:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 724,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "382:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b8c876b1",
									"id": 730,
									"mutability": "mutable",
									"name": "liquidity",
									"nameLocation": "480:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "444:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 729,
										"keyType": {
											"id": 727,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "453:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "444:28:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 728,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "464:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 734,
									"name": "Initialize",
									"nameLocation": "508:10:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "528:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "520:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "519:16:4"
									},
									"src": "502:34:4"
								},
								{
									"anonymous": false,
									"id": 738,
									"name": "TokensSwapped",
									"nameLocation": "552:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "575:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "567:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:16:4"
									},
									"src": "546:37:4"
								},
								{
									"anonymous": false,
									"id": 742,
									"name": "ETHSwapped",
									"nameLocation": "599:10:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "619:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "611:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:16:4"
									},
									"src": "593:34:4"
								},
								{
									"anonymous": false,
									"id": 746,
									"name": "Deposit",
									"nameLocation": "643:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:16:4"
									},
									"src": "637:31:4"
								},
								{
									"anonymous": false,
									"id": 752,
									"name": "Withdraw",
									"nameLocation": "684:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"indexed": false,
												"mutability": "mutable",
												"name": "_valueETH",
												"nameLocation": "702:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "694:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"indexed": false,
												"mutability": "mutable",
												"name": "_valueToken",
												"nameLocation": "721:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "713:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:40:4"
									},
									"src": "678:56:4"
								},
								{
									"constant": false,
									"functionSelector": "74942c0f",
									"id": 754,
									"mutability": "mutable",
									"name": "tokens_received",
									"nameLocation": "790:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "775:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 753,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "775:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8666107c",
									"id": 756,
									"mutability": "mutable",
									"name": "eth_received",
									"nameLocation": "831:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "816:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 755,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "816:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "707e7e87",
									"id": 758,
									"mutability": "mutable",
									"name": "liq_added",
									"nameLocation": "869:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "854:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 757,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "854:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "904:51:4",
										"statements": [
											{
												"expression": {
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 761,
														"name": "deployer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "923:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 762,
															"name": "tx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967270,
															"src": "934:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_transaction",
																"typeString": "tx"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "origin",
														"nodeType": "MemberAccess",
														"src": "934:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "923:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "923:20:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "902:2:4"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "904:0:4"
									},
									"scope": 1375,
									"src": "891:64:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "1049:529:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 775,
																"name": "total_liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "1076:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1095:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1076:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 774,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1068:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1068:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "1068:29:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 781,
																"name": "token_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "1124:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1139:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1124:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 780,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1116:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "1116:25:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 787,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1168:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1168:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1180:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1168:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 786,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1160:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1160:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "1160:22:4"
											},
											{
												"expression": {
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 793,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "1203:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1209:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1203:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "1203:7:4"
											},
											{
												"expression": {
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 797,
														"name": "tokenERC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "1229:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$663",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 799,
																"name": "token_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "1247:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 798,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "1240:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$663_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1240:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$663",
															"typeString": "contract IERC20"
														}
													},
													"src": "1229:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$663",
														"typeString": "contract IERC20"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "1229:32:4"
											},
											{
												"expression": {
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 803,
														"name": "total_liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "1298:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 806,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1324:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DEX_$1375",
																		"typeString": "contract DEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DEX_$1375",
																		"typeString": "contract DEX"
																	}
																],
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1316:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 804,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1316:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1316:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1316:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1298:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "1298:39:4"
											},
											{
												"expression": {
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 811,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "1356:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 814,
														"indexExpression": {
															"expression": {
																"id": 812,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "1366:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "1366:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1356:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 815,
														"name": "total_liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "1379:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1356:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "1356:38:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 821,
																		"name": "tx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967270,
																		"src": "1473:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_transaction",
																			"typeString": "tx"
																		}
																	},
																	"id": 822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "origin",
																	"nodeType": "MemberAccess",
																	"src": "1473:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 825,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1492:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DEX_$1375",
																				"typeString": "contract DEX"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DEX_$1375",
																				"typeString": "contract DEX"
																			}
																		],
																		"id": 824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1484:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 823,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1484:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1484:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 827,
																	"name": "token_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "1499:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 819,
																	"name": "tokenERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "1451:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$663",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 662,
																"src": "1451:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1451:61:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 818,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1443:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1443:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "1443:70:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 832,
															"name": "total_liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "1550:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 831,
														"name": "Initialize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "1539:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1539:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "EmitStatement",
												"src": "1534:32:4"
											}
										]
									},
									"functionSelector": "cd6dc687",
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "976:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "token_address",
												"nameLocation": "995:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "987:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "token_amount",
												"nameLocation": "1018:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "1010:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "986:45:4"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1049:0:4"
									},
									"scope": 1375,
									"src": "967:611:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "1708:94:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 847,
																	"name": "input_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "1735:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 848,
																	"name": "output_pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "1749:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1735:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 850,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1734:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 851,
																	"name": "input_pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "1765:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 852,
																	"name": "input_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "1778:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1765:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 854,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1764:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1734:56:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 846,
												"id": 856,
												"nodeType": "Return",
												"src": "1727:63:4"
											}
										]
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePrice",
									"nameLocation": "1599:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "input_value",
												"nameLocation": "1622:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "1614:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "input_pool",
												"nameLocation": "1643:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "1635:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1635:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "output_pool",
												"nameLocation": "1663:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "1655:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1655:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1613:62:4"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "1699:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:9:4"
									},
									"scope": 1375,
									"src": "1590:212:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "1877:123:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 866,
															"name": "eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "1918:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"arguments": [
																				{
																					"id": 869,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1932:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_DEX_$1375",
																						"typeString": "contract DEX"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_DEX_$1375",
																						"typeString": "contract DEX"
																					}
																				],
																				"id": 868,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1924:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 867,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1924:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1924:13:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1924:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 872,
																		"name": "eth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "1948:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1924:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 874,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1923:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 879,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1981:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DEX_$1375",
																				"typeString": "contract DEX"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DEX_$1375",
																				"typeString": "contract DEX"
																			}
																		],
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1973:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 877,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1973:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1973:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 875,
																	"name": "tokenERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "1954:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$663",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 620,
																"src": "1954:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1954:33:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 865,
														"name": "calculatePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "1903:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1903:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 864,
												"id": 883,
												"nodeType": "Return",
												"src": "1896:92:4"
											}
										]
									},
									"functionSelector": "72a9d124",
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "priceERC",
									"nameLocation": "1825:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "eth",
												"nameLocation": "1842:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "1834:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:13:4"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "1869:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1869:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1868:9:4"
									},
									"scope": 1375,
									"src": "1816:184:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "2073:115:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "erc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "2114:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 898,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2146:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DEX_$1375",
																				"typeString": "contract DEX"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DEX_$1375",
																				"typeString": "contract DEX"
																			}
																		],
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2138:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 896,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2138:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2138:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 894,
																	"name": "tokenERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "2119:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$663",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 620,
																"src": "2119:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2119:33:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 903,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2162:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_DEX_$1375",
																			"typeString": "contract DEX"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_DEX_$1375",
																			"typeString": "contract DEX"
																		}
																	],
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2154:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 901,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2154:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2154:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2154:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 892,
														"name": "calculatePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "2099:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 891,
												"id": 907,
												"nodeType": "Return",
												"src": "2092:84:4"
											}
										]
									},
									"functionSelector": "67da263d",
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "priceETH",
									"nameLocation": "2021:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "erc",
												"nameLocation": "2038:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "2030:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:13:4"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "2065:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:9:4"
									},
									"scope": 1375,
									"src": "2012:176:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "2237:426:4",
										"statements": [
											{
												"assignments": [
													913
												],
												"declarations": [
													{
														"constant": false,
														"id": 913,
														"mutability": "mutable",
														"name": "tokens_swapped",
														"nameLocation": "2264:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 965,
														"src": "2256:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 912,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2256:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 934,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 915,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2296:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2296:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"arguments": [
																				{
																					"id": 919,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "2316:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_DEX_$1375",
																						"typeString": "contract DEX"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_DEX_$1375",
																						"typeString": "contract DEX"
																					}
																				],
																				"id": 918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2308:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 917,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2308:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2308:13:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "2308:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 922,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2332:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "2332:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2308:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 925,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2307:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 930,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2371:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DEX_$1375",
																				"typeString": "contract DEX"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DEX_$1375",
																				"typeString": "contract DEX"
																			}
																		],
																		"id": 929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2363:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 928,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2363:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2363:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 926,
																	"name": "tokenERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "2344:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$663",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 620,
																"src": "2344:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2344:33:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 914,
														"name": "calculatePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "2281:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2281:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2256:122:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 938,
																		"name": "tx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967270,
																		"src": "2425:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_transaction",
																			"typeString": "tx"
																		}
																	},
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "origin",
																	"nodeType": "MemberAccess",
																	"src": "2425:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 940,
																	"name": "tokens_swapped",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "2436:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 936,
																	"name": "tokenERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "2407:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$663",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 630,
																"src": "2407:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2407:44:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 935,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2399:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2399:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "2399:53:4"
											},
											{
												"expression": {
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 944,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "2473:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 945,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2480:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2480:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2473:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:4"
											},
											{
												"expression": {
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 949,
															"name": "investors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "2508:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 952,
														"indexExpression": {
															"expression": {
																"id": 950,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "2518:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "2518:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2508:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 953,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2532:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2532:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2508:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "2508:33:4"
											},
											{
												"expression": {
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 957,
														"name": "tokens_received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "2562:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 958,
														"name": "tokens_swapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "2580:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2562:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "2562:32:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 962,
															"name": "tokens_swapped",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "2634:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 961,
														"name": "TokensSwapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "2620:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2620:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "EmitStatement",
												"src": "2615:34:4"
											}
										]
									},
									"functionSelector": "7937c03d",
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ethToErc",
									"nameLocation": "2209:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2217:2:4"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2237:0:4"
									},
									"scope": 1375,
									"src": "2200:463:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "2726:500:4",
										"statements": [
											{
												"assignments": [
													972
												],
												"declarations": [
													{
														"constant": false,
														"id": 972,
														"mutability": "mutable",
														"name": "eth_swapped",
														"nameLocation": "2755:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1029,
														"src": "2747:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 971,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2747:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 988,
												"initialValue": {
													"arguments": [
														{
															"id": 974,
															"name": "token_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "2784:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 979,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2825:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DEX_$1375",
																				"typeString": "contract DEX"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DEX_$1375",
																				"typeString": "contract DEX"
																			}
																		],
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2817:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 977,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2817:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2817:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 975,
																	"name": "tokenERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "2798:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$663",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 620,
																"src": "2798:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2798:33:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 984,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2841:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_DEX_$1375",
																			"typeString": "contract DEX"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_DEX_$1375",
																			"typeString": "contract DEX"
																		}
																	],
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2833:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 982,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2833:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2833:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2833:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 973,
														"name": "calculatePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "2769:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2769:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2747:108:4"
											},
											{
												"assignments": [
													990,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2882:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1029,
														"src": "2877:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 989,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2877:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 998,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2930:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 991,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967270,
																	"src": "2895:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"src": "2895:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2895:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 994,
																"name": "eth_swapped",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "2917:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2895:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2895:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2876:57:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1000,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "2960:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65642e",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2969:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
																"typeString": "literal_string \"Transfer failed.\""
															},
															"value": "Transfer failed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
																"typeString": "literal_string \"Transfer failed.\""
															}
														],
														"id": 999,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2952:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2952:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "2952:36:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1007,
																		"name": "tx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967270,
																		"src": "3043:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_transaction",
																			"typeString": "tx"
																		}
																	},
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "origin",
																	"nodeType": "MemberAccess",
																	"src": "3043:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1011,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3062:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DEX_$1375",
																				"typeString": "contract DEX"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DEX_$1375",
																				"typeString": "contract DEX"
																			}
																		],
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3054:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1009,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3054:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3054:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1013,
																	"name": "token_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "3069:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1005,
																	"name": "tokenERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "3021:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$663",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 662,
																"src": "3021:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3021:61:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1004,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3013:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3013:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "3013:70:4"
											},
											{
												"expression": {
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1017,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "3104:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1018,
														"name": "eth_swapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "3111:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3104:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "3104:18:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1022,
															"name": "eth_swapped",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "3157:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1021,
														"name": "ETHSwapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "3146:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3146:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "EmitStatement",
												"src": "3141:28:4"
											},
											{
												"expression": {
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1025,
														"name": "eth_received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "3188:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1026,
														"name": "eth_swapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "3203:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3188:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "3188:26:4"
											}
										]
									},
									"functionSelector": "debc674c",
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ercToEth",
									"nameLocation": "2686:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "token_amount",
												"nameLocation": "2703:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "2695:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:22:4"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:4"
									},
									"scope": 1375,
									"src": "2677:549:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "3274:594:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1034,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3301:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3301:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3313:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3301:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1033,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3293:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3293:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "3293:22:4"
											},
											{
												"assignments": [
													1041
												],
												"declarations": [
													{
														"constant": false,
														"id": 1041,
														"mutability": "mutable",
														"name": "token_amount",
														"nameLocation": "3342:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "3334:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1040,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3334:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1042,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3359:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "3359:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1048,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "3398:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_DEX_$1375",
																								"typeString": "contract DEX"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_DEX_$1375",
																								"typeString": "contract DEX"
																							}
																						],
																						"id": 1047,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3390:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1046,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "3390:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1049,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3390:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1044,
																					"name": "tokenERC",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 716,
																					"src": "3371:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$663",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1045,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "balanceOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 620,
																				"src": "3371:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view external returns (uint256)"
																				}
																			},
																			"id": 1050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3371:33:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3359:45:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1052,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3358:47:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1055,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "3417:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_DEX_$1375",
																							"typeString": "contract DEX"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_DEX_$1375",
																							"typeString": "contract DEX"
																						}
																					],
																					"id": 1054,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3409:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1053,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "3409:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3409:13:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balance",
																			"nodeType": "MemberAccess",
																			"src": "3409:21:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"id": 1058,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3433:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "3433:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3409:33:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1061,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3408:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3358:85:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1063,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3357:87:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3334:110:4"
											},
											{
												"assignments": [
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "liquidity_added",
														"nameLocation": "3471:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "3463:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1065,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3463:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1082,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1067,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3490:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "3490:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1069,
																	"name": "total_liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "3502:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3490:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1071,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3489:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1074,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3530:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DEX_$1375",
																					"typeString": "contract DEX"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_DEX_$1375",
																					"typeString": "contract DEX"
																				}
																			],
																			"id": 1073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3522:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1072,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3522:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3522:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "3522:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1077,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3546:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "3546:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3522:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1080,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3521:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3489:67:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3463:93:4"
											},
											{
												"expression": {
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1083,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "3577:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1086,
														"indexExpression": {
															"expression": {
																"id": 1084,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "3587:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "3587:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3577:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1087,
														"name": "liquidity_added",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "3601:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3577:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "3577:39:4"
											},
											{
												"expression": {
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1090,
														"name": "total_liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "3637:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1091,
														"name": "liquidity_added",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "3656:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3637:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "3637:34:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1097,
																		"name": "tx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967270,
																		"src": "3720:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_transaction",
																			"typeString": "tx"
																		}
																	},
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "origin",
																	"nodeType": "MemberAccess",
																	"src": "3720:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1101,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3739:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DEX_$1375",
																				"typeString": "contract DEX"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DEX_$1375",
																				"typeString": "contract DEX"
																			}
																		],
																		"id": 1100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3731:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1099,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3731:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3731:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1103,
																	"name": "token_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "3746:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1095,
																	"name": "tokenERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "3698:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$663",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 662,
																"src": "3698:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3698:61:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1094,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3690:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3690:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "3690:70:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1108,
															"name": "liquidity_added",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "3794:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1107,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "3786:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3786:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1110,
												"nodeType": "EmitStatement",
												"src": "3781:29:4"
											},
											{
												"expression": {
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1111,
														"name": "liq_added",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "3829:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1112,
														"name": "liquidity_added",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "3841:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3829:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "3829:27:4"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "3247:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3254:2:4"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3274:0:4"
									},
									"scope": 1375,
									"src": "3238:630:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "3957:278:4",
										"statements": [
											{
												"assignments": [
													1126
												],
												"declarations": [
													{
														"constant": false,
														"id": 1126,
														"mutability": "mutable",
														"name": "token_amount",
														"nameLocation": "3984:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1164,
														"src": "3976:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1125,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3976:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1145,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1127,
																			"name": "eth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "4001:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1132,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "4034:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_DEX_$1375",
																								"typeString": "contract DEX"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_DEX_$1375",
																								"typeString": "contract DEX"
																							}
																						],
																						"id": 1131,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4026:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1130,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "4026:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1133,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4026:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1128,
																					"name": "tokenERC",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 716,
																					"src": "4007:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$663",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "balanceOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 620,
																				"src": "4007:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view external returns (uint256)"
																				}
																			},
																			"id": 1134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4007:33:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4001:39:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1136,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4000:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"components": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1139,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "4053:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_DEX_$1375",
																						"typeString": "contract DEX"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_DEX_$1375",
																						"typeString": "contract DEX"
																					}
																				],
																				"id": 1138,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4045:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1137,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4045:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4045:13:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "4045:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1142,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4044:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4000:67:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1144,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3999:69:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3976:92:4"
											},
											{
												"assignments": [
													1147
												],
												"declarations": [
													{
														"constant": false,
														"id": 1147,
														"mutability": "mutable",
														"name": "liquidity_added",
														"nameLocation": "4095:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 1164,
														"src": "4087:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1159,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1148,
																	"name": "eth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1118,
																	"src": "4114:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1149,
																	"name": "total_liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "4120:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4114:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1151,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4113:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1154,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4148:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DEX_$1375",
																				"typeString": "contract DEX"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DEX_$1375",
																				"typeString": "contract DEX"
																			}
																		],
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4140:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1152,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4140:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4140:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4140:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1157,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4139:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4113:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:75:4"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1160,
															"name": "token_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "4191:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1161,
															"name": "liquidity_added",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "4205:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1162,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4190:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1124,
												"id": 1163,
												"nodeType": "Return",
												"src": "4183:38:4"
											}
										]
									},
									"functionSelector": "5f244d4e",
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "liquidityAdded",
									"nameLocation": "3889:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "eth",
												"nameLocation": "3912:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "3904:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3903:13:4"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "3940:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3940:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "3949:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3949:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3939:18:4"
									},
									"scope": 1375,
									"src": "3880:355:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "4291:606:4",
										"statements": [
											{
												"assignments": [
													1171
												],
												"declarations": [
													{
														"constant": false,
														"id": 1171,
														"mutability": "mutable",
														"name": "eth_value",
														"nameLocation": "4318:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1239,
														"src": "4310:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1170,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4310:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1182,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1172,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "4331:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1175,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4347:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DEX_$1375",
																					"typeString": "contract DEX"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_DEX_$1375",
																					"typeString": "contract DEX"
																				}
																			],
																			"id": 1174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4339:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1173,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4339:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4339:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "4339:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4331:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1179,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4330:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1180,
														"name": "total_liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "4364:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4330:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4310:69:4"
											},
											{
												"assignments": [
													1184
												],
												"declarations": [
													{
														"constant": false,
														"id": 1184,
														"mutability": "mutable",
														"name": "token_value",
														"nameLocation": "4406:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1239,
														"src": "4398:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1183,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4398:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1197,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1185,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "4421:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1190,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "4456:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_DEX_$1375",
																						"typeString": "contract DEX"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_DEX_$1375",
																						"typeString": "contract DEX"
																					}
																				],
																				"id": 1189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4448:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1188,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4448:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4448:13:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 1186,
																			"name": "tokenERC",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 716,
																			"src": "4429:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$663",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 620,
																		"src": "4429:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4429:33:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4421:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1194,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4420:43:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1195,
														"name": "total_liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "4466:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4420:61:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4398:83:4"
											},
											{
												"expression": {
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1198,
														"name": "total_liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "4502:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1199,
														"name": "eth_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "4521:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4502:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "4502:28:4"
											},
											{
												"assignments": [
													1203,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1203,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4557:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1239,
														"src": "4552:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1202,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4552:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1211,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4603:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 1204,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967270,
																	"src": "4570:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"src": "4570:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4570:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1207,
																"name": "eth_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "4592:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4570:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4570:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4551:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1213,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "4633:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65642e",
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4642:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
																"typeString": "literal_string \"Transfer failed.\""
															},
															"value": "Transfer failed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
																"typeString": "literal_string \"Transfer failed.\""
															}
														],
														"id": 1212,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4625:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4625:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "4625:36:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1220,
																		"name": "tx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967270,
																		"src": "4712:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_transaction",
																			"typeString": "tx"
																		}
																	},
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "origin",
																	"nodeType": "MemberAccess",
																	"src": "4712:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1222,
																	"name": "token_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "4723:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1218,
																	"name": "tokenERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "4694:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$663",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 630,
																"src": "4694:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4694:41:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4686:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4686:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "4686:50:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1227,
															"name": "eth_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "4771:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1228,
															"name": "token_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "4782:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1226,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "4762:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4762:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "EmitStatement",
												"src": "4757:37:4"
											},
											{
												"expression": {
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1231,
														"name": "eth_received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "4813:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1232,
														"name": "eth_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "4828:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4813:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "4813:24:4"
											},
											{
												"expression": {
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1235,
														"name": "tokens_received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "4856:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1236,
														"name": "token_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "4874:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4856:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "4856:29:4"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "4258:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4275:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "4267:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4266:15:4"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4291:0:4"
									},
									"scope": 1375,
									"src": "4249:648:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "4994:272:4",
										"statements": [
											{
												"assignments": [
													1250
												],
												"declarations": [
													{
														"constant": false,
														"id": 1250,
														"mutability": "mutable",
														"name": "eth_value",
														"nameLocation": "5021:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1281,
														"src": "5013:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5013:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1251,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1242,
																	"src": "5034:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1254,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5050:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DEX_$1375",
																					"typeString": "contract DEX"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_DEX_$1375",
																					"typeString": "contract DEX"
																				}
																			],
																			"id": 1253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5042:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1252,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5042:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5042:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "5042:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5034:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1258,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5033:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1259,
														"name": "total_liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "5067:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5033:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5013:69:4"
											},
											{
												"assignments": [
													1263
												],
												"declarations": [
													{
														"constant": false,
														"id": 1263,
														"mutability": "mutable",
														"name": "token_value",
														"nameLocation": "5109:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1281,
														"src": "5101:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1262,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5101:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1276,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1264,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1242,
																	"src": "5124:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1269,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "5159:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_DEX_$1375",
																						"typeString": "contract DEX"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_DEX_$1375",
																						"typeString": "contract DEX"
																					}
																				],
																				"id": 1268,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5151:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1267,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5151:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5151:13:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 1265,
																			"name": "tokenERC",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 716,
																			"src": "5132:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$663",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 620,
																		"src": "5132:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5132:33:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5124:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1273,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5123:43:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1274,
														"name": "total_liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "5169:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5123:61:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5101:83:4"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1277,
															"name": "eth_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "5229:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1278,
															"name": "token_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "5240:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1279,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5228:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1248,
												"id": 1280,
												"nodeType": "Return",
												"src": "5221:31:4"
											}
										]
									},
									"functionSelector": "1eb928aa",
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "liquiditySubstracted",
									"nameLocation": "4918:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4947:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "4939:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4939:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4938:15:4"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "4977:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4977:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "4986:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4976:18:4"
									},
									"scope": 1375,
									"src": "4909:357:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "5337:71:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1291,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5390:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DEX_$1375",
																		"typeString": "contract DEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DEX_$1375",
																		"typeString": "contract DEX"
																	}
																],
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5382:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1289,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5382:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5382:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1287,
															"name": "tokenERC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "5363:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$663",
																"typeString": "contract IERC20"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 620,
														"src": "5363:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5363:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1286,
												"id": 1294,
												"nodeType": "Return",
												"src": "5356:40:4"
											}
										]
									},
									"functionSelector": "82b2e257",
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenBalance",
									"nameLocation": "5287:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5302:2:4"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "5328:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5328:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5327:9:4"
									},
									"scope": 1375,
									"src": "5278:130:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "5474:59:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1303,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5508:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_DEX_$1375",
																	"typeString": "contract DEX"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_DEX_$1375",
																	"typeString": "contract DEX"
																}
															],
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5500:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1301,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5500:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5500:13:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "5500:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1300,
												"id": 1306,
												"nodeType": "Return",
												"src": "5493:28:4"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "5429:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5439:2:4"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "5465:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5465:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5464:9:4"
									},
									"scope": 1375,
									"src": "5420:113:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "5578:190:4",
										"statements": [
											{
												"assignments": [
													1312
												],
												"declarations": [
													{
														"constant": false,
														"id": 1312,
														"mutability": "mutable",
														"name": "profit",
														"nameLocation": "5605:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1335,
														"src": "5597:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1311,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5597:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1319,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1313,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "5615:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5621:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "5615:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1316,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5614:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 1317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5626:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "5614:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5597:33:4"
											},
											{
												"assignments": [
													1321,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1321,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5655:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1335,
														"src": "5650:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1320,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5650:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1329,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5698:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 1322,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967270,
																	"src": "5668:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"src": "5668:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5668:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1325,
																"name": "profit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1312,
																"src": "5690:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5668:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5668:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5649:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1331,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "5728:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65642e",
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5737:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
																"typeString": "literal_string \"Transfer failed.\""
															},
															"value": "Transfer failed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
																"typeString": "literal_string \"Transfer failed.\""
															}
														],
														"id": 1330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5720:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5720:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "5720:36:4"
											}
										]
									},
									"functionSelector": "26c4e60d",
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distributeFee",
									"nameLocation": "5554:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5567:2:4"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5578:0:4"
									},
									"scope": 1375,
									"src": "5545:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "5842:52:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1343,
														"name": "investors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "5868:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1345,
													"indexExpression": {
														"id": 1344,
														"name": "who",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "5878:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5868:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1342,
												"id": 1346,
												"nodeType": "Return",
												"src": "5861:21:4"
											}
										]
									},
									"functionSelector": "66b3f6bf",
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invested",
									"nameLocation": "5789:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "who",
												"nameLocation": "5806:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "5798:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5798:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5797:13:4"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "5834:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5834:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:9:4"
									},
									"scope": 1375,
									"src": "5780:114:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "5933:146:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1354,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "5970:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "5970:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1360,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "6008:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DEX_$1375",
																				"typeString": "contract DEX"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DEX_$1375",
																				"typeString": "contract DEX"
																			}
																		],
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6000:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1358,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6000:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6000:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1356,
																	"name": "tokenERC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "5981:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$663",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 620,
																"src": "5981:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5981:33:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1351,
															"name": "tokenERC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "5952:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$663",
																"typeString": "contract IERC20"
															}
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 630,
														"src": "5952:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5952:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1364,
												"nodeType": "ExpressionStatement",
												"src": "5952:64:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1368,
																		"name": "tx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967270,
																		"src": "6056:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_transaction",
																			"typeString": "tx"
																		}
																	},
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "origin",
																	"nodeType": "MemberAccess",
																	"src": "6056:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6048:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1366,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6048:8:4",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6048:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1365,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "6035:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6035:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "6035:32:4"
											}
										]
									},
									"functionSelector": "d56b2889",
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "finish",
									"nameLocation": "5915:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5921:2:4"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5933:0:4"
									},
									"scope": 1375,
									"src": "5906:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1376,
							"src": "133:5951:4",
							"usedErrors": []
						}
					],
					"src": "39:6045:4"
				},
				"id": 4
			}
		}
	}
}